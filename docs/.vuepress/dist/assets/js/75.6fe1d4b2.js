(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{406:function(t,a,r){"use strict";r.r(a);var v=r(6),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/ght886/article/details/80479775",target:"_blank",rel:"noopener noreferrer"}},[t._v("模式、框架、架构和平台的区别"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"概念上的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念上的区别"}},[t._v("#")]),t._v(" 概念上的区别")]),t._v(" "),a("h3",{attrs:{id:"设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),a("p",[t._v("是在某种特定上下文中针对一个软件生命周期中出现的问题而给出的多次适用的解决方案。")]),t._v(" "),a("h3",{attrs:{id:"框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架"}},[t._v("#")]),t._v(" 框架")]),t._v(" "),a("p",[t._v("框架是一组软件组件，它们互相协作提供了针对某个给定的问题领域中的应用程序所用到的一种可复用的体系结构。")]),t._v(" "),a("p",[t._v("做WEB开发接触到最多的框架可数ORM框架，ORM框架只是所有数据关系映射框架的统称，")]),t._v(" "),a("p",[t._v("具体的如NHibernate、ActiveRecord等，框架是为了解决特定问题而存在的，其它诸如模板框架、缓存框架，框架不能直接使用，需要二次开发。")]),t._v(" "),a("h3",{attrs:{id:"架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),a("p",[t._v("软件体系结构通常被称为架构，指可以预制和可重构的软件框架结构。用于指导大型软件系统各个方面的设计。")]),t._v(" "),a("p",[t._v("简单的说架构就是一个蓝图，是一种设计方案，将客户的不同需求抽象成为抽象组件，并且能够描述这些抽象组件之间的通信和调用。")]),t._v(" "),a("p",[t._v("从大的层面来说，比如针对公司业务的B2C网站系统架构，里面可能会用到多种解决各方面问题的框架，")]),t._v(" "),a("p",[t._v("关注的是技术整合、扩展、可维护性。换个角度，在框架中也会涉及到架构问题，比如开发NHibernate框架，也需要考虑如何进行设计。")]),t._v(" "),a("h3",{attrs:{id:"平台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#平台"}},[t._v("#")]),t._v(" 平台")]),t._v(" "),a("p",[t._v("平台的概念类似框架，但又结合的架构的考虑，它是更高层面上的“框架”，准确说是一种应用。它是针对企业用户，为解决企业业务需要而形成的产品。")]),t._v(" "),a("p",[t._v("大小关系（不同角度）：")]),t._v(" "),a("p",[t._v("设计模式<框架<架构<平台，从复用角度讲，设计模式是代码级复用、框架是模块级复用、架构是系统级复用、平台是企业应用级复用。")]),t._v(" "),a("h2",{attrs:{id:"框架和架构的具体区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架和架构的具体区别"}},[t._v("#")]),t._v(" 框架和架构的具体区别")]),t._v(" "),a("p",[t._v("1、框架是一种特殊的软件，它并不能提供完整无缺的解决方案，而是为你构建解决方案提供良好的基础。框架是半成品。\n典型地， 框架是系统或子系统的半成品；框架中的服务可被最终应用系统直接调用，而框架中的扩展点是供应用开发人员定制的“可变化点”。")]),t._v(" "),a("p",[t._v("2、架构不是软件，而是关于软件如何设计的重要策略。架构体现在“构”字上，理解成构造，是一个动词性的，是一系列动作发生的策略性体现。\n软件架构决策设计到如何将软件系统分解成不同的部分、各部分之间的静态结构关系和动态交互关系等。经过完整的开发过程之后，\n这些架构决策将体现在最终开发出的软件系统中；当然，引入软件架构之后，整个开发过程编程了“分两步走”，而架构决策往往会体现在框架之中。")]),t._v(" "),a("p",[t._v("3、框架技术和架构技术的出现，都是为了解决软件系统日益复杂所带来的困难而采取“分而治之”思维的结果——先大局后局部，\n就出现了架构；先通用后专用，就出现了框架。下图很好地揭示了这一点。架构是问题的抽象解决方案，\n它关注大局而忽略细节；而框架是通用半成品，还必须根据具体需求进一步定制开发才能编程应用系统。")])])}),[],!1,null,null,null);a.default=_.exports}}]);