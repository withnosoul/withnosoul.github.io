(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,o,s=e[0],l=e[1],c=e[2],p=0,d=[];p<s.length;p++)o=s[p],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&d.push(a[o][0]),a[o]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(u&&u(e);d.length;)d.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==a[l]&&(r=!1)}r&&(i.splice(e--,1),n=o(o.s=t[0]))}return n}var r={},a={1:0},i=[];function o(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(n){var e=[],t=a[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=a[n]=[e,r]}));e.push(t[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(n){return o.p+"assets/js/"+({}[n]||n)+"."+{2:"8a8bdb65",3:"851cbd81",4:"90f818ed",5:"72ecddc7",6:"8b050283",7:"9189acab",8:"8dba4721",9:"18e91221",10:"365c7d20",11:"8da62f2a",12:"424f8cf6",13:"32a2e485",14:"942abab6",15:"81ee7b60",16:"97043e41",17:"6cee57c5",18:"34480bb4",19:"5f3218de",20:"777140d8",21:"259cb258",22:"8a93a64b",23:"d3c9fe99",24:"06d5d3cb",25:"7bf80eac",26:"bb018f19",27:"28fe9f8d",28:"bc0ce78f",29:"12d06619",30:"6ef800a1",31:"7a1fe559",32:"e83ff941",33:"61774113",34:"6ce88a48",35:"2507b10f",36:"ed496466",37:"d84ceae2",38:"c25fc754",39:"24b449ef",40:"a27969cf",41:"cb4fa787",42:"0df810fe",43:"48de924b",44:"de9f3da1",45:"0b3a0a3a",46:"83096143",47:"1bc4efb8",48:"7639cfc0",49:"8b44aa79",50:"af227c85",51:"39f789a7",52:"ba34525a",53:"0763586d",54:"c89a02a9",55:"97a1dd51",56:"c04047e5",57:"6b5f5bb5",58:"ebd870be",59:"ac376735",60:"fcaf2663",61:"341c5ab8",62:"129a53e5",63:"a5c56114",64:"33040327",65:"9f155eed",66:"6b9ab579",67:"7217d41e",68:"6acd0e01",69:"c2fc2647",70:"869a0592",71:"1157940e",72:"41e7d041",73:"63442ac1",74:"cf395801",75:"6a9c875f",76:"0d8c093c",77:"9e7d8e88",78:"a4e1b9e5",79:"f1bf6544",80:"354012ce",81:"89183bc0",82:"6c577dc5"}[n]+".js"}(n);var l=new Error;i=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=a[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+i+")",l.name="ChunkLoadError",l.type=r,l.request=i,t[1](l)}a[n]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(e)},o.m=n,o.c=r,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/",o.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var u=l;i.push([100,0]),t()}([function(n,e){n.exports=function(n){return"function"==typeof n}},function(n,e,t){var r=t(25),a=Function.prototype,i=a.bind,o=a.call,s=r&&i.bind(o,o);n.exports=r?function(n){return n&&s(n)}:function(n){return n&&function(){return o.apply(n,arguments)}}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(67),a="object"==typeof self&&self&&self.Object===Object&&self,i=r||a||Function("return this")();n.exports=i},function(n,e,t){"use strict";function r(n,e,t,r,a,i,o,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},c._ssrRegister=l):a&&(l=s?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(n,e){return l.call(e),u(n,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){var r=t(3);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){var r=t(1),a=t(45),i=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return i(a(n),e)}},function(n,e,t){var r=t(0),a="object"==typeof document&&document.all,i=void 0===a&&void 0!==a;n.exports=i?function(n){return"object"==typeof n?null!==n:r(n)||n===a}:function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){var r=t(156),a=t(159);n.exports=function(n,e){var t=a(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return i})),t.d(e,"j",(function(){return o})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return u})),t.d(e,"c",(function(){return p})),t.d(e,"f",(function(){return d})),t.d(e,"l",(function(){return m})),t.d(e,"m",(function(){return f})),t.d(e,"d",(function(){return g})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return x}));const r=/#.*$/,a=/\.(md|html)$/,i=/\/$/,o=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(r,"").replace(a,"")}function l(n){return o.test(n)}function c(n){return/^mailto:/.test(n)}function u(n){return/^tel:/.test(n)}function p(n){if(l(n))return n;if(!n)return"404";const e=n.match(r),t=e?e[0]:"",a=s(n);return i.test(a)?n:a+".html"+t}function d(n,e){const t=n.hash,a=function(n){const e=n&&n.match(r);if(e)return e[0]}(e);if(a&&t!==a)return!1;return s(n.path)===s(e)}function m(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){const r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;const a=e.split("/");t&&a[a.length-1]||a.pop();const i=n.replace(/^\//,"").split("/");for(let n=0;n<i.length;n++){const e=i[n];".."===e?a.pop():"."!==e&&a.push(e)}""!==a[0]&&a.unshift("");return a.join("/")}(e,t));const r=s(e);for(let e=0;e<n.length;e++)if(s(n[e].regularPath)===r)return Object.assign({},n[e],{type:"page",path:p(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function f(n,e,t,r){const{pages:a,themeConfig:i}=t,o=r&&i.locales&&i.locales[r]||i;if("auto"===(n.frontmatter.sidebar||o.sidebar||i.sidebar))return h(n);const s=o.sidebar||i.sidebar;if(s){const{base:t,config:r}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const r in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(r)))return{base:r,config:e[r]};var t;return{}}(e,s);return"auto"===r?h(n):r?r.map(n=>function n(e,t,r,a=1){if("string"==typeof e)return m(t,e,r);if(Array.isArray(e))return Object.assign(m(t,e[0],r),{title:e[1]});{a>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const i=e.children||[];return 0===i.length&&e.path?Object.assign(m(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:i.map(e=>n(e,t,r,a+1)),collapsable:!1!==e.collapsable}}}(n,a,t)):[]}return[]}function h(n){const e=g(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function g(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function y(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function x(n,e){return y(e)-y(n)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){var r=t(14),a=t(141),i=t(142),o=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":o&&o in Object(n)?a(n):i(n)}},function(n,e,t){var r=t(5).Symbol;n.exports=r},function(n,e,t){var r=t(7),a=t(62),i=t(96),o=t(24),s=t(53),l=TypeError,c=Object.defineProperty,u=Object.getOwnPropertyDescriptor;e.f=r?i?function(n,e,t){if(o(n),e=s(e),o(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=u(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(o(n),e=s(e),o(t),a)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(2),a=t(0),i=function(n){return a(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?i(r[n]):r[n]&&r[n][e]}},function(n,e,t){var r=t(7),a=t(15),i=t(29);n.exports=r?function(n,e,t){return a.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(146),a=t(147),i=t(148),o=t(149),s=t(150);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(69);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(10)(Object,"create");n.exports=r},function(n,e,t){var r=t(168);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(40);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=a(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),u=r.speed,p=r.easing;return l.offsetWidth,o((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,a}(n,u,p)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*a(Math.random()*e,.1,.95)),e=a(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var a,o=e.querySelector(r.barSelector),l=n?"-100":i(t.status||0),u=document.querySelector(r.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(a=e.querySelector(r.spinnerSelector))&&d(a),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(e),e},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,a=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);a--;)if((r=n[a]+i)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,a,i=arguments;if(2==i.length)for(t in e)void 0!==(a=e[t])&&e.hasOwnProperty(t)&&r(n,t,a);else r(n,i[1],i[2])}}();function l(n,e){return("string"==typeof n?n:p(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=p(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function u(n,e){var t,r=p(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=a)},function(n,e,t){var r=t(9),a=String,i=TypeError;n.exports=function(n){if(r(n))return n;throw i(a(n)+" is not an object")}},function(n,e,t){var r=t(3);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){var r=t(43),a=t(51);n.exports=function(n){return r(a(n))}},function(n,e,t){var r=t(2),a=t(59),i=t(8),o=t(61),s=t(57),l=t(56),c=a("wks"),u=r.Symbol,p=u&&u.for,d=l?u:u&&u.withoutSetter||o;n.exports=function(n){if(!i(c,n)||!s&&"string"!=typeof c[n]){var e="Symbol."+n;s&&i(u,n)?c[n]=u[n]:c[n]=l&&p?p(e):d(e)}return c[n]}},function(n,e,t){var r=t(25),a=Function.prototype.call;n.exports=r?a.bind(a):function(){return a.apply(a,arguments)}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var r=t(1),a=r({}.toString),i=r("".slice);n.exports=function(n){return i(a(n),8,-1)}},function(n,e,t){var r=t(2),a=t(32),i=r["__core-js_shared__"]||a("__core-js_shared__",{});n.exports=i},function(n,e,t){var r=t(2),a=Object.defineProperty;n.exports=function(n,e){try{a(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(140),a=t(12),i=Object.prototype,o=i.hasOwnProperty,s=i.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return a(n)&&o.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(10)(t(5),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(160),a=t(167),i=t(169),o=t(170),s=t(171);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(4),a=t(40),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!a(n))||(o.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(13),a=t(12);n.exports=function(n){return"symbol"==typeof n||a(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){var r=t(2),a=t(50).f,i=t(17),o=t(108),s=t(32),l=t(63),c=t(121);n.exports=function(n,e){var t,u,p,d,m,f=n.target,h=n.global,g=n.stat;if(t=h?r:g?r[f]||s(f,{}):(r[f]||{}).prototype)for(u in e){if(d=e[u],p=n.dontCallGetSet?(m=a(t,u))&&m.value:t[u],!c(h?u:f+(g?".":"#")+u,n.forced)&&void 0!==p){if(typeof d==typeof p)continue;l(d,p)}(n.sham||p&&p.sham)&&i(d,"sham",!0),o(t,u,d,n)}}},function(n,e,t){var r=t(1),a=t(3),i=t(30),o=Object,s=r("".split);n.exports=a((function(){return!o("z").propertyIsEnumerable(0)}))?function(n){return"String"==i(n)?s(n,""):o(n)}:o},function(n,e,t){var r=t(0),a=t(106),i=TypeError;n.exports=function(n){if(r(n))return n;throw i(a(n)+" is not a function")}},function(n,e,t){var r=t(51),a=Object;n.exports=function(n){return a(r(n))}},function(n,e){n.exports={}},function(n,e,t){var r=t(119);n.exports=function(n){return r(n.length)}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,i=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,p=Math.max,d=Math.min,m=function(){return c.Date.now()};function f(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function h(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(f(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=f(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=a.test(n);return s||i.test(n)?o(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,a,i,o,s,l,c=0,u=!1,g=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,i=a;return r=a=void 0,c=e,o=n.apply(i,t)}function y(n){return c=n,s=setTimeout(k,e),u?b(n):o}function x(n){var t=n-l;return void 0===l||t>=e||t<0||g&&n-c>=i}function k(){var n=m();if(x(n))return E(n);s=setTimeout(k,function(n){var t=e-(n-l);return g?d(t,i-(n-c)):t}(n))}function E(n){return s=void 0,v&&r?b(n):(r=a=void 0,o)}function S(){var n=m(),t=x(n);if(r=arguments,a=this,l=n,t){if(void 0===s)return y(l);if(g)return s=setTimeout(k,e),b(l)}return void 0===s&&(s=setTimeout(k,e)),o}return e=h(e)||0,f(t)&&(u=!!t.leading,i=(g="maxWait"in t)?p(h(t.maxWait)||0,e):i,v="trailing"in t?!!t.trailing:v),S.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=a=s=void 0},S.flush=function(){return void 0===s?o:E(m())},S}},function(n,e,t){var r=t(7),a=t(28),i=t(102),o=t(29),s=t(26),l=t(53),c=t(8),u=t(62),p=Object.getOwnPropertyDescriptor;e.f=r?p:function(n,e){if(n=s(n),e=l(e),u)try{return p(n,e)}catch(n){}if(c(n,e))return o(!a(i.f,n,e),n[e])}},function(n,e,t){var r=t(52),a=TypeError;n.exports=function(n){if(r(n))throw a("Can't call method on "+n);return n}},function(n,e){n.exports=function(n){return null==n}},function(n,e,t){var r=t(103),a=t(54);n.exports=function(n){var e=r(n,"string");return a(e)?e:e+""}},function(n,e,t){var r=t(16),a=t(0),i=t(55),o=t(56),s=Object;n.exports=o?function(n){return"symbol"==typeof n}:function(n){var e=r("Symbol");return a(e)&&i(e.prototype,s(n))}},function(n,e,t){var r=t(1);n.exports=r({}.isPrototypeOf)},function(n,e,t){var r=t(57);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(58),a=t(3);n.exports=!!Object.getOwnPropertySymbols&&!a((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){var r,a,i=t(2),o=t(104),s=i.process,l=i.Deno,c=s&&s.versions||l&&l.version,u=c&&c.v8;u&&(a=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!a&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(a=+r[1]),n.exports=a},function(n,e,t){var r=t(60),a=t(31);(n.exports=function(n,e){return a[n]||(a[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.25.0",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.25.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e){n.exports=!1},function(n,e,t){var r=t(1),a=0,i=Math.random(),o=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+o(++a+i,36)}},function(n,e,t){var r=t(7),a=t(3),i=t(95);n.exports=!r&&!a((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(8),a=t(114),i=t(50),o=t(15);n.exports=function(n,e,t){for(var s=a(e),l=o.f,c=i.f,u=0;u<s.length;u++){var p=s[u];r(n,p)||t&&r(t,p)||l(n,p,c(e,p))}}},function(n,e,t){var r=t(118);n.exports=function(n){var e=+n;return e!=e||0===e?0:r(e)}},function(n,e,t){var r=t(1),a=t(24),i=t(128);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return a(t),i(r),e?n(t,r):t.__proto__=r,t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,a=n.length;++t<r;)n[a+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(18),a=t(151),i=t(152),o=t(153),s=t(154),l=t(155);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=a,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(13),a=t(35);n.exports=function(n){if(!a(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(172),a=t(12);n.exports=function n(e,t,i,o,s){return e===t||(null==e||null==t||!a(e)&&!a(t)?e!=e&&t!=t:r(e,t,i,o,n,s))}},function(n,e,t){var r=t(74),a=t(175),i=t(75);n.exports=function(n,e,t,o,s,l){var c=1&t,u=n.length,p=e.length;if(u!=p&&!(c&&p>u))return!1;var d=l.get(n),m=l.get(e);if(d&&m)return d==e&&m==n;var f=-1,h=!0,g=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++f<u;){var v=n[f],b=e[f];if(o)var y=c?o(b,v,f,e,n,l):o(v,b,f,n,e,l);if(void 0!==y){if(y)continue;h=!1;break}if(g){if(!a(e,(function(n,e){if(!i(g,e)&&(v===n||s(v,n,t,o,l)))return g.push(e)}))){h=!1;break}}else if(v!==b&&!s(v,b,t,o,l)){h=!1;break}}return l.delete(n),l.delete(e),h}},function(n,e,t){var r=t(36),a=t(173),i=t(174);function o(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}o.prototype.add=o.prototype.push=a,o.prototype.has=i,n.exports=o},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(185),a=t(191),i=t(80);n.exports=function(n){return i(n)?r(n):a(n)}},function(n,e,t){(function(n){var r=t(5),a=t(187),i=e&&!e.nodeType&&e,o=i&&"object"==typeof n&&n&&!n.nodeType&&n,s=o&&o.exports===i?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||a;n.exports=l}).call(this,t(48)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(188),a=t(189),i=t(190),o=i&&i.isTypedArray,s=o?a(o):r;n.exports=s},function(n,e,t){var r=t(70),a=t(38);n.exports=function(n){return null!=n&&a(n.length)&&!r(n)}},function(n,e,t){var r=t(10)(t(5),"Set");n.exports=r},function(n,e,t){var r=t(35);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(85),a=t(22);n.exports=function(n,e){for(var t=0,i=(e=r(e,n)).length;null!=n&&t<i;)n=n[a(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var r=t(4),a=t(39),i=t(202),o=t(205);n.exports=function(n,e){return r(n)?n:a(n,e)?[n]:i(o(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(138),a=t(143),i=t(214),o=t(222),s=t(231),l=t(99),c=i((function(n){var e=l(n);return s(e)&&(e=void 0),o(r(n,1,s,!0),a(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,a=r.exec(t);if(!a)return t;var i="",o=0,s=0;for(o=a.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==o&&(i+=t.substring(s,o)),s=o+1,i+=e}return s!==o?i+t.substring(s,o):i}},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},a=(t(235),t(6)),i=Object(a.a)(r,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=i.exports},function(n,e,t){"use strict";t.r(e);var r={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},a=(t(236),t(6)),i=Object(a.a)(r,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,r){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=i.exports},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var r=t(2),a=t(9),i=r.document,o=a(i)&&a(i.createElement);n.exports=function(n){return o?i.createElement(n):{}}},function(n,e,t){var r=t(7),a=t(3);n.exports=r&&a((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){var r=t(59),a=t(61),i=r("keys");n.exports=function(n){return i[n]||(i[n]=a(n))}},function(n,e,t){var r=t(1),a=t(8),i=t(26),o=t(116).indexOf,s=t(46),l=r([].push);n.exports=function(n,e){var t,r=i(n),c=0,u=[];for(t in r)!a(s,t)&&a(r,t)&&l(u,t);for(;e.length>c;)a(r,t=e[c++])&&(~o(u,t)||l(u,t));return u}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){n.exports=t(241)},function(n,e,t){"use strict";var r=t(42),a=t(122).left,i=t(123),o=t(58),s=t(124);r({target:"Array",proto:!0,forced:!i("reduce")||!s&&o>79&&o<83},{reduce:function(n){var e=arguments.length;return a(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,i=a&&!r.call({1:2},1);e.f=i?function(n){var e=a(this,n);return!!e&&e.enumerable}:r},function(n,e,t){var r=t(28),a=t(9),i=t(54),o=t(105),s=t(107),l=t(27),c=TypeError,u=l("toPrimitive");n.exports=function(n,e){if(!a(n)||i(n))return n;var t,l=o(n,u);if(l){if(void 0===e&&(e="default"),t=r(l,n,e),!a(t)||i(t))return t;throw c("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){var r=t(16);n.exports=r("navigator","userAgent")||""},function(n,e,t){var r=t(44),a=t(52);n.exports=function(n,e){var t=n[e];return a(t)?void 0:r(t)}},function(n,e){var t=String;n.exports=function(n){try{return t(n)}catch(n){return"Object"}}},function(n,e,t){var r=t(28),a=t(0),i=t(9),o=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&a(t=n.toString)&&!i(s=r(t,n)))return s;if(a(t=n.valueOf)&&!i(s=r(t,n)))return s;if("string"!==e&&a(t=n.toString)&&!i(s=r(t,n)))return s;throw o("Can't convert object to primitive value")}},function(n,e,t){var r=t(0),a=t(15),i=t(109),o=t(32);n.exports=function(n,e,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:e;if(r(t)&&i(t,c,s),s.global)l?n[e]=t:o(e,t);else{try{s.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:a.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e,t){var r=t(3),a=t(0),i=t(8),o=t(7),s=t(110).CONFIGURABLE,l=t(111),c=t(112),u=c.enforce,p=c.get,d=Object.defineProperty,m=o&&!r((function(){return 8!==d((function(){}),"length",{value:8}).length})),f=String(String).split("String"),h=n.exports=function(n,e,t){"Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!i(n,"name")||s&&n.name!==e)&&(o?d(n,"name",{value:e,configurable:!0}):n.name=e),m&&t&&i(t,"arity")&&n.length!==t.arity&&d(n,"length",{value:t.arity});try{t&&i(t,"constructor")&&t.constructor?o&&d(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var r=u(n);return i(r,"source")||(r.source=f.join("string"==typeof e?e:"")),n};Function.prototype.toString=h((function(){return a(this)&&p(this).source||l(this)}),"toString")},function(n,e,t){var r=t(7),a=t(8),i=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,s=a(i,"name"),l=s&&"something"===function(){}.name,c=s&&(!r||r&&o(i,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){var r=t(1),a=t(0),i=t(31),o=r(Function.toString);a(i.inspectSource)||(i.inspectSource=function(n){return o(n)}),n.exports=i.inspectSource},function(n,e,t){var r,a,i,o=t(113),s=t(2),l=t(1),c=t(9),u=t(17),p=t(8),d=t(31),m=t(97),f=t(46),h=s.TypeError,g=s.WeakMap;if(o||d.state){var v=d.state||(d.state=new g),b=l(v.get),y=l(v.has),x=l(v.set);r=function(n,e){if(y(v,n))throw h("Object already initialized");return e.facade=n,x(v,n,e),e},a=function(n){return b(v,n)||{}},i=function(n){return y(v,n)}}else{var k=m("state");f[k]=!0,r=function(n,e){if(p(n,k))throw h("Object already initialized");return e.facade=n,u(n,k,e),e},a=function(n){return p(n,k)?n[k]:{}},i=function(n){return p(n,k)}}n.exports={set:r,get:a,has:i,enforce:function(n){return i(n)?a(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!c(e)||(t=a(e)).type!==n)throw h("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var r=t(2),a=t(0),i=r.WeakMap;n.exports=a(i)&&/native code/.test(String(i))},function(n,e,t){var r=t(16),a=t(1),i=t(115),o=t(120),s=t(24),l=a([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=i.f(s(n)),t=o.f;return t?l(e,t(n)):e}},function(n,e,t){var r=t(98),a=t(94).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,a)}},function(n,e,t){var r=t(26),a=t(117),i=t(47),o=function(n){return function(e,t,o){var s,l=r(e),c=i(l),u=a(o,c);if(n&&t!=t){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((n||u in l)&&l[u]===t)return n||u||0;return!n&&-1}};n.exports={includes:o(!0),indexOf:o(!1)}},function(n,e,t){var r=t(64),a=Math.max,i=Math.min;n.exports=function(n,e){var t=r(n);return t<0?a(t+e,0):i(t,e)}},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?r:t)(e)}},function(n,e,t){var r=t(64),a=Math.min;n.exports=function(n){return n>0?a(r(n),9007199254740991):0}},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(3),a=t(0),i=/#|\.prototype\./,o=function(n,e){var t=l[s(n)];return t==u||t!=c&&(a(e)?r(e):!!e)},s=o.normalize=function(n){return String(n).replace(i,".").toLowerCase()},l=o.data={},c=o.NATIVE="N",u=o.POLYFILL="P";n.exports=o},function(n,e,t){var r=t(44),a=t(45),i=t(43),o=t(47),s=TypeError,l=function(n){return function(e,t,l,c){r(t);var u=a(e),p=i(u),d=o(u),m=n?d-1:0,f=n?-1:1;if(l<2)for(;;){if(m in p){c=p[m],m+=f;break}if(m+=f,n?m<0:d<=m)throw s("Reduce of empty array with no initial value")}for(;n?m>=0:d>m;m+=f)m in p&&(c=t(c,p[m],m,u));return c}};n.exports={left:l(!1),right:l(!0)}},function(n,e,t){"use strict";var r=t(3);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){var r=t(30),a=t(2);n.exports="process"==r(a.process)},function(n,e,t){var r=t(42),a=t(2),i=t(126),o=t(127),s=a.WebAssembly,l=7!==Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=o(n,e,l),r({global:!0,constructor:!0,arity:1,forced:l},t)},u=function(n,e){if(s&&s[n]){var t={};t[n]=o("WebAssembly."+n,e,l),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return i(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return i(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return i(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return i(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return i(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return i(n,this,arguments)}})),c("URIError",(function(n){return function(e){return i(n,this,arguments)}})),u("CompileError",(function(n){return function(e){return i(n,this,arguments)}})),u("LinkError",(function(n){return function(e){return i(n,this,arguments)}})),u("RuntimeError",(function(n){return function(e){return i(n,this,arguments)}}))},function(n,e,t){var r=t(25),a=Function.prototype,i=a.apply,o=a.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(i):function(){return o.apply(i,arguments)})},function(n,e,t){"use strict";var r=t(16),a=t(8),i=t(17),o=t(55),s=t(65),l=t(63),c=t(129),u=t(130),p=t(131),d=t(135),m=t(136),f=t(137),h=t(7),g=t(60);n.exports=function(n,e,t,v){var b=v?2:1,y=n.split("."),x=y[y.length-1],k=r.apply(null,y);if(k){var E=k.prototype;if(!g&&a(E,"cause")&&delete E.cause,!t)return k;var S=r("Error"),w=e((function(n,e){var t=p(v?e:n,void 0),r=v?new k(n):new k;return void 0!==t&&i(r,"message",t),f&&i(r,"stack",m(r.stack,2)),this&&o(E,this)&&u(r,this,w),arguments.length>b&&d(r,arguments[b]),r}));if(w.prototype=E,"Error"!==x?s?s(w,S):l(w,S,{name:!0}):h&&"stackTraceLimit"in k&&(c(w,k,"stackTraceLimit"),c(w,k,"prepareStackTrace")),l(w,k),!g)try{E.name!==x&&i(E,"name",x),E.constructor=w}catch(n){}return w}}},function(n,e,t){var r=t(0),a=String,i=TypeError;n.exports=function(n){if("object"==typeof n||r(n))return n;throw i("Can't set "+a(n)+" as a prototype")}},function(n,e,t){var r=t(15).f;n.exports=function(n,e,t){t in n||r(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){var r=t(0),a=t(9),i=t(65);n.exports=function(n,e,t){var o,s;return i&&r(o=e.constructor)&&o!==t&&a(s=o.prototype)&&s!==t.prototype&&i(n,s),n}},function(n,e,t){var r=t(132);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){var r=t(133),a=String;n.exports=function(n){if("Symbol"===r(n))throw TypeError("Cannot convert a Symbol value to a string");return a(n)}},function(n,e,t){var r=t(134),a=t(0),i=t(30),o=t(27)("toStringTag"),s=Object,l="Arguments"==i(function(){return arguments}());n.exports=r?i:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),o))?t:l?i(e):"Object"==(r=i(e))&&a(e.callee)?"Arguments":r}},function(n,e,t){var r={};r[t(27)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){var r=t(9),a=t(17);n.exports=function(n,e){r(e)&&"cause"in e&&a(n,"cause",e.cause)}},function(n,e,t){var r=t(1),a=Error,i=r("".replace),o=String(a("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(o);n.exports=function(n,e){if(l&&"string"==typeof n&&!a.prepareStackTrace)for(;e--;)n=i(n,s,"");return n}},function(n,e,t){var r=t(3),a=t(29);n.exports=!r((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",a(1,7)),7!==n.stack)}))},function(n,e,t){var r=t(66),a=t(139);n.exports=function n(e,t,i,o,s){var l=-1,c=e.length;for(i||(i=a),s||(s=[]);++l<c;){var u=e[l];t>0&&i(u)?t>1?n(u,t-1,i,o,s):r(s,u):o||(s[s.length]=u)}return s}},function(n,e,t){var r=t(14),a=t(33),i=t(4),o=r?r.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||a(n)||!!(o&&n&&n[o])}},function(n,e,t){var r=t(13),a=t(12);n.exports=function(n){return a(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(14),a=Object.prototype,i=a.hasOwnProperty,o=a.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=i.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var a=o.call(n);return r&&(e?n[s]=t:delete n[s]),a}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(144),a=t(200),i=t(41),o=t(4),s=t(211);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?o(n)?a(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(145),a=t(199),i=t(83);n.exports=function(n){var e=a(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(68),a=t(72);n.exports=function(n,e,t,i){var o=t.length,s=o,l=!i;if(null==n)return!s;for(n=Object(n);o--;){var c=t[o];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++o<s;){var u=(c=t[o])[0],p=n[u],d=c[1];if(l&&c[2]){if(void 0===p&&!(u in n))return!1}else{var m=new r;if(i)var f=i(p,d,u,n,e,m);if(!(void 0===f?a(d,p,3,i,m):f))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(19),a=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():a.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(19);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(19);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(19);n.exports=function(n,e){var t=this.__data__,a=r(t,n);return a<0?(++this.size,t.push([n,e])):t[a][1]=e,this}},function(n,e,t){var r=t(18);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(18),a=t(34),i=t(36);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var o=t.__data__;if(!a||o.length<199)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(o)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(70),a=t(157),i=t(35),o=t(71),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,p=c.hasOwnProperty,d=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||a(n))&&(r(n)?d:s).test(o(n))}},function(n,e,t){var r,a=t(158),i=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var r=t(5)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(161),a=t(18),i=t(34);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||a),string:new r}}},function(n,e,t){var r=t(162),a=t(163),i=t(164),o=t(165),s=t(166);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(20);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(20),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return a.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(20),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:a.call(e,n)}},function(n,e,t){var r=t(20);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(21);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(21);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(21);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(21);n.exports=function(n,e){var t=r(this,n),a=t.size;return t.set(n,e),this.size+=t.size==a?0:1,this}},function(n,e,t){var r=t(68),a=t(73),i=t(176),o=t(179),s=t(195),l=t(4),c=t(77),u=t(79),p="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,f,h){var g=l(n),v=l(e),b=g?"[object Array]":s(n),y=v?"[object Array]":s(e),x=(b="[object Arguments]"==b?p:b)==p,k=(y="[object Arguments]"==y?p:y)==p,E=b==y;if(E&&c(n)){if(!c(e))return!1;g=!0,x=!1}if(E&&!x)return h||(h=new r),g||u(n)?a(n,e,t,m,f,h):i(n,e,b,t,m,f,h);if(!(1&t)){var S=x&&d.call(n,"__wrapped__"),w=k&&d.call(e,"__wrapped__");if(S||w){var T=S?n.value():n,C=w?e.value():e;return h||(h=new r),f(T,C,t,m,h)}}return!!E&&(h||(h=new r),o(n,e,t,m,f,h))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(14),a=t(177),i=t(69),o=t(73),s=t(178),l=t(37),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,p,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!p(new a(n),new a(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=s;case"[object Set]":var f=1&r;if(m||(m=l),n.size!=e.size&&!f)return!1;var h=d.get(n);if(h)return h==e;r|=2,d.set(n,e);var g=o(m(n),m(e),r,c,p,d);return d.delete(n),g;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,t){var r=t(5).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(180),a=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,o,s){var l=1&t,c=r(n),u=c.length;if(u!=r(e).length&&!l)return!1;for(var p=u;p--;){var d=c[p];if(!(l?d in e:a.call(e,d)))return!1}var m=s.get(n),f=s.get(e);if(m&&f)return m==e&&f==n;var h=!0;s.set(n,e),s.set(e,n);for(var g=l;++p<u;){var v=n[d=c[p]],b=e[d];if(i)var y=l?i(b,v,d,e,n,s):i(v,b,d,n,e,s);if(!(void 0===y?v===b||o(v,b,t,i,s):y)){h=!1;break}g||(g="constructor"==d)}if(h&&!g){var x=n.constructor,k=e.constructor;x==k||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof k&&k instanceof k||(h=!1)}return s.delete(n),s.delete(e),h}},function(n,e,t){var r=t(181),a=t(182),i=t(76);n.exports=function(n){return r(n,i,a)}},function(n,e,t){var r=t(66),a=t(4);n.exports=function(n,e,t){var i=e(n);return a(n)?i:r(i,t(n))}},function(n,e,t){var r=t(183),a=t(184),i=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(n){return null==n?[]:(n=Object(n),r(o(n),(function(e){return i.call(n,e)})))}:a;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,a=0,i=[];++t<r;){var o=n[t];e(o,t,n)&&(i[a++]=o)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(186),a=t(33),i=t(4),o=t(77),s=t(78),l=t(79),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),u=!t&&a(n),p=!t&&!u&&o(n),d=!t&&!u&&!p&&l(n),m=t||u||p||d,f=m?r(n.length,String):[],h=f.length;for(var g in n)!e&&!c.call(n,g)||m&&("length"==g||p&&("offset"==g||"parent"==g)||d&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,h))||f.push(g);return f}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(13),a=t(38),i=t(12),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&a(n.length)&&!!o[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(67),a=e&&!e.nodeType&&e,i=a&&"object"==typeof n&&n&&!n.nodeType&&n,o=i&&i.exports===a&&r.process,s=function(){try{var n=i&&i.require&&i.require("util").types;return n||o&&o.binding&&o.binding("util")}catch(n){}}();n.exports=s}).call(this,t(48)(n))},function(n,e,t){var r=t(192),a=t(193),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return a(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(194)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(196),a=t(34),i=t(197),o=t(81),s=t(198),l=t(13),c=t(71),u=c(r),p=c(a),d=c(i),m=c(o),f=c(s),h=l;(r&&"[object DataView]"!=h(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=h(new a)||i&&"[object Promise]"!=h(i.resolve())||o&&"[object Set]"!=h(new o)||s&&"[object WeakMap]"!=h(new s))&&(h=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case u:return"[object DataView]";case p:return"[object Map]";case d:return"[object Promise]";case m:return"[object Set]";case f:return"[object WeakMap]"}return e}),n.exports=h},function(n,e,t){var r=t(10)(t(5),"DataView");n.exports=r},function(n,e,t){var r=t(10)(t(5),"Promise");n.exports=r},function(n,e,t){var r=t(10)(t(5),"WeakMap");n.exports=r},function(n,e,t){var r=t(82),a=t(76);n.exports=function(n){for(var e=a(n),t=e.length;t--;){var i=e[t],o=n[i];e[t]=[i,o,r(o)]}return e}},function(n,e,t){var r=t(72),a=t(201),i=t(208),o=t(39),s=t(82),l=t(83),c=t(22);n.exports=function(n,e){return o(n)&&s(e)?l(c(n),e):function(t){var o=a(t,n);return void 0===o&&o===e?i(t,n):r(e,o,3)}}},function(n,e,t){var r=t(84);n.exports=function(n,e,t){var a=null==n?void 0:r(n,e);return void 0===a?t:a}},function(n,e,t){var r=t(203),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,o=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(a,(function(n,t,r,a){e.push(r?a.replace(i,"$1"):t||n)})),e}));n.exports=o},function(n,e,t){var r=t(204);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(36);function a(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,a=e?e.apply(this,r):r[0],i=t.cache;if(i.has(a))return i.get(a);var o=n.apply(this,r);return t.cache=i.set(a,o)||i,o};return t.cache=new(a.Cache||r),t}a.Cache=r,n.exports=a},function(n,e,t){var r=t(206);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(14),a=t(207),i=t(4),o=t(40),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return a(e,n)+"";if(o(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,a=Array(r);++t<r;)a[t]=e(n[t],t,n);return a}},function(n,e,t){var r=t(209),a=t(210);n.exports=function(n,e){return null!=n&&a(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(85),a=t(33),i=t(4),o=t(78),s=t(38),l=t(22);n.exports=function(n,e,t){for(var c=-1,u=(e=r(e,n)).length,p=!1;++c<u;){var d=l(e[c]);if(!(p=null!=n&&t(n,d)))break;n=n[d]}return p||++c!=u?p:!!(u=null==n?0:n.length)&&s(u)&&o(d,u)&&(i(n)||a(n))}},function(n,e,t){var r=t(212),a=t(213),i=t(39),o=t(22);n.exports=function(n){return i(n)?r(o(n)):a(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(84);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(41),a=t(215),i=t(217);n.exports=function(n,e){return i(a(n,e,r),n+"")}},function(n,e,t){var r=t(216),a=Math.max;n.exports=function(n,e,t){return e=a(void 0===e?n.length-1:e,0),function(){for(var i=arguments,o=-1,s=a(i.length-e,0),l=Array(s);++o<s;)l[o]=i[e+o];o=-1;for(var c=Array(e+1);++o<e;)c[o]=i[o];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(218),a=t(221)(r);n.exports=a},function(n,e,t){var r=t(219),a=t(220),i=t(41),o=a?function(n,e){return a(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:i;n.exports=o},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(10),a=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=a},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var a=t(),i=16-(a-r);if(r=a,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(74),a=t(223),i=t(228),o=t(75),s=t(229),l=t(37);n.exports=function(n,e,t){var c=-1,u=a,p=n.length,d=!0,m=[],f=m;if(t)d=!1,u=i;else if(p>=200){var h=e?null:s(n);if(h)return l(h);d=!1,u=o,f=new r}else f=e?[]:m;n:for(;++c<p;){var g=n[c],v=e?e(g):g;if(g=t||0!==g?g:0,d&&v==v){for(var b=f.length;b--;)if(f[b]===v)continue n;e&&f.push(v),m.push(g)}else u(f,v,t)||(f!==m&&f.push(v),m.push(g))}return m}},function(n,e,t){var r=t(224);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(225),a=t(226),i=t(227);n.exports=function(n,e,t){return e==e?i(n,e,t):r(n,a,t)}},function(n,e){n.exports=function(n,e,t,r){for(var a=n.length,i=t+(r?1:-1);r?i--:++i<a;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,a=n.length;++r<a;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,a=null==n?0:n.length;++r<a;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(81),a=t(230),i=t(37),o=r&&1/i(new r([,-0]))[1]==1/0?function(n){return new r(n)}:a;n.exports=o},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(80),a=t(12);n.exports=function(n){return a(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(86)},function(n,e,t){"use strict";t(87)},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(88)},function(n,e,t){"use strict";t(89)},function(n,e,t){"use strict";t.r(e);
/*!
 * Vue.js v2.7.10
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({}),a=Array.isArray;function i(n){return null==n}function o(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function u(n){return null!==n&&"object"==typeof n}var p=Object.prototype.toString;function d(n){return"[object Object]"===p.call(n)}function m(n){return"[object RegExp]"===p.call(n)}function f(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function h(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function g(n){return null==n?"":Array.isArray(n)||d(n)&&n.toString===p?JSON.stringify(n,null,2):String(n)}function v(n){var e=parseFloat(n);return isNaN(e)?n:e}function b(n,e){for(var t=Object.create(null),r=n.split(","),a=0;a<r.length;a++)t[r[a]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}b("slot,component",!0);var y=b("key,ref,slot,slot-scope,is");function x(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var k=Object.prototype.hasOwnProperty;function E(n,e){return k.call(n,e)}function S(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var w=/-(\w)/g,T=S((function(n){return n.replace(w,(function(n,e){return e?e.toUpperCase():""}))})),C=S((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),A=/\B([A-Z])/g,_=S((function(n){return n.replace(A,"-$1").toLowerCase()}));var I=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function j(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function z(n,e){for(var t in e)n[t]=e[t];return n}function P(n){for(var e={},t=0;t<n.length;t++)n[t]&&z(e,n[t]);return e}function B(n,e,t){}var O=function(n,e,t){return!1},M=function(n){return n};function R(n,e){if(n===e)return!0;var t=u(n),r=u(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var a=Array.isArray(n),i=Array.isArray(e);if(a&&i)return n.length===e.length&&n.every((function(n,t){return R(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(a||i)return!1;var o=Object.keys(n),s=Object.keys(e);return o.length===s.length&&o.every((function(t){return R(n[t],e[t])}))}catch(n){return!1}}function D(n,e){for(var t=0;t<n.length;t++)if(R(n[t],e))return t;return-1}function $(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function U(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var L=["component","directive","filter"],N=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:B,parsePlatformTagName:M,mustUseProp:O,async:!0,_lifecycleHooks:N},J=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function V(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function q(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var H=new RegExp("[^".concat(J.source,".$_\\d]"));var G="__proto__"in{},W="undefined"!=typeof window,Z=W&&window.navigator.userAgent.toLowerCase(),X=Z&&/msie|trident/.test(Z),K=Z&&Z.indexOf("msie 9.0")>0,Q=Z&&Z.indexOf("edge/")>0;Z&&Z.indexOf("android");var Y=Z&&/iphone|ipad|ipod|ios/.test(Z);Z&&/chrome\/\d+/.test(Z),Z&&/phantomjs/.test(Z);var nn,en=Z&&Z.match(/firefox\/(\d+)/),tn={}.watch,rn=!1;if(W)try{var an={};Object.defineProperty(an,"passive",{get:function(){rn=!0}}),window.addEventListener("test-passive",null,an)}catch(n){}var on=function(){return void 0===nn&&(nn=!W&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),nn},sn=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ln(n){return"function"==typeof n&&/native code/.test(n.toString())}var cn,un="undefined"!=typeof Symbol&&ln(Symbol)&&"undefined"!=typeof Reflect&&ln(Reflect.ownKeys);cn="undefined"!=typeof Set&&ln(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var pn=null;function dn(n){void 0===n&&(n=null),n||pn&&pn._scope.off(),pn=n,n&&n._scope.on()}var mn=function(){function n(n,e,t,r,a,i,o,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=a,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),fn=function(n){void 0===n&&(n="");var e=new mn;return e.text=n,e.isComment=!0,e};function hn(n){return new mn(void 0,void 0,void 0,String(n))}function gn(n){var e=new mn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var vn=0,bn=function(){function n(){this.id=vn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){x(this.subs,n)},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.slice();for(var t=0,r=e.length;t<r;t++){e[t].update()}},n}();bn.target=null;var yn=[];function xn(n){yn.push(n),bn.target=n}function kn(){yn.pop(),bn.target=yn[yn.length-1]}var En=Array.prototype,Sn=Object.create(En);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=En[n];q(Sn,n,(function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var a,i=e.apply(this,t),o=this.__ob__;switch(n){case"push":case"unshift":a=t;break;case"splice":a=t.slice(2)}return a&&o.observeArray(a),o.dep.notify(),i}))}));var wn=Object.getOwnPropertyNames(Sn),Tn={},Cn=!0;function An(n){Cn=n}var _n={notify:B,depend:B,addSub:B,removeSub:B},In=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?_n:new bn,this.vmCount=0,q(n,"__ob__",this),a(n)){if(!t)if(G)n.__proto__=Sn;else for(var r=0,i=wn.length;r<i;r++){q(n,s=wn[r],Sn[s])}e||this.observeArray(n)}else{var o=Object.keys(n);for(r=0;r<o.length;r++){var s;zn(n,s=o[r],Tn,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)jn(n[e],!1,this.mock)},n}();function jn(n,e,t){var r;if(!(!u(n)||$n(n)||n instanceof mn))return E(n,"__ob__")&&n.__ob__ instanceof In?r=n.__ob__:!Cn||!t&&on()||!a(n)&&!d(n)||!Object.isExtensible(n)||n.__v_skip||(r=new In(n,e,t)),r}function zn(n,e,t,r,i,o){var s=new bn,l=Object.getOwnPropertyDescriptor(n,e);if(!l||!1!==l.configurable){var c=l&&l.get,u=l&&l.set;c&&!u||t!==Tn&&2!==arguments.length||(t=n[e]);var p=!i&&jn(t,!1,o);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=c?c.call(n):t;return bn.target&&(s.depend(),p&&(p.dep.depend(),a(e)&&On(e))),$n(e)&&!i?e.value:e},set:function(e){var r=c?c.call(n):t;if(U(r,e)){if(u)u.call(n,e);else{if(c)return;if(!i&&$n(r)&&!$n(e))return void(r.value=e);t=e}p=!i&&jn(e,!1,o),s.notify()}}}),s}}function Pn(n,e,t){if(!Dn(n)){var r=n.__ob__;return a(n)&&f(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),r&&!r.shallow&&r.mock&&jn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||r&&r.vmCount?t:r?(zn(r.value,e,t,void 0,r.shallow,r.mock),r.dep.notify(),t):(n[e]=t,t)}}function Bn(n,e){if(a(n)&&f(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Dn(n)||E(n,e)&&(delete n[e],t&&t.dep.notify())}}function On(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),a(e)&&On(e)}function Mn(n){return Rn(n,!0),q(n,"__v_isShallow",!0),n}function Rn(n,e){if(!Dn(n)){jn(n,e,on());0}}function Dn(n){return!(!n||!n.__v_isReadonly)}function $n(n){return!(!n||!0!==n.__v_isRef)}function Un(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if($n(n))return n.value;var r=n&&n.__ob__;return r&&r.dep.depend(),n},set:function(n){var r=e[t];$n(r)&&!$n(n)?r.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Ln;var Nn=function(){function n(n){void 0===n&&(n=!1),this.active=!0,this.effects=[],this.cleanups=[],!n&&Ln&&(this.parent=Ln,this.index=(Ln.scopes||(Ln.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=Ln;try{return Ln=this,n()}finally{Ln=e}}else 0},n.prototype.on=function(){Ln=this},n.prototype.off=function(){Ln=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(this.parent&&!n){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.active=!1}},n}();function Fn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Jn=S((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function Vn(n,e){function t(){var n=t.fns;if(!a(n))return Ce(n,null,arguments,e,"v-on handler");for(var r=n.slice(),i=0;i<r.length;i++)Ce(r[i],null,arguments,e,"v-on handler")}return t.fns=n,t}function qn(n,e,t,r,a,o){var l,c,u,p;for(l in n)c=n[l],u=e[l],p=Jn(l),i(c)||(i(u)?(i(c.fns)&&(c=n[l]=Vn(c,o)),s(p.once)&&(c=n[l]=a(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==u&&(u.fns=c,n[l]=u));for(l in e)i(n[l])&&r((p=Jn(l)).name,e[l],p.capture)}function Hn(n,e,t){var r;n instanceof mn&&(n=n.data.hook||(n.data.hook={}));var a=n[e];function l(){t.apply(this,arguments),x(r.fns,l)}i(a)?r=Vn([l]):o(a.fns)&&s(a.merged)?(r=a).fns.push(l):r=Vn([a,l]),r.merged=!0,n[e]=r}function Gn(n,e,t,r,a){if(o(e)){if(E(e,t))return n[t]=e[t],a||delete e[t],!0;if(E(e,r))return n[t]=e[r],a||delete e[r],!0}return!1}function Wn(n){return l(n)?[hn(n)]:a(n)?function n(e,t){var r,c,u,p,d=[];for(r=0;r<e.length;r++)i(c=e[r])||"boolean"==typeof c||(u=d.length-1,p=d[u],a(c)?c.length>0&&(Zn((c=n(c,"".concat(t||"","_").concat(r)))[0])&&Zn(p)&&(d[u]=hn(p.text+c[0].text),c.shift()),d.push.apply(d,c)):l(c)?Zn(p)?d[u]=hn(p.text+c):""!==c&&d.push(hn(c)):Zn(c)&&Zn(p)?d[u]=hn(p.text+c.text):(s(e._isVList)&&o(c.tag)&&i(c.key)&&o(t)&&(c.key="__vlist".concat(t,"_").concat(r,"__")),d.push(c)));return d}(n):void 0}function Zn(n){return o(n)&&o(n.text)&&!1===n.isComment}function Xn(n,e){var t,r,i,s,l=null;if(a(n)||"string"==typeof n)for(l=new Array(n.length),t=0,r=n.length;t<r;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(u(n))if(un&&n[Symbol.iterator]){l=[];for(var c=n[Symbol.iterator](),p=c.next();!p.done;)l.push(e(p.value,l.length)),p=c.next()}else for(i=Object.keys(n),l=new Array(i.length),t=0,r=i.length;t<r;t++)s=i[t],l[t]=e(n[s],s,t);return o(l)||(l=[]),l._isVList=!0,l}function Kn(n,e,t,r){var a,i=this.$scopedSlots[n];i?(t=t||{},r&&(t=z(z({},r),t)),a=i(t)||(c(e)?e():e)):a=this.$slots[n]||(c(e)?e():e);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},a):a}function Qn(n){return It(this.$options,"filters",n,!0)||M}function Yn(n,e){return a(n)?-1===n.indexOf(e):n!==e}function ne(n,e,t,r,a){var i=F.keyCodes[e]||t;return a&&r&&!F.keyCodes[e]?Yn(a,r):i?Yn(i,n):r?_(r)!==e:void 0===n}function ee(n,e,t,r,i){if(t)if(u(t)){a(t)&&(t=P(t));var o=void 0,s=function(a){if("class"===a||"style"===a||y(a))o=n;else{var s=n.attrs&&n.attrs.type;o=r||F.mustUseProp(e,s,a)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=T(a),c=_(a);l in o||c in o||(o[a]=t[a],i&&((n.on||(n.on={}))["update:".concat(a)]=function(n){t[a]=n}))};for(var l in t)s(l)}else;return n}function te(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||ae(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),r}function re(n,e,t){return ae(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function ae(n,e,t){if(a(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&ie(n[r],"".concat(e,"_").concat(r),t);else ie(n,e,t)}function ie(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function oe(n,e){if(e)if(d(e)){var t=n.on=n.on?z({},n.on):{};for(var r in e){var a=t[r],i=e[r];t[r]=a?[].concat(a,i):i}}else;return n}function se(n,e,t,r){e=e||{$stable:!t};for(var i=0;i<n.length;i++){var o=n[i];a(o)?se(o,e,t):o&&(o.proxy&&(o.fn.proxy=!0),e[o.key]=o.fn)}return r&&(e.$key=r),e}function le(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function ce(n,e){return"string"==typeof n?e+n:n}function ue(n){n._o=re,n._n=v,n._s=g,n._l=Xn,n._t=Kn,n._q=R,n._i=D,n._m=te,n._f=Qn,n._k=ne,n._b=ee,n._v=hn,n._e=fn,n._u=se,n._g=oe,n._d=le,n._p=ce}function pe(n,e){if(!n||!n.length)return{};for(var t={},r=0,a=n.length;r<a;r++){var i=n[r],o=i.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,i.context!==e&&i.fnContext!==e||!o||null==o.slot)(t.default||(t.default=[])).push(i);else{var s=o.slot,l=t[s]||(t[s]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in t)t[c].every(de)&&delete t[c];return t}function de(n){return n.isComment&&!n.asyncFactory||" "===n.text}function me(n){return n.isComment&&n.asyncFactory}function fe(n,e,t,a){var i,o=Object.keys(t).length>0,s=e?!!e.$stable:!o,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&a&&a!==r&&l===a.$key&&!o&&!a.$hasNormal)return a;for(var c in i={},e)e[c]&&"$"!==c[0]&&(i[c]=he(n,t,c,e[c]))}else i={};for(var u in t)u in i||(i[u]=ge(t,u));return e&&Object.isExtensible(e)&&(e._normalized=i),q(i,"$stable",s),q(i,"$key",l),q(i,"$hasNormal",o),i}function he(n,e,t,r){var i=function(){var e=pn;dn(n);var t=arguments.length?r.apply(null,arguments):r({}),i=(t=t&&"object"==typeof t&&!a(t)?[t]:Wn(t))&&t[0];return dn(e),t&&(!i||1===t.length&&i.isComment&&!me(i))?void 0:t};return r.proxy&&Object.defineProperty(e,t,{get:i,enumerable:!0,configurable:!0}),i}function ge(n,e){return function(){return n[e]}}function ve(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};q(e,"_v_attr_proxy",!0),be(e,n.$attrs,r,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||be(n._listenersProxy={},n.$listeners,r,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||xe(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:I(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return Un(n,e,t)}))}}}function be(n,e,t,r,a){var i=!1;for(var o in e)o in n?e[o]!==t[o]&&(i=!0):(i=!0,ye(n,o,r,a));for(var o in n)o in e||(i=!0,delete n[o]);return i}function ye(n,e,t,r){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[r][e]}})}function xe(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var ke=null;function Ee(n,e){return(n.__esModule||un&&"Module"===n[Symbol.toStringTag])&&(n=n.default),u(n)?e.extend(n):n}function Se(n){if(a(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||me(t)))return t}}function we(n,e,t,r,p,d){return(a(t)||l(t))&&(p=r,r=t,t=void 0),s(d)&&(p=2),function(n,e,t,r,l){if(o(t)&&o(t.__ob__))return fn();o(t)&&o(t.is)&&(e=t.is);if(!e)return fn();0;a(r)&&c(r[0])&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===l?r=Wn(r):1===l&&(r=function(n){for(var e=0;e<n.length;e++)if(a(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var p,d;if("string"==typeof e){var m=void 0;d=n.$vnode&&n.$vnode.ns||F.getTagNamespace(e),p=F.isReservedTag(e)?new mn(F.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!o(m=It(n.$options,"components",e))?new mn(e,t,r,void 0,void 0,n):yt(m,t,n,r,e)}else p=yt(e,t,n,r);return a(p)?p:o(p)?(o(d)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(o(e.children))for(var a=0,l=e.children.length;a<l;a++){var c=e.children[a];o(c.tag)&&(i(c.ns)||s(r)&&"svg"!==c.tag)&&n(c,t,r)}}(p,d),o(t)&&function(n){u(n.style)&&Ne(n.style);u(n.class)&&Ne(n.class)}(t),p):fn()}(n,e,t,r,p)}function Te(n,e,t){xn();try{if(e)for(var r=e;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var i=0;i<a.length;i++)try{if(!1===a[i].call(r,n,e,t))return}catch(n){Ae(n,r,"errorCaptured hook")}}Ae(n,e,t)}finally{kn()}}function Ce(n,e,t,r,a){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&h(i)&&!i._handled&&(i.catch((function(n){return Te(n,r,a+" (Promise/async)")})),i._handled=!0)}catch(n){Te(n,r,a)}return i}function Ae(n,e,t){if(F.errorHandler)try{return F.errorHandler.call(null,n,e,t)}catch(e){e!==n&&_e(e,null,"config.errorHandler")}_e(n,e,t)}function _e(n,e,t){if(!W||"undefined"==typeof console)throw n;console.error(n)}var Ie,je=!1,ze=[],Pe=!1;function Be(){Pe=!1;var n=ze.slice(0);ze.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&ln(Promise)){var Oe=Promise.resolve();Ie=function(){Oe.then(Be),Y&&setTimeout(B)},je=!0}else if(X||"undefined"==typeof MutationObserver||!ln(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ie="undefined"!=typeof setImmediate&&ln(setImmediate)?function(){setImmediate(Be)}:function(){setTimeout(Be,0)};else{var Me=1,Re=new MutationObserver(Be),De=document.createTextNode(String(Me));Re.observe(De,{characterData:!0}),Ie=function(){Me=(Me+1)%2,De.data=String(Me)},je=!0}function $e(n,e){var t;if(ze.push((function(){if(n)try{n.call(e)}catch(n){Te(n,e,"nextTick")}else t&&t(e)})),Pe||(Pe=!0,Ie()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function Ue(n){return function(e,t){if(void 0===t&&(t=pn),t)return function(n,e,t){var r=n.$options;r[e]=Tt(r[e],t)}(t,n,e)}}Ue("beforeMount"),Ue("mounted"),Ue("beforeUpdate"),Ue("updated"),Ue("beforeDestroy"),Ue("destroyed"),Ue("activated"),Ue("deactivated"),Ue("serverPrefetch"),Ue("renderTracked"),Ue("renderTriggered"),Ue("errorCaptured");var Le=new cn;function Ne(n){return function n(e,t){var r,i,o=a(e);if(!o&&!u(e)||Object.isFrozen(e)||e instanceof mn)return;if(e.__ob__){var s=e.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(o)for(r=e.length;r--;)n(e[r],t);else if($n(e))n(e.value,t);else for(i=Object.keys(e),r=i.length;r--;)n(e[i[r]],t)}(n,Le),Le.clear(),n}var Fe,Je=0,Ve=function(){function n(n,e,t,r,a){var i,o;i=this,void 0===(o=Ln&&!Ln._vm?Ln:n?n._scope:void 0)&&(o=Ln),o&&o.active&&o.effects.push(i),(this.vm=n)&&a&&(n._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Je,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new cn,this.newDepIds=new cn,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!H.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=B)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;xn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Te(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Ne(n),kn(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():pt(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||u(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Ce(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&x(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function qe(n,e){Fe.$on(n,e)}function He(n,e){Fe.$off(n,e)}function Ge(n,e){var t=Fe;return function r(){var a=e.apply(null,arguments);null!==a&&t.$off(n,r)}}function We(n,e,t){Fe=n,qn(e,t||{},qe,He,Ge,n),Fe=void 0}var Ze=null;function Xe(n){var e=Ze;return Ze=n,function(){Ze=e}}function Ke(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function Qe(n,e){if(e){if(n._directInactive=!1,Ke(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)Qe(n.$children[t]);Ye(n,"activated")}}function Ye(n,e,t,r){void 0===r&&(r=!0),xn();var a=pn;r&&dn(n);var i=n.$options[e],o="".concat(e," hook");if(i)for(var s=0,l=i.length;s<l;s++)Ce(i[s],n,t||null,n,o);n._hasHookEvent&&n.$emit("hook:"+e),r&&dn(a),kn()}var nt=[],et=[],tt={},rt=!1,at=!1,it=0;var ot=0,st=Date.now;if(W&&!X){var lt=window.performance;lt&&"function"==typeof lt.now&&st()>document.createEvent("Event").timeStamp&&(st=function(){return lt.now()})}var ct=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function ut(){var n,e;for(ot=st(),at=!0,nt.sort(ct),it=0;it<nt.length;it++)(n=nt[it]).before&&n.before(),e=n.id,tt[e]=null,n.run();var t=et.slice(),r=nt.slice();it=nt.length=et.length=0,tt={},rt=at=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,Qe(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r&&r._watcher===t&&r._isMounted&&!r._isDestroyed&&Ye(r,"updated")}}(r),sn&&F.devtools&&sn.emit("flush")}function pt(n){var e=n.id;if(null==tt[e]&&(n!==bn.target||!n.noRecurse)){if(tt[e]=!0,at){for(var t=nt.length-1;t>it&&nt[t].id>n.id;)t--;nt.splice(t+1,0,n)}else nt.push(n);rt||(rt=!0,$e(ut))}}function dt(n,e){if(n){for(var t=Object.create(null),r=un?Reflect.ownKeys(n):Object.keys(n),a=0;a<r.length;a++){var i=r[a];if("__ob__"!==i){var o=n[i].from;if(o in e._provided)t[i]=e._provided[o];else if("default"in n[i]){var s=n[i].default;t[i]=c(s)?s.call(e):s}else 0}}return t}}function mt(n,e,t,i,o){var l,c=this,u=o.options;E(i,"_uid")?(l=Object.create(i))._original=i:(l=i,i=i._original);var p=s(u._compiled),d=!p;this.data=n,this.props=e,this.children=t,this.parent=i,this.listeners=n.on||r,this.injections=dt(u.inject,i),this.slots=function(){return c.$slots||fe(i,n.scopedSlots,c.$slots=pe(t,i)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return fe(i,n.scopedSlots,this.slots())}}),p&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=fe(i,n.scopedSlots,this.$slots)),u._scopeId?this._c=function(n,e,t,r){var o=we(l,n,e,t,r,d);return o&&!a(o)&&(o.fnScopeId=u._scopeId,o.fnContext=i),o}:this._c=function(n,e,t,r){return we(l,n,e,t,r,d)}}function ft(n,e,t,r,a){var i=gn(n);return i.fnContext=t,i.fnOptions=r,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function ht(n,e){for(var t in e)n[T(t)]=e[t]}function gt(n){return n.name||n.__name||n._componentTag}ue(mt.prototype);var vt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;vt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;o(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ze)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,a,i){var o=a.data.scopedSlots,s=n.$scopedSlots,l=!!(o&&!o.$stable||s!==r&&!s.$stable||o&&n.$scopedSlots.$key!==o.$key||!o&&n.$scopedSlots.$key),c=!!(i||n.$options._renderChildren||l),u=n.$vnode;n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a),n.$options._renderChildren=i;var p=a.data.attrs||r;n._attrsProxy&&be(n._attrsProxy,p,u.data&&u.data.attrs||r,n,"$attrs")&&(c=!0),n.$attrs=p,t=t||r;var d=n.$options._parentListeners;if(n._listenersProxy&&be(n._listenersProxy,t,d||r,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,We(n,t,d),e&&n.$options.props){An(!1);for(var m=n._props,f=n.$options._propKeys||[],h=0;h<f.length;h++){var g=f[h],v=n.$options.props;m[g]=jt(g,v,e,n)}An(!0),n.$options.propsData=e}c&&(n.$slots=pe(i,a.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,Ye(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,et.push(e)):Qe(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,Ke(e))||e._inactive)){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);Ye(e,"deactivated")}}(e,!0):e.$destroy())}},bt=Object.keys(vt);function yt(n,e,t,l,c){if(!i(n)){var p=t.$options._base;if(u(n)&&(n=p.extend(n)),"function"==typeof n){var d;if(i(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=ke;if(t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),s(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var r=n.owners=[t],a=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return x(r,t)}));var p=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},d=$((function(t){n.resolved=Ee(t,e),a?r.length=0:p(!0)})),m=$((function(e){o(n.errorComp)&&(n.error=!0,p(!0))})),f=n(d,m);return u(f)&&(h(f)?i(n.resolved)&&f.then(d,m):h(f.component)&&(f.component.then(d,m),o(f.error)&&(n.errorComp=Ee(f.error,e)),o(f.loading)&&(n.loadingComp=Ee(f.loading,e),0===f.delay?n.loading=!0:l=setTimeout((function(){l=null,i(n.resolved)&&i(n.error)&&(n.loading=!0,p(!1))}),f.delay||200)),o(f.timeout)&&(c=setTimeout((function(){c=null,i(n.resolved)&&m(null)}),f.timeout)))),a=!1,n.loading?n.loadingComp:n.resolved}}(d=n,p)))return function(n,e,t,r,a){var i=fn();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:r,tag:a},i}(d,e,t,l,c);e=e||{},Vt(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var i=e.on||(e.on={}),s=i[r],l=e.model.callback;o(s)?(a(s)?-1===s.indexOf(l):s!==l)&&(i[r]=[l].concat(s)):i[r]=l}(n.options,e);var m=function(n,e,t){var r=e.options.props;if(!i(r)){var a={},s=n.attrs,l=n.props;if(o(s)||o(l))for(var c in r){var u=_(c);Gn(a,l,c,u,!0)||Gn(a,s,c,u,!1)}return a}}(e,n);if(s(n.options.functional))return function(n,e,t,i,s){var l=n.options,c={},u=l.props;if(o(u))for(var p in u)c[p]=jt(p,u,e||r);else o(t.attrs)&&ht(c,t.attrs),o(t.props)&&ht(c,t.props);var d=new mt(t,c,s,i,n),m=l.render.call(null,d._c,d);if(m instanceof mn)return ft(m,t,d.parent,l,d);if(a(m)){for(var f=Wn(m)||[],h=new Array(f.length),g=0;g<f.length;g++)h[g]=ft(f[g],t,d.parent,l,d);return h}}(n,m,e,t,l);var f=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var g=e.slot;e={},g&&(e.slot=g)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<bt.length;t++){var r=bt[t],a=e[r],i=vt[r];a===i||a&&a._merged||(e[r]=a?xt(i,a):i)}}(e);var v=gt(n.options)||c;return new mn("vue-component-".concat(n.cid).concat(v?"-".concat(v):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:m,listeners:f,tag:c,children:l},d)}}}function xt(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}var kt=B,Et=F.optionMergeStrategies;function St(n,e){if(!e)return n;for(var t,r,a,i=un?Reflect.ownKeys(e):Object.keys(e),o=0;o<i.length;o++)"__ob__"!==(t=i[o])&&(r=n[t],a=e[t],E(n,t)?r!==a&&d(r)&&d(a)&&St(r,a):Pn(n,t,a));return n}function wt(n,e,t){return t?function(){var r=c(e)?e.call(t,t):e,a=c(n)?n.call(t,t):n;return r?St(r,a):a}:e?n?function(){return St(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function Tt(n,e){var t=e?n?n.concat(e):a(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Ct(n,e,t,r){var a=Object.create(n||null);return e?z(a,e):a}Et.data=function(n,e,t){return t?wt(n,e,t):e&&"function"!=typeof e?n:wt(n,e)},N.forEach((function(n){Et[n]=Tt})),L.forEach((function(n){Et[n+"s"]=Ct})),Et.watch=function(n,e,t,r){if(n===tn&&(n=void 0),e===tn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var i={};for(var o in z(i,n),e){var s=i[o],l=e[o];s&&!a(s)&&(s=[s]),i[o]=s?s.concat(l):a(l)?l:[l]}return i},Et.props=Et.methods=Et.inject=Et.computed=function(n,e,t,r){if(!n)return e;var a=Object.create(null);return z(a,n),e&&z(a,e),a},Et.provide=wt;var At=function(n,e){return void 0===e?n:e};function _t(n,e,t){if(c(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var r,i,o={};if(a(t))for(r=t.length;r--;)"string"==typeof(i=t[r])&&(o[T(i)]={type:null});else if(d(t))for(var s in t)i=t[s],o[T(s)]=d(i)?i:{type:i};else 0;n.props=o}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(a(t))for(var i=0;i<t.length;i++)r[t[i]]={from:t[i]};else if(d(t))for(var o in t){var s=t[o];r[o]=d(s)?z({from:o},s):{from:s}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];c(r)&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=_t(n,e.extends,t)),e.mixins))for(var r=0,i=e.mixins.length;r<i;r++)n=_t(n,e.mixins[r],t);var o,s={};for(o in n)l(o);for(o in e)E(n,o)||l(o);function l(r){var a=Et[r]||At;s[r]=a(n[r],e[r],t,r)}return s}function It(n,e,t,r){if("string"==typeof t){var a=n[e];if(E(a,t))return a[t];var i=T(t);if(E(a,i))return a[i];var o=C(i);return E(a,o)?a[o]:a[t]||a[i]||a[o]}}function jt(n,e,t,r){var a=e[n],i=!E(t,n),o=t[n],s=Ot(Boolean,a.type);if(s>-1)if(i&&!E(a,"default"))o=!1;else if(""===o||o===_(n)){var l=Ot(String,a.type);(l<0||s<l)&&(o=!0)}if(void 0===o){o=function(n,e,t){if(!E(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return c(r)&&"Function"!==Pt(e.type)?r.call(n):r}(r,a,n);var u=Cn;An(!0),jn(o),An(u)}return o}var zt=/^\s*function (\w+)/;function Pt(n){var e=n&&n.toString().match(zt);return e?e[1]:""}function Bt(n,e){return Pt(n)===Pt(e)}function Ot(n,e){if(!a(e))return Bt(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Bt(e[t],n))return t;return-1}var Mt={enumerable:!0,configurable:!0,get:B,set:B};function Rt(n,e,t){Mt.get=function(){return this[e][t]},Mt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Mt)}function Dt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props=Mn({}),a=n.$options._propKeys=[];n.$parent&&An(!1);var i=function(i){a.push(i);var o=jt(i,e,t,n);zn(r,i,o),i in n||Rt(n,"_props",i)};for(var o in e)i(o);An(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var r=n._setupContext=ve(n);dn(n),xn();var a=Ce(t,null,[n._props||Mn({}),r],n,"setup");if(kn(),dn(),c(a))e.render=a;else if(u(a))if(n._setupState=a,a.__sfc){var i=n._setupProxy={};for(var o in a)"__sfc"!==o&&Un(i,a,o)}else for(var o in a)V(o)||Un(n,a,o);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?B:I(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;d(e=n._data=c(e)?function(n,e){xn();try{return n.call(e,e)}catch(n){return Te(n,e,"data()"),{}}finally{kn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,a=(n.$options.methods,t.length);for(;a--;){var i=t[a];0,r&&E(r,i)||V(i)||Rt(n,"_data",i)}var o=jn(e);o&&o.vmCount++}(n);else{var t=jn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=on();for(var a in e){var i=e[a],o=c(i)?i:i.get;0,r||(t[a]=new Ve(n,o||B,B,$t)),a in n||Ut(n,a,i)}}(n,e.computed),e.watch&&e.watch!==tn&&function(n,e){for(var t in e){var r=e[t];if(a(r))for(var i=0;i<r.length;i++)Ft(n,t,r[i]);else Ft(n,t,r)}}(n,e.watch)}var $t={lazy:!0};function Ut(n,e,t){var r=!on();c(t)?(Mt.get=r?Lt(e):Nt(t),Mt.set=B):(Mt.get=t.get?r&&!1!==t.cache?Lt(e):Nt(t.get):B,Mt.set=t.set||B),Object.defineProperty(n,e,Mt)}function Lt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),bn.target&&e.depend(),e.value}}function Nt(n){return function(){return n.call(this,this)}}function Ft(n,e,t,r){return d(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var Jt=0;function Vt(n){var e=n.options;if(n.super){var t=Vt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var a in t)t[a]!==r[a]&&(e||(e={}),e[a]=t[a]);return e}(n);r&&z(n.extendOptions,r),(e=n.options=_t(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function qt(n){this._init(n)}function Ht(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,a=n._Ctor||(n._Ctor={});if(a[r])return a[r];var i=gt(n)||gt(t.options);var o=function(n){this._init(n)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=e++,o.options=_t(t.options,n),o.super=t,o.options.props&&function(n){var e=n.options.props;for(var t in e)Rt(n.prototype,"_props",t)}(o),o.options.computed&&function(n){var e=n.options.computed;for(var t in e)Ut(n.prototype,t,e[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,L.forEach((function(n){o[n]=t[n]})),i&&(o.options.components[i]=o),o.superOptions=t.options,o.extendOptions=n,o.sealedOptions=z({},o.options),a[r]=o,o}}function Gt(n){return n&&(gt(n.Ctor.options)||n.tag)}function Wt(n,e){return a(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!m(n)&&n.test(e)}function Zt(n,e){var t=n.cache,r=n.keys,a=n._vnode;for(var i in t){var o=t[i];if(o){var s=o.name;s&&!e(s)&&Xt(t,i,r,a)}}}function Xt(n,e,t,r){var a=n[e];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),n[e]=null,x(t,e)}qt.prototype._init=function(n){var e=this;e._uid=Jt++,e._isVue=!0,e.__v_skip=!0,e._scope=new Nn(!0),e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var a=r.componentOptions;t.propsData=a.propsData,t._parentListeners=a.listeners,t._renderChildren=a.children,t._componentTag=a.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=_t(Vt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&We(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,a=t&&t.context;n.$slots=pe(e._renderChildren,a),n.$scopedSlots=t?fe(n.$parent,t.data.scopedSlots,n.$slots):r,n._c=function(e,t,r,a){return we(n,e,t,r,a,!1)},n.$createElement=function(e,t,r,a){return we(n,e,t,r,a,!0)};var i=t&&t.data;zn(n,"$attrs",i&&i.attrs||r,null,!0),zn(n,"$listeners",e._parentListeners||r,null,!0)}(e),Ye(e,"beforeCreate",void 0,!1),function(n){var e=dt(n.$options.inject,n);e&&(An(!1),Object.keys(e).forEach((function(t){zn(n,t,e[t])})),An(!0))}(e),Dt(e),function(n){var e=n.$options.provide;if(e){var t=c(e)?e.call(n):e;if(!u(t))return;for(var r=Fn(n),a=un?Reflect.ownKeys(t):Object.keys(t),i=0;i<a.length;i++){var o=a[i];Object.defineProperty(r,o,Object.getOwnPropertyDescriptor(t,o))}}}(e),Ye(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Pn,n.prototype.$delete=Bn,n.prototype.$watch=function(n,e,t){if(d(e))return Ft(this,n,e,t);(t=t||{}).user=!0;var r=new Ve(this,n,e,t);if(t.immediate){var a='callback for immediate watcher "'.concat(r.expression,'"');xn(),Ce(e,this,[r.value],this,a),kn()}return function(){r.teardown()}}}(qt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(a(n))for(var i=0,o=n.length;i<o;i++)r.$on(n[i],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(a(n)){for(var r=0,i=n.length;r<i;r++)t.$off(n[r],e);return t}var o,s=t._events[n];if(!s)return t;if(!e)return t._events[n]=null,t;for(var l=s.length;l--;)if((o=s[l])===e||o.fn===e){s.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?j(t):t;for(var r=j(arguments,1),a='event handler for "'.concat(n,'"'),i=0,o=t.length;i<o;i++)Ce(t[i],e,r,e,a)}return e}}(qt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,a=t._vnode,i=Xe(t);t._vnode=n,t.$el=a?t.__patch__(a,n):t.__patch__(t.$el,n,e,!1),i(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var o=t;o&&o.$vnode&&o.$parent&&o.$vnode===o.$parent._vnode;)o.$parent.$el=o.$el,o=o.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){Ye(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||x(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),Ye(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(qt),function(n){ue(n.prototype),n.prototype.$nextTick=function(n){return $e(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,i=t._parentVnode;i&&e._isMounted&&(e.$scopedSlots=fe(e.$parent,i.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&xe(e._slotsProxy,e.$scopedSlots)),e.$vnode=i;try{dn(e),ke=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){Te(t,e,"render"),n=e._vnode}finally{ke=null,dn()}return a(n)&&1===n.length&&(n=n[0]),n instanceof mn||(n=fn()),n.parent=i,n}}(qt);var Kt=[String,RegExp,Array],Qt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Kt,exclude:Kt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var a=t.tag,i=t.componentInstance,o=t.componentOptions;n[r]={name:Gt(o),tag:a,componentInstance:i},e.push(r),this.max&&e.length>parseInt(this.max)&&Xt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Xt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Zt(n,(function(n){return Wt(e,n)}))})),this.$watch("exclude",(function(e){Zt(n,(function(n){return!Wt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Se(n),t=e&&e.componentOptions;if(t){var r=Gt(t),a=this.include,i=this.exclude;if(a&&(!r||!Wt(a,r))||i&&r&&Wt(i,r))return e;var o=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;o[l]?(e.componentInstance=o[l].componentInstance,x(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return F}};Object.defineProperty(n,"config",e),n.util={warn:kt,extend:z,mergeOptions:_t,defineReactive:zn},n.set=Pn,n.delete=Bn,n.nextTick=$e,n.observable=function(n){return jn(n),n},n.options=Object.create(null),L.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,z(n.options.components,Qt),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=j(arguments,1);return t.unshift(this),c(n.install)?n.install.apply(n,t):c(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=_t(this.options,n),this}}(n),Ht(n),function(n){L.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&d(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&c(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(qt),Object.defineProperty(qt.prototype,"$isServer",{get:on}),Object.defineProperty(qt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(qt,"FunctionalRenderContext",{value:mt}),qt.version="2.7.10";var Yt=b("style,class"),nr=b("input,textarea,option,select,progress"),er=b("contenteditable,draggable,spellcheck"),tr=b("events,caret,typing,plaintext-only"),rr=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ar="http://www.w3.org/1999/xlink",ir=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},or=function(n){return ir(n)?n.slice(6,n.length):""},sr=function(n){return null==n||!1===n};function lr(n){for(var e=n.data,t=n,r=n;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=cr(r.data,e));for(;o(t=t.parent);)t&&t.data&&(e=cr(e,t.data));return function(n,e){if(o(n)||o(e))return ur(n,pr(e));return""}(e.staticClass,e.class)}function cr(n,e){return{staticClass:ur(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function ur(n,e){return n?e?n+" "+e:n:e||""}function pr(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,a=n.length;r<a;r++)o(e=pr(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):u(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var dr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},mr=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),fr=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),hr=function(n){return mr(n)||fr(n)};var gr=Object.create(null);var vr=b("text,number,password,search,email,tel,url");var br=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(dr[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),yr={create:function(n,e){xr(e)},update:function(n,e){n.data.ref!==e.data.ref&&(xr(n,!0),xr(e))},destroy:function(n){xr(n,!0)}};function xr(n,e){var t=n.data.ref;if(o(t)){var r=n.context,i=n.componentInstance||n.elm,s=e?null:i,l=e?void 0:i;if(c(t))Ce(t,r,[s],r,"template ref function");else{var u=n.data.refInFor,p="string"==typeof t||"number"==typeof t,d=$n(t),m=r.$refs;if(p||d)if(u){var f=p?m[t]:t.value;e?a(f)&&x(f,i):a(f)?f.includes(i)||f.push(i):p?(m[t]=[i],kr(r,t,m[t])):t.value=[i]}else if(p){if(e&&m[t]!==i)return;m[t]=l,kr(r,t,s)}else if(d){if(e&&t.value!==i)return;t.value=s}else 0}}}function kr(n,e,t){var r=n._setupState;r&&E(r,e)&&($n(r[e])?r[e].value=t:r[e]=t)}var Er=new mn("",{},[]),Sr=["create","activate","update","remove","destroy"];function wr(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=o(t=n.data)&&o(t=t.attrs)&&t.type,a=o(t=e.data)&&o(t=t.attrs)&&t.type;return r===a||vr(r)&&vr(a)}(n,e)||s(n.isAsyncPlaceholder)&&i(e.asyncFactory.error))}function Tr(n,e,t){var r,a,i={};for(r=e;r<=t;++r)o(a=n[r].key)&&(i[a]=r);return i}var Cr={create:Ar,update:Ar,destroy:function(n){Ar(n,Er)}};function Ar(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,a,i=n===Er,o=e===Er,s=Ir(n.data.directives,n.context),l=Ir(e.data.directives,e.context),c=[],u=[];for(t in l)r=s[t],a=l[t],r?(a.oldValue=r.value,a.oldArg=r.arg,zr(a,"update",e,n),a.def&&a.def.componentUpdated&&u.push(a)):(zr(a,"bind",e,n),a.def&&a.def.inserted&&c.push(a));if(c.length){var p=function(){for(var t=0;t<c.length;t++)zr(c[t],"inserted",e,n)};i?Hn(e,"insert",p):p()}u.length&&Hn(e,"postpatch",(function(){for(var t=0;t<u.length;t++)zr(u[t],"componentUpdated",e,n)}));if(!i)for(t in s)l[t]||zr(s[t],"unbind",n,n,o)}(n,e)}var _r=Object.create(null);function Ir(n,e){var t,r,a=Object.create(null);if(!n)return a;for(t=0;t<n.length;t++){if((r=n[t]).modifiers||(r.modifiers=_r),a[jr(r)]=r,e._setupState&&e._setupState.__sfc){var i=r.def||It(e,"_setupState","v-"+r.name);r.def="function"==typeof i?{bind:i,update:i}:i}r.def=r.def||It(e.$options,"directives",r.name)}return a}function jr(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function zr(n,e,t,r,a){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,r,a)}catch(r){Te(r,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Pr=[yr,Cr];function Br(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||i(n.data.attrs)&&i(e.data.attrs))){var r,a,l=e.elm,c=n.data.attrs||{},u=e.data.attrs||{};for(r in(o(u.__ob__)||s(u._v_attr_proxy))&&(u=e.data.attrs=z({},u)),u)a=u[r],c[r]!==a&&Or(l,r,a,e.data.pre);for(r in(X||Q)&&u.value!==c.value&&Or(l,"value",u.value),c)i(u[r])&&(ir(r)?l.removeAttributeNS(ar,or(r)):er(r)||l.removeAttribute(r))}}function Or(n,e,t,r){r||n.tagName.indexOf("-")>-1?Mr(n,e,t):rr(e)?sr(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):er(e)?n.setAttribute(e,function(n,e){return sr(e)||"false"===e?"false":"contenteditable"===n&&tr(e)?e:"true"}(e,t)):ir(e)?sr(t)?n.removeAttributeNS(ar,or(e)):n.setAttributeNS(ar,e,t):Mr(n,e,t)}function Mr(n,e,t){if(sr(t))n.removeAttribute(e);else{if(X&&!K&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var Rr={create:Br,update:Br};function Dr(n,e){var t=e.elm,r=e.data,a=n.data;if(!(i(r.staticClass)&&i(r.class)&&(i(a)||i(a.staticClass)&&i(a.class)))){var s=lr(e),l=t._transitionClasses;o(l)&&(s=ur(s,pr(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var $r,Ur={create:Dr,update:Dr};function Lr(n,e,t){var r=$r;return function a(){var i=e.apply(null,arguments);null!==i&&Jr(n,a,t,r)}}var Nr=je&&!(en&&Number(en[1])<=53);function Fr(n,e,t,r){if(Nr){var a=ot,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=a||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}$r.addEventListener(n,e,rn?{capture:t,passive:r}:t)}function Jr(n,e,t,r){(r||$r).removeEventListener(n,e._wrapper||e,t)}function Vr(n,e){if(!i(n.data.on)||!i(e.data.on)){var t=e.data.on||{},r=n.data.on||{};$r=e.elm||n.elm,function(n){if(o(n.__r)){var e=X?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),qn(t,r,Fr,Jr,Lr,e.context),$r=void 0}}var qr,Hr={create:Vr,update:Vr,destroy:function(n){return Vr(n,Er)}};function Gr(n,e){if(!i(n.data.domProps)||!i(e.data.domProps)){var t,r,a=e.elm,l=n.data.domProps||{},c=e.data.domProps||{};for(t in(o(c.__ob__)||s(c._v_attr_proxy))&&(c=e.data.domProps=z({},c)),l)t in c||(a[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===l[t])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===t&&"PROGRESS"!==a.tagName){a._value=r;var u=i(r)?"":String(r);Wr(a,u)&&(a.value=u)}else if("innerHTML"===t&&fr(a.tagName)&&i(a.innerHTML)){(qr=qr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var p=qr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;p.firstChild;)a.appendChild(p.firstChild)}else if(r!==l[t])try{a[t]=r}catch(n){}}}}function Wr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(o(r)){if(r.number)return v(t)!==v(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Zr={create:Gr,update:Gr},Xr=S((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Kr(n){var e=Qr(n.style);return n.staticStyle?z(n.staticStyle,e):e}function Qr(n){return Array.isArray(n)?P(n):"string"==typeof n?Xr(n):n}var Yr,na=/^--/,ea=/\s*!important$/,ta=function(n,e,t){if(na.test(e))n.style.setProperty(e,t);else if(ea.test(t))n.style.setProperty(_(e),t.replace(ea,""),"important");else{var r=aa(e);if(Array.isArray(t))for(var a=0,i=t.length;a<i;a++)n.style[r]=t[a];else n.style[r]=t}},ra=["Webkit","Moz","ms"],aa=S((function(n){if(Yr=Yr||document.createElement("div").style,"filter"!==(n=T(n))&&n in Yr)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<ra.length;t++){var r=ra[t]+e;if(r in Yr)return r}}));function ia(n,e){var t=e.data,r=n.data;if(!(i(t.staticStyle)&&i(t.style)&&i(r.staticStyle)&&i(r.style))){var a,s,l=e.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},p=c||u,d=Qr(e.data.style)||{};e.data.normalizedStyle=o(d.__ob__)?z({},d):d;var m=function(n,e){var t,r={};if(e)for(var a=n;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(t=Kr(a.data))&&z(r,t);(t=Kr(n.data))&&z(r,t);for(var i=n;i=i.parent;)i.data&&(t=Kr(i.data))&&z(r,t);return r}(e,!0);for(s in p)i(m[s])&&ta(l,s,"");for(s in m)(a=m[s])!==p[s]&&ta(l,s,null==a?"":a)}}var oa={create:ia,update:ia},sa=/\s+/;function la(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(sa).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function ca(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(sa).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function ua(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&z(e,pa(n.name||"v")),z(e,n),e}return"string"==typeof n?pa(n):void 0}}var pa=S((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),da=W&&!K,ma="transition",fa="transitionend",ha="animation",ga="animationend";da&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(ma="WebkitTransition",fa="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(ha="WebkitAnimation",ga="webkitAnimationEnd"));var va=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function ba(n){va((function(){va(n)}))}function ya(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),la(n,e))}function xa(n,e){n._transitionClasses&&x(n._transitionClasses,e),ca(n,e)}function ka(n,e,t){var r=Sa(n,e),a=r.type,i=r.timeout,o=r.propCount;if(!a)return t();var s="transition"===a?fa:ga,l=0,c=function(){n.removeEventListener(s,u),t()},u=function(e){e.target===n&&++l>=o&&c()};setTimeout((function(){l<o&&c()}),i+1),n.addEventListener(s,u)}var Ea=/\b(transform|all)(,|$)/;function Sa(n,e){var t,r=window.getComputedStyle(n),a=(r[ma+"Delay"]||"").split(", "),i=(r[ma+"Duration"]||"").split(", "),o=wa(a,i),s=(r[ha+"Delay"]||"").split(", "),l=(r[ha+"Duration"]||"").split(", "),c=wa(s,l),u=0,p=0;return"transition"===e?o>0&&(t="transition",u=o,p=i.length):"animation"===e?c>0&&(t="animation",u=c,p=l.length):p=(t=(u=Math.max(o,c))>0?o>c?"transition":"animation":null)?"transition"===t?i.length:l.length:0,{type:t,timeout:u,propCount:p,hasTransform:"transition"===t&&Ea.test(r[ma+"Property"])}}function wa(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return Ta(e)+Ta(n[t])})))}function Ta(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Ca(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=ua(n.data.transition);if(!i(r)&&!o(t._enterCb)&&1===t.nodeType){for(var a=r.css,s=r.type,l=r.enterClass,p=r.enterToClass,d=r.enterActiveClass,m=r.appearClass,f=r.appearToClass,h=r.appearActiveClass,g=r.beforeEnter,b=r.enter,y=r.afterEnter,x=r.enterCancelled,k=r.beforeAppear,E=r.appear,S=r.afterAppear,w=r.appearCancelled,T=r.duration,C=Ze,A=Ze.$vnode;A&&A.parent;)C=A.context,A=A.parent;var _=!C._isMounted||!n.isRootInsert;if(!_||E||""===E){var I=_&&m?m:l,j=_&&h?h:d,z=_&&f?f:p,P=_&&k||g,B=_&&c(E)?E:b,O=_&&S||y,M=_&&w||x,R=v(u(T)?T.enter:T);0;var D=!1!==a&&!K,U=Ia(B),L=t._enterCb=$((function(){D&&(xa(t,z),xa(t,j)),L.cancelled?(D&&xa(t,I),M&&M(t)):O&&O(t),t._enterCb=null}));n.data.show||Hn(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),B&&B(t,L)})),P&&P(t),D&&(ya(t,I),ya(t,j),ba((function(){xa(t,I),L.cancelled||(ya(t,z),U||(_a(R)?setTimeout(L,R):ka(t,s,L)))}))),n.data.show&&(e&&e(),B&&B(t,L)),D||U||L()}}}function Aa(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=ua(n.data.transition);if(i(r)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var a=r.css,s=r.type,l=r.leaveClass,c=r.leaveToClass,p=r.leaveActiveClass,d=r.beforeLeave,m=r.leave,f=r.afterLeave,h=r.leaveCancelled,g=r.delayLeave,b=r.duration,y=!1!==a&&!K,x=Ia(m),k=v(u(b)?b.leave:b);0;var E=t._leaveCb=$((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(xa(t,c),xa(t,p)),E.cancelled?(y&&xa(t,l),h&&h(t)):(e(),f&&f(t)),t._leaveCb=null}));g?g(S):S()}function S(){E.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),y&&(ya(t,l),ya(t,p),ba((function(){xa(t,l),E.cancelled||(ya(t,c),x||(_a(k)?setTimeout(E,k):ka(t,s,E)))}))),m&&m(t,E),y||x||E())}}function _a(n){return"number"==typeof n&&!isNaN(n)}function Ia(n){if(i(n))return!1;var e=n.fns;return o(e)?Ia(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function ja(n,e){!0!==e.data.show&&Ca(e)}var za=function(n){var e,t,r={},c=n.modules,u=n.nodeOps;for(e=0;e<Sr.length;++e)for(r[Sr[e]]=[],t=0;t<c.length;++t)o(c[t][Sr[e]])&&r[Sr[e]].push(c[t][Sr[e]]);function p(n){var e=u.parentNode(n);o(e)&&u.removeChild(e,n)}function d(n,e,t,a,i,l,c){if(o(n.elm)&&o(l)&&(n=l[c]=gn(n)),n.isRootInsert=!i,!function(n,e,t,a){var i=n.data;if(o(i)){var l=o(n.componentInstance)&&i.keepAlive;if(o(i=i.hook)&&o(i=i.init)&&i(n,!1),o(n.componentInstance))return m(n,e),f(t,n.elm,a),s(l)&&function(n,e,t,a){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(i=s.data)&&o(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](Er,s);e.push(s);break}f(t,n.elm,a)}(n,e,t,a),!0}}(n,e,t,a)){var p=n.data,d=n.children,g=n.tag;o(g)?(n.elm=n.ns?u.createElementNS(n.ns,g):u.createElement(g,n),y(n),h(n,d,e),o(p)&&v(n,e),f(t,n.elm,a)):s(n.isComment)?(n.elm=u.createComment(n.text),f(t,n.elm,a)):(n.elm=u.createTextNode(n.text),f(t,n.elm,a))}}function m(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,g(n)?(v(n,e),y(n)):(xr(n),e.push(n))}function f(n,e,t){o(n)&&(o(t)?u.parentNode(t)===n&&u.insertBefore(n,e,t):u.appendChild(n,e))}function h(n,e,t){if(a(e)){0;for(var r=0;r<e.length;++r)d(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&u.appendChild(n.elm,u.createTextNode(String(n.text)))}function g(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function v(n,t){for(var a=0;a<r.create.length;++a)r.create[a](Er,n);o(e=n.data.hook)&&(o(e.create)&&e.create(Er,n),o(e.insert)&&t.push(n))}function y(n){var e;if(o(e=n.fnScopeId))u.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&u.setStyleScope(n.elm,e),t=t.parent;o(e=Ze)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&u.setStyleScope(n.elm,e)}function x(n,e,t,r,a,i){for(;r<=a;++r)d(t[r],i,n,e,!1,t,r)}function k(n){var e,t,a=n.data;if(o(a))for(o(e=a.hook)&&o(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)k(n.children[t])}function E(n,e,t){for(;e<=t;++e){var r=n[e];o(r)&&(o(r.tag)?(S(r),k(r)):p(r.elm))}}function S(n,e){if(o(e)||o(n.data)){var t,a=r.remove.length+1;for(o(e)?e.listeners+=a:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,a),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&S(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else p(n.elm)}function w(n,e,t,r){for(var a=t;a<r;a++){var i=e[a];if(o(i)&&wr(n,i))return a}}function T(n,e,t,a,l,c){if(n!==e){o(e.elm)&&o(a)&&(e=a[l]=gn(e));var p=e.elm=n.elm;if(s(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?_(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,f=e.data;o(f)&&o(m=f.hook)&&o(m=m.prepatch)&&m(n,e);var h=n.children,v=e.children;if(o(f)&&g(e)){for(m=0;m<r.update.length;++m)r.update[m](n,e);o(m=f.hook)&&o(m=m.update)&&m(n,e)}i(e.text)?o(h)&&o(v)?h!==v&&function(n,e,t,r,a){var s,l,c,p=0,m=0,f=e.length-1,h=e[0],g=e[f],v=t.length-1,b=t[0],y=t[v],k=!a;for(0;p<=f&&m<=v;)i(h)?h=e[++p]:i(g)?g=e[--f]:wr(h,b)?(T(h,b,r,t,m),h=e[++p],b=t[++m]):wr(g,y)?(T(g,y,r,t,v),g=e[--f],y=t[--v]):wr(h,y)?(T(h,y,r,t,v),k&&u.insertBefore(n,h.elm,u.nextSibling(g.elm)),h=e[++p],y=t[--v]):wr(g,b)?(T(g,b,r,t,m),k&&u.insertBefore(n,g.elm,h.elm),g=e[--f],b=t[++m]):(i(s)&&(s=Tr(e,p,f)),i(l=o(b.key)?s[b.key]:w(b,e,p,f))?d(b,r,n,h.elm,!1,t,m):wr(c=e[l],b)?(T(c,b,r,t,m),e[l]=void 0,k&&u.insertBefore(n,c.elm,h.elm)):d(b,r,n,h.elm,!1,t,m),b=t[++m]);p>f?x(n,i(t[v+1])?null:t[v+1].elm,t,m,v,r):m>v&&E(e,p,f)}(p,h,v,t,c):o(v)?(o(n.text)&&u.setTextContent(p,""),x(p,null,v,0,v.length-1,t)):o(h)?E(h,0,h.length-1):o(n.text)&&u.setTextContent(p,""):n.text!==e.text&&u.setTextContent(p,e.text),o(f)&&o(m=f.hook)&&o(m=m.postpatch)&&m(n,e)}}}function C(n,e,t){if(s(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var A=b("attrs,class,staticClass,staticStyle,key");function _(n,e,t,r){var a,i=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,s(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(a=l.hook)&&o(a=a.init)&&a(e,!0),o(a=e.componentInstance)))return m(e,t),!0;if(o(i)){if(o(c))if(n.hasChildNodes())if(o(a=l)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==n.innerHTML)return!1}else{for(var u=!0,p=n.firstChild,d=0;d<c.length;d++){if(!p||!_(p,c[d],t,r)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else h(e,c,t);if(o(l)){var f=!1;for(var g in l)if(!A(g)){f=!0,v(e,t);break}!f&&l.class&&Ne(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,a){if(!i(e)){var l,c=!1,p=[];if(i(n))c=!0,d(e,p);else{var m=o(n.nodeType);if(!m&&wr(n,e))T(n,e,p,null,null,a);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&_(n,e,p))return C(e,p,!0),n;l=n,n=new mn(u.tagName(l).toLowerCase(),{},[],void 0,l)}var f=n.elm,h=u.parentNode(f);if(d(e,p,f._leaveCb?null:h,u.nextSibling(f)),o(e.parent))for(var v=e.parent,b=g(e);v;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](v);if(v.elm=e.elm,b){for(var x=0;x<r.create.length;++x)r.create[x](Er,v);var S=v.data.hook.insert;if(S.merged)for(var w=1;w<S.fns.length;w++)S.fns[w]()}else xr(v);v=v.parent}o(h)?E([n],0,0):o(n.tag)&&k(n)}}return C(e,p,c),e.elm}o(n)&&k(n)}}({nodeOps:br,modules:[Rr,Ur,Hr,Zr,oa,W?{create:ja,activate:ja,remove:function(n,e){!0!==n.data.show?Aa(n,e):e()}}:{}].concat(Pr)});K&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&Ua(n,"input")}));var Pa={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?Hn(t,"postpatch",(function(){Pa.componentUpdated(n,e,t)})):Ba(n,e,t.context),n._vOptions=[].map.call(n.options,Ra)):("textarea"===t.tag||vr(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Da),n.addEventListener("compositionend",$a),n.addEventListener("change",$a),K&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Ba(n,e,t.context);var r=n._vOptions,a=n._vOptions=[].map.call(n.options,Ra);if(a.some((function(n,e){return!R(n,r[e])})))(n.multiple?e.value.some((function(n){return Ma(n,a)})):e.value!==e.oldValue&&Ma(e.value,a))&&Ua(n,"change")}}};function Ba(n,e,t){Oa(n,e,t),(X||Q)&&setTimeout((function(){Oa(n,e,t)}),0)}function Oa(n,e,t){var r=e.value,a=n.multiple;if(!a||Array.isArray(r)){for(var i,o,s=0,l=n.options.length;s<l;s++)if(o=n.options[s],a)i=D(r,Ra(o))>-1,o.selected!==i&&(o.selected=i);else if(R(Ra(o),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));a||(n.selectedIndex=-1)}}function Ma(n,e){return e.every((function(e){return!R(e,n)}))}function Ra(n){return"_value"in n?n._value:n.value}function Da(n){n.target.composing=!0}function $a(n){n.target.composing&&(n.target.composing=!1,Ua(n.target,"input"))}function Ua(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function La(n){return!n.componentInstance||n.data&&n.data.transition?n:La(n.componentInstance._vnode)}var Na={model:Pa,show:{bind:function(n,e,t){var r=e.value,a=(t=La(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&a?(t.data.show=!0,Ca(t,(function(){n.style.display=i}))):n.style.display=r?i:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=La(t)).data&&t.data.transition?(t.data.show=!0,r?Ca(t,(function(){n.style.display=n.__vOriginalDisplay})):Aa(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,a){a||(n.style.display=n.__vOriginalDisplay)}}},Fa={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Ja(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Ja(Se(e.children)):n}function Va(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var a=t._parentListeners;for(var r in a)e[T(r)]=a[r];return e}function qa(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Ha=function(n){return n.tag||me(n)},Ga=function(n){return"show"===n.name},Wa={name:"transition",props:Fa,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Ha)).length){0;var r=this.mode;0;var a=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return a;var i=Ja(a);if(!i)return a;if(this._leaving)return qa(n,a);var o="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?o+"comment":o+i.tag:l(i.key)?0===String(i.key).indexOf(o)?i.key:o+i.key:i.key;var s=(i.data||(i.data={})).transition=Va(this),c=this._vnode,u=Ja(c);if(i.data.directives&&i.data.directives.some(Ga)&&(i.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,u)&&!me(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=z({},s);if("out-in"===r)return this._leaving=!0,Hn(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),qa(n,a);if("in-out"===r){if(me(i))return c;var d,m=function(){d()};Hn(s,"afterEnter",m),Hn(s,"enterCancelled",m),Hn(p,"delayLeave",(function(n){d=n}))}}return a}}},Za=z({tag:String,moveClass:String},Fa);function Xa(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Ka(n){n.data.newPos=n.elm.getBoundingClientRect()}function Qa(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,a=e.top-t.top;if(r||a){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate(".concat(r,"px,").concat(a,"px)"),i.transitionDuration="0s"}}delete Za.mode;var Ya={Transition:Wa,TransitionGroup:{props:Za,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var a=Xe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,a(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],i=this.children=[],o=Va(this),s=0;s<a.length;s++){if((u=a[s]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))i.push(u),t[u.key]=u,(u.data||(u.data={})).transition=o;else;}if(r){var l=[],c=[];for(s=0;s<r.length;s++){var u;(u=r[s]).data.transition=o,u.data.pos=u.elm.getBoundingClientRect(),t[u.key]?l.push(u):c.push(u)}this.kept=n(e,null,l),this.removed=c}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Xa),n.forEach(Ka),n.forEach(Qa),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;ya(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(fa,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(fa,n),t._moveCb=null,xa(t,e))})}})))},methods:{hasMove:function(n,e){if(!da)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){ca(t,n)})),la(t,e),t.style.display="none",this.$el.appendChild(t);var r=Sa(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};function ni(n,e){for(var t in e)n[t]=e[t];return n}qt.config.mustUseProp=function(n,e,t){return"value"===t&&nr(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},qt.config.isReservedTag=hr,qt.config.isReservedAttr=Yt,qt.config.getTagNamespace=function(n){return fr(n)?"svg":"math"===n?"math":void 0},qt.config.isUnknownElement=function(n){if(!W)return!0;if(hr(n))return!1;if(n=n.toLowerCase(),null!=gr[n])return gr[n];var e=document.createElement(n);return n.indexOf("-")>-1?gr[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:gr[n]=/HTMLUnknownElement/.test(e.toString())},z(qt.options.directives,Na),z(qt.options.components,Ya),qt.prototype.__patch__=W?za:B,qt.prototype.$mount=function(n,e){return function(n,e,t){var r;n.$el=e,n.$options.render||(n.$options.render=fn),Ye(n,"beforeMount"),r=function(){n._update(n._render(),t)},new Ve(n,r,B,{before:function(){n._isMounted&&!n._isDestroyed&&Ye(n,"beforeUpdate")}},!0),t=!1;var a=n._preWatchers;if(a)for(var i=0;i<a.length;i++)a[i].run();return null==n.$vnode&&(n._isMounted=!0,Ye(n,"mounted")),n}(this,n=n&&W?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},W&&setTimeout((function(){F.devtools&&sn&&sn.emit("init",qt)}),0);var ei=/[!'()*]/g,ti=function(n){return"%"+n.charCodeAt(0).toString(16)},ri=/%2C/g,ai=function(n){return encodeURIComponent(n).replace(ei,ti).replace(ri,",")};function ii(n){try{return decodeURIComponent(n)}catch(n){0}return n}var oi=function(n){return null==n||"object"==typeof n?n:String(n)};function si(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=ii(t.shift()),a=t.length>0?ii(t.join("=")):null;void 0===e[r]?e[r]=a:Array.isArray(e[r])?e[r].push(a):e[r]=[e[r],a]})),e):e}function li(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return ai(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(ai(e)):r.push(ai(e)+"="+ai(n)))})),r.join("&")}return ai(e)+"="+ai(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var ci=/\/?$/;function ui(n,e,t,r){var a=r&&r.options.stringifyQuery,i=e.query||{};try{i=pi(i)}catch(n){}var o={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:fi(e,a),matched:n?mi(n):[]};return t&&(o.redirectedFrom=fi(t,a)),Object.freeze(o)}function pi(n){if(Array.isArray(n))return n.map(pi);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=pi(n[t]);return e}return n}var di=ui(null,{path:"/"});function mi(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function fi(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var a=n.hash;return void 0===a&&(a=""),(t||"/")+(e||li)(r)+a}function hi(n,e,t){return e===di?n===e:!!e&&(n.path&&e.path?n.path.replace(ci,"")===e.path.replace(ci,"")&&(t||n.hash===e.hash&&gi(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&gi(n.query,e.query)&&gi(n.params,e.params))))}function gi(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,a){var i=n[t];if(r[a]!==t)return!1;var o=e[t];return null==i||null==o?i===o:"object"==typeof i&&"object"==typeof o?gi(i,o):String(i)===String(o)}))}function vi(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var a=t.instances[r],i=t.enteredCbs[r];if(a&&i){delete t.enteredCbs[r];for(var o=0;o<i.length;o++)a._isBeingDestroyed||i[o](a)}}}}var bi={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,a=e.parent,i=e.data;i.routerView=!0;for(var o=a.$createElement,s=t.name,l=a.$route,c=a._routerViewCache||(a._routerViewCache={}),u=0,p=!1;a&&a._routerRoot!==a;){var d=a.$vnode?a.$vnode.data:{};d.routerView&&u++,d.keepAlive&&a._directInactive&&a._inactive&&(p=!0),a=a.$parent}if(i.routerViewDepth=u,p){var m=c[s],f=m&&m.component;return f?(m.configProps&&yi(f,i,m.route,m.configProps),o(f,i,r)):o()}var h=l.matched[u],g=h&&h.components[s];if(!h||!g)return c[s]=null,o();c[s]={component:g},i.registerRouteInstance=function(n,e){var t=h.instances[s];(e&&t!==n||!e&&t===n)&&(h.instances[s]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){h.instances[s]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==h.instances[s]&&(h.instances[s]=n.componentInstance),vi(l)};var v=h.props&&h.props[s];return v&&(ni(c[s],{route:l,configProps:v}),yi(g,i,l,v)),o(g,i,r)}};function yi(n,e,t,r){var a=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(a){a=e.props=ni({},a);var i=e.attrs=e.attrs||{};for(var o in a)n.props&&o in n.props||(i[o]=a[o],delete a[o])}}function xi(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var a=e.split("/");t&&a[a.length-1]||a.pop();for(var i=n.replace(/^\//,"").split("/"),o=0;o<i.length;o++){var s=i[o];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function ki(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var Ei=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},Si=Di,wi=Ii,Ti=function(n,e){return zi(Ii(n,e),e)},Ci=zi,Ai=Ri,_i=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Ii(n,e){for(var t,r=[],a=0,i=0,o="",s=e&&e.delimiter||"/";null!=(t=_i.exec(n));){var l=t[0],c=t[1],u=t.index;if(o+=n.slice(i,u),i=u+l.length,c)o+=c[1];else{var p=n[i],d=t[2],m=t[3],f=t[4],h=t[5],g=t[6],v=t[7];o&&(r.push(o),o="");var b=null!=d&&null!=p&&p!==d,y="+"===g||"*"===g,x="?"===g||"*"===g,k=t[2]||s,E=f||h;r.push({name:m||a++,prefix:d||"",delimiter:k,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:E?Bi(E):v?".*":"[^"+Pi(k)+"]+?"})}}return i<n.length&&(o+=n.substr(i)),o&&r.push(o),r}function ji(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function zi(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",Mi(e)));return function(e,r){for(var a="",i=e||{},o=(r||{}).pretty?ji:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,u=i[l.name];if(null==u){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(Ei(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(c=o(u[p]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):o(u),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function Pi(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Bi(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function Oi(n,e){return n.keys=e,n}function Mi(n){return n&&n.sensitive?"":"i"}function Ri(n,e,t){Ei(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,a=!1!==t.end,i="",o=0;o<n.length;o++){var s=n[o];if("string"==typeof s)i+=Pi(s);else{var l=Pi(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),i+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=Pi(t.delimiter||"/"),p=i.slice(-u.length)===u;return r||(i=(p?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=a?"$":r&&p?"":"(?="+u+"|$)",Oi(new RegExp("^"+i,Mi(t)),e)}function Di(n,e,t){return Ei(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Oi(n,e)}(n,e):Ei(n)?function(n,e,t){for(var r=[],a=0;a<n.length;a++)r.push(Di(n[a],e,t).source);return Oi(new RegExp("(?:"+r.join("|")+")",Mi(t)),e)}(n,e,t):function(n,e,t){return Ri(Ii(n,t),e,t)}(n,e,t)}Si.parse=wi,Si.compile=Ti,Si.tokensToFunction=Ci,Si.tokensToRegExp=Ai;var $i=Object.create(null);function Ui(n,e,t){e=e||{};try{var r=$i[n]||($i[n]=Si.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function Li(n,e,t,r){var a="string"==typeof n?{path:n}:n;if(a._normalized)return a;if(a.name){var i=(a=ni({},n)).params;return i&&"object"==typeof i&&(a.params=ni({},i)),a}if(!a.path&&a.params&&e){(a=ni({},a))._normalized=!0;var o=ni(ni({},e.params),a.params);if(e.name)a.name=e.name,a.params=o;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;a.path=Ui(s,o,e.path)}else 0;return a}var l=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var a=n.indexOf("?");return a>=0&&(t=n.slice(a+1),n=n.slice(0,a)),{path:n,query:t,hash:e}}(a.path||""),c=e&&e.path||"/",u=l.path?xi(l.path,c,t||a.append):c,p=function(n,e,t){void 0===e&&(e={});var r,a=t||si;try{r=a(n||"")}catch(n){r={}}for(var i in e){var o=e[i];r[i]=Array.isArray(o)?o.map(oi):oi(o)}return r}(l.query,a.query,r&&r.options.parseQuery),d=a.hash||l.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:u,query:p,hash:d}}var Ni,Fi=function(){},Ji={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,a=t.resolve(this.to,r,this.append),i=a.location,o=a.route,s=a.href,l={},c=t.options.linkActiveClass,u=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,d=null==u?"router-link-exact-active":u,m=null==this.activeClass?p:this.activeClass,f=null==this.exactActiveClass?d:this.exactActiveClass,h=o.redirectedFrom?ui(null,Li(o.redirectedFrom),null,t):o;l[f]=hi(r,h,this.exactPath),l[m]=this.exact||this.exactPath?l[f]:function(n,e){return 0===n.path.replace(ci,"/").indexOf(e.path.replace(ci,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,h);var g=l[f]?this.ariaCurrentValue:null,v=function(n){Vi(n)&&(e.replace?t.replace(i,Fi):t.push(i,Fi))},b={click:Vi};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=v})):b[this.event]=v;var y={class:l},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:o,navigate:v,isActive:l[m],isExactActive:l[f]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":g};else{var k=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(k){k.isStatic=!1;var E=k.data=ni({},k.data);for(var S in E.on=E.on||{},E.on){var w=E.on[S];S in b&&(E.on[S]=Array.isArray(w)?w:[w])}for(var T in b)T in E.on?E.on[T].push(b[T]):E.on[T]=v;var C=k.data.attrs=ni({},k.data.attrs);C.href=s,C["aria-current"]=g}else y.on=b}return n(this.tag,y,this.$slots.default)}};function Vi(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var qi="undefined"!=typeof window;function Hi(n,e,t,r,a){var i=e||[],o=t||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,a,i,o){var s=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},u=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return ki(e.path+"/"+n)}(s,i,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var p={path:u,regex:Gi(u,c),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:l,parent:i,matchAs:o,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var i=o?ki(o+"/"+a.path):void 0;n(e,t,r,a,p,i)}));t[p.path]||(e.push(p.path),t[p.path]=p);if(void 0!==a.alias)for(var d=Array.isArray(a.alias)?a.alias:[a.alias],m=0;m<d.length;++m){0;var f={path:d[m],children:a.children};n(e,t,r,f,i,p.path||"/")}l&&(r[l]||(r[l]=p))}(i,o,s,n,a)}));for(var l=0,c=i.length;l<c;l++)"*"===i[l]&&(i.push(i.splice(l,1)[0]),c--,l--);return{pathList:i,pathMap:o,nameMap:s}}function Gi(n,e){return Si(n,[],e)}function Wi(n,e){var t=Hi(n),r=t.pathList,a=t.pathMap,i=t.nameMap;function o(n,t,o){var s=Li(n,t,!1,e),c=s.name;if(c){var u=i[c];if(!u)return l(null,s);var p=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in s.params)&&p.indexOf(d)>-1&&(s.params[d]=t.params[d]);return s.path=Ui(u.path,s.params),l(u,s,o)}if(s.path){s.params={};for(var m=0;m<r.length;m++){var f=r[m],h=a[f];if(Zi(h.regex,s.path,s.params))return l(h,s,o)}}return l(null,s)}function s(n,t){var r=n.redirect,a="function"==typeof r?r(ui(n,t,null,e)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,t);var s=a,c=s.name,u=s.path,p=t.query,d=t.hash,m=t.params;if(p=s.hasOwnProperty("query")?s.query:p,d=s.hasOwnProperty("hash")?s.hash:d,m=s.hasOwnProperty("params")?s.params:m,c){i[c];return o({_normalized:!0,name:c,query:p,hash:d,params:m},void 0,t)}if(u){var f=function(n,e){return xi(n,e.parent?e.parent.path:"/",!0)}(u,n);return o({_normalized:!0,path:Ui(f,m),query:p,hash:d},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=o({_normalized:!0,path:Ui(t,e.params)});if(r){var a=r.matched,i=a[a.length-1];return e.params=r.params,l(i,e)}return l(null,e)}(0,t,n.matchAs):ui(n,t,r,e)}return{match:o,addRoute:function(n,e){var t="object"!=typeof n?i[n]:void 0;Hi([e||n],r,a,i,t),t&&t.alias.length&&Hi(t.alias.map((function(n){return{path:n,children:[e]}})),r,a,i,t)},getRoutes:function(){return r.map((function(n){return a[n]}))},addRoutes:function(n){Hi(n,r,a,i)}}}function Zi(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var a=1,i=r.length;a<i;++a){var o=n.keys[a-1];o&&(t[o.name||"pathMatch"]="string"==typeof r[a]?ii(r[a]):r[a])}return!0}var Xi=qi&&window.performance&&window.performance.now?window.performance:Date;function Ki(){return Xi.now().toFixed(3)}var Qi=Ki();function Yi(){return Qi}function no(n){return Qi=n}var eo=Object.create(null);function to(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=ni({},window.history.state);return t.key=Yi(),window.history.replaceState(t,"",e),window.addEventListener("popstate",io),function(){window.removeEventListener("popstate",io)}}function ro(n,e,t,r){if(n.app){var a=n.options.scrollBehavior;a&&n.app.$nextTick((function(){var i=function(){var n=Yi();if(n)return eo[n]}(),o=a.call(n,e,t,r?i:null);o&&("function"==typeof o.then?o.then((function(n){uo(n,i)})).catch((function(n){0})):uo(o,i))}))}}function ao(){var n=Yi();n&&(eo[n]={x:window.pageXOffset,y:window.pageYOffset})}function io(n){ao(),n.state&&n.state.key&&no(n.state.key)}function oo(n){return lo(n.x)||lo(n.y)}function so(n){return{x:lo(n.x)?n.x:window.pageXOffset,y:lo(n.y)?n.y:window.pageYOffset}}function lo(n){return"number"==typeof n}var co=/^#\d/;function uo(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var a=co.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(a){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(a,i={x:lo((t=i).x)?t.x:0,y:lo(t.y)?t.y:0})}else oo(n)&&(e=so(n))}else r&&oo(n)&&(e=so(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var po,mo=qi&&((-1===(po=window.navigator.userAgent).indexOf("Android 2.")&&-1===po.indexOf("Android 4.0")||-1===po.indexOf("Mobile Safari")||-1!==po.indexOf("Chrome")||-1!==po.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function fo(n,e){ao();var t=window.history;try{if(e){var r=ni({},t.state);r.key=Yi(),t.replaceState(r,"",n)}else t.pushState({key:no(Ki())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function ho(n){fo(n,!0)}var go={redirected:2,aborted:4,cancelled:8,duplicated:16};function vo(n,e){return yo(n,e,go.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return xo.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function bo(n,e){return yo(n,e,go.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function yo(n,e,t,r){var a=new Error(r);return a._isRouter=!0,a.from=n,a.to=e,a.type=t,a}var xo=["params","query","hash"];function ko(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Eo(n,e){return ko(n)&&n._isRouter&&(null==e||n.type===e)}function So(n,e,t){var r=function(a){a>=n.length?t():n[a]?e(n[a],(function(){r(a+1)})):r(a+1)};r(0)}function wo(n){return function(e,t,r){var a=!1,i=0,o=null;To(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){a=!0,i++;var l,c=_o((function(e){var a;((a=e).__esModule||Ao&&"Module"===a[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:Ni.extend(e),t.components[s]=e,--i<=0&&r()})),u=_o((function(n){var e="Failed to resolve async component "+s+": "+n;o||(o=ko(n)?n:new Error(e),r(o))}));try{l=n(c,u)}catch(n){u(n)}if(l)if("function"==typeof l.then)l.then(c,u);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,u)}}})),a||r()}}function To(n,e){return Co(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Co(n){return Array.prototype.concat.apply([],n)}var Ao="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function _o(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var Io=function(n,e){this.router=n,this.base=function(n){if(!n)if(qi){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=di,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function jo(n,e,t,r){var a=To(n,(function(n,r,a,i){var o=function(n,e){"function"!=typeof n&&(n=Ni.extend(n));return n.options[e]}(n,e);if(o)return Array.isArray(o)?o.map((function(n){return t(n,r,a,i)})):t(o,r,a,i)}));return Co(r?a.reverse():a)}function zo(n,e){if(e)return function(){return n.apply(e,arguments)}}Io.prototype.listen=function(n){this.cb=n},Io.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Io.prototype.onError=function(n){this.errorCbs.push(n)},Io.prototype.transitionTo=function(n,e,t){var r,a=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var i=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),e&&e(r),a.ensureURL(),a.router.afterHooks.forEach((function(n){n&&n(r,i)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!a.ready&&(Eo(n,go.redirected)&&i===di||(a.ready=!0,a.readyErrorCbs.forEach((function(e){e(n)}))))}))},Io.prototype.confirmTransition=function(n,e,t){var r=this,a=this.current;this.pending=n;var i,o,s=function(n){!Eo(n)&&ko(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=a.matched.length-1;if(hi(n,a)&&l===c&&n.matched[l]===a.matched[c])return this.ensureURL(),n.hash&&ro(this.router,a,n,!1),s(((o=yo(i=a,n,go.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",o));var u=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),p=u.updated,d=u.deactivated,m=u.activated,f=[].concat(function(n){return jo(n,"beforeRouteLeave",zo,!0)}(d),this.router.beforeHooks,function(n){return jo(n,"beforeRouteUpdate",zo)}(p),m.map((function(n){return n.beforeEnter})),wo(m)),h=function(e,t){if(r.pending!==n)return s(bo(a,n));try{e(n,a,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return yo(n,e,go.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(a,n))):ko(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(vo(a,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};So(f,h,(function(){So(function(n){return jo(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,a,i){return n(r,a,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),i(n)}))}}(n,t,r)}))}(m).concat(r.router.resolveHooks),h,(function(){if(r.pending!==n)return s(bo(a,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){vi(n)}))}))}))},Io.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Io.prototype.setupListeners=function(){},Io.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=di,this.pending=null};var Po=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Bo(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=mo&&t;r&&this.listeners.push(to());var a=function(){var t=n.current,a=Bo(n.base);n.current===di&&a===n._startLocation||n.transitionTo(a,(function(n){r&&ro(e,n,t,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){fo(ki(r.base+n.fullPath)),ro(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){ho(ki(r.base+n.fullPath)),ro(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Bo(this.base)!==this.current.fullPath){var e=ki(this.base+this.current.fullPath);n?fo(e):ho(e)}},e.prototype.getCurrentLocation=function(){return Bo(this.base)},e}(Io);function Bo(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(ki(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Oo=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=Bo(n);if(!/^\/#/.test(e))return window.location.replace(ki(n+"/#"+e)),!0}(this.base)||Mo()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=mo&&e;t&&this.listeners.push(to());var r=function(){var e=n.current;Mo()&&n.transitionTo(Ro(),(function(r){t&&ro(n.router,r,e,!0),mo||Uo(r.fullPath)}))},a=mo?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},e.prototype.push=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){$o(n.fullPath),ro(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){Uo(n.fullPath),ro(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Ro()!==e&&(n?$o(e):Uo(e))},e.prototype.getCurrentLocation=function(){return Ro()},e}(Io);function Mo(){var n=Ro();return"/"===n.charAt(0)||(Uo("/"+n),!1)}function Ro(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Do(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function $o(n){mo?fo(Do(n)):window.location.hash=n}function Uo(n){mo?ho(Do(n)):window.location.replace(Do(n))}var Lo=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){Eo(n,go.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Io),No=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Wi(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!mo&&!1!==n.fallback,this.fallback&&(e="hash"),qi||(e="abstract"),this.mode=e,e){case"history":this.history=new Po(this,n.base);break;case"hash":this.history=new Oo(this,n.base,this.fallback);break;case"abstract":this.history=new Lo(this,n.base);break;default:0}},Fo={currentRoute:{configurable:!0}};No.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Fo.currentRoute.get=function(){return this.history&&this.history.current},No.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Po||t instanceof Oo){var r=function(n){t.setupListeners(),function(n){var r=t.current,a=e.options.scrollBehavior;mo&&a&&"fullPath"in n&&ro(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},No.prototype.beforeEach=function(n){return Vo(this.beforeHooks,n)},No.prototype.beforeResolve=function(n){return Vo(this.resolveHooks,n)},No.prototype.afterEach=function(n){return Vo(this.afterHooks,n)},No.prototype.onReady=function(n,e){this.history.onReady(n,e)},No.prototype.onError=function(n){this.history.onError(n)},No.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},No.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},No.prototype.go=function(n){this.history.go(n)},No.prototype.back=function(){this.go(-1)},No.prototype.forward=function(){this.go(1)},No.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},No.prototype.resolve=function(n,e,t){var r=Li(n,e=e||this.history.current,t,this),a=this.match(r,e),i=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?ki(n+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:a}},No.prototype.getRoutes=function(){return this.matcher.getRoutes()},No.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==di&&this.history.transitionTo(this.history.getCurrentLocation())},No.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==di&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(No.prototype,Fo);var Jo=No;function Vo(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}No.install=function n(e){if(!n.installed||Ni!==e){n.installed=!0,Ni=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",bi),e.component("RouterLink",Ji);var a=e.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},No.version="3.6.4",No.isNavigationFailure=Eo,No.NavigationFailureType=go,No.START_LOCATION=di,qi&&window.Vue&&window.Vue.use(No);t(101);t(125);var qo={NotFound:()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,335)),Layout:()=>Promise.all([t.e(0),t.e(2)]).then(t.bind(null,334))},Ho={"v-4553e29a":()=>t.e(16).then(t.bind(null,336)),"v-3af4ed73":()=>t.e(17).then(t.bind(null,337)),"v-ced8679a":()=>t.e(18).then(t.bind(null,338)),"v-139aaa1a":()=>t.e(19).then(t.bind(null,339)),"v-53d189b3":()=>t.e(20).then(t.bind(null,340)),"v-9d1f2f1a":()=>t.e(21).then(t.bind(null,341)),"v-0f0f4733":()=>t.e(22).then(t.bind(null,342)),"v-6cae25f3":()=>t.e(23).then(t.bind(null,343)),"v-6b65f69a":()=>t.e(24).then(t.bind(null,344)),"v-29be7ce1":()=>t.e(25).then(t.bind(null,345)),"v-4053c8e1":()=>t.e(26).then(t.bind(null,346)),"v-3ca6161a":()=>t.e(27).then(t.bind(null,347)),"v-7a3b0982":()=>t.e(28).then(t.bind(null,348)),"v-92f36068":()=>t.e(29).then(t.bind(null,349)),"v-117b3c17":()=>t.e(30).then(t.bind(null,350)),"v-c45cbe58":()=>t.e(5).then(t.bind(null,351)),"v-7b3c9250":()=>t.e(31).then(t.bind(null,352)),"v-50adfce0":()=>t.e(32).then(t.bind(null,353)),"v-5de1ace2":()=>t.e(7).then(t.bind(null,354)),"v-9c62bc7c":()=>t.e(8).then(t.bind(null,355)),"v-25624120":()=>t.e(9).then(t.bind(null,356)),"v-424d1a10":()=>t.e(33).then(t.bind(null,357)),"v-458cae27":()=>t.e(10).then(t.bind(null,358)),"v-498423f6":()=>t.e(34).then(t.bind(null,359)),"v-4f6bc734":()=>t.e(35).then(t.bind(null,360)),"v-35e552d1":()=>t.e(36).then(t.bind(null,361)),"v-0afebd0f":()=>t.e(37).then(t.bind(null,362)),"v-c360f9da":()=>t.e(38).then(t.bind(null,363)),"v-43c23156":()=>t.e(39).then(t.bind(null,364)),"v-64265c0c":()=>t.e(40).then(t.bind(null,365)),"v-ec73c972":()=>t.e(11).then(t.bind(null,366)),"v-556efd19":()=>t.e(41).then(t.bind(null,367)),"v-d35a7e4a":()=>t.e(42).then(t.bind(null,368)),"v-4aa6d1ec":()=>t.e(43).then(t.bind(null,369)),"v-c065396a":()=>t.e(44).then(t.bind(null,370)),"v-779882c3":()=>t.e(45).then(t.bind(null,371)),"v-2d7008b7":()=>t.e(46).then(t.bind(null,372)),"v-ebbc19d2":()=>t.e(47).then(t.bind(null,373)),"v-63e31f32":()=>t.e(48).then(t.bind(null,374)),"v-432e9239":()=>t.e(49).then(t.bind(null,375)),"v-6d47f78a":()=>t.e(12).then(t.bind(null,376)),"v-cc055e2c":()=>t.e(6).then(t.bind(null,377)),"v-90869c28":()=>t.e(50).then(t.bind(null,378)),"v-1eb5c8ce":()=>t.e(51).then(t.bind(null,379)),"v-738f4df7":()=>t.e(52).then(t.bind(null,380)),"v-7fa2f8c3":()=>t.e(53).then(t.bind(null,381)),"v-48127d6e":()=>t.e(13).then(t.bind(null,382)),"v-4d233e08":()=>t.e(14).then(t.bind(null,383)),"v-1ba04538":()=>t.e(54).then(t.bind(null,384)),"v-96ee807e":()=>t.e(55).then(t.bind(null,385)),"v-7809cc13":()=>t.e(56).then(t.bind(null,386)),"v-72c9cbe3":()=>t.e(57).then(t.bind(null,387)),"v-58da78da":()=>t.e(59).then(t.bind(null,388)),"v-339c9639":()=>t.e(58).then(t.bind(null,389)),"v-13d7552e":()=>t.e(60).then(t.bind(null,390)),"v-26553830":()=>t.e(61).then(t.bind(null,391)),"v-a0918bee":()=>t.e(62).then(t.bind(null,392)),"v-6af311b1":()=>t.e(63).then(t.bind(null,393)),"v-38855b18":()=>t.e(15).then(t.bind(null,394)),"v-3c7a4958":()=>t.e(65).then(t.bind(null,395)),"v-53bf4cd7":()=>t.e(64).then(t.bind(null,396)),"v-252ffd04":()=>t.e(66).then(t.bind(null,397)),"v-37a54737":()=>t.e(67).then(t.bind(null,398)),"v-164eb618":()=>t.e(69).then(t.bind(null,399)),"v-675625d0":()=>t.e(68).then(t.bind(null,400)),"v-559637e0":()=>t.e(70).then(t.bind(null,401)),"v-084ae744":()=>t.e(71).then(t.bind(null,402)),"v-4bcb0bb2":()=>t.e(72).then(t.bind(null,403)),"v-a325224c":()=>t.e(73).then(t.bind(null,404)),"v-4c4a0522":()=>t.e(74).then(t.bind(null,405)),"v-6462a9b0":()=>t.e(75).then(t.bind(null,406)),"v-259c3ae0":()=>t.e(76).then(t.bind(null,407)),"v-1ffcc279":()=>t.e(78).then(t.bind(null,408)),"v-5c505a1c":()=>t.e(79).then(t.bind(null,409)),"v-7b6d445b":()=>t.e(77).then(t.bind(null,410)),"v-795e2903":()=>t.e(80).then(t.bind(null,411)),"v-43bc1f77":()=>t.e(81).then(t.bind(null,412)),"v-2863befc":()=>t.e(82).then(t.bind(null,413))};function Go(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Wo=/-(\w)/g,Zo=Go(n=>n.replace(Wo,(n,e)=>e?e.toUpperCase():"")),Xo=/\B([A-Z])/g,Ko=Go(n=>n.replace(Xo,"-$1").toLowerCase()),Qo=Go(n=>n.charAt(0).toUpperCase()+n.slice(1));function Yo(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(Qo(Zo(e))):n(Qo(e))||n(Ko(e))}const ns=Object.assign({},qo,Ho),es=n=>ns[n],ts=n=>Ho[n],rs=n=>qo[n],as=n=>qt.component(n);function is(n){return Yo(ts,n)}function os(n){return Yo(rs,n)}function ss(n){return Yo(es,n)}function ls(n){return Yo(as,n)}function cs(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!ls(n)&&ss(n)){const e=await ss(n)();qt.component(n,e.default)}}))}function us(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var ps=t(90),ds=t.n(ps),ms=t(91),fs=t.n(ms),hs={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${fs()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=vs(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=bs(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return ds()([{name:"description",content:this.$description}],n,this.siteMeta,ys)},updateCanonicalLink(){gs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",vs(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){bs(null,this.currentMetaTags),gs()}};function gs(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function vs(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function bs(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function ys(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}var xs=t(49),ks={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(xs)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+t;for(let n=0;n<e.length;n++){const i=e[n],o=e[n+1],s=0===n&&0===t||t>=i.parentElement.offsetTop+10&&(!o||t<o.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(i.hash)){const t=i;if(a===r)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Es=t(23),Ss=t.n(Es),ws={mounted(){Ss.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||qt.component(n.name)||Ss.a.start(),t()}),this.$router.afterEach(()=>{Ss.a.done(),this.isSidebarOpen=!1})}},Ts=(t(232),Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}),Cs=function(n){return"IMG"===n.tagName},As=function(n){return n&&1===n.nodeType},_s=function(n){return".svg"===(n.currentSrc||n.src).substr(-4).toLowerCase()},Is=function(n){try{return Array.isArray(n)?n.filter(Cs):function(n){return NodeList.prototype.isPrototypeOf(n)}(n)?[].slice.call(n).filter(Cs):As(n)?[n].filter(Cs):"string"==typeof n?[].slice.call(document.querySelectorAll(n)).filter(Cs):[]}catch(n){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},js=function(n){var e=document.createElement("div");return e.classList.add("medium-zoom-overlay"),e.style.background=n,e},zs=function(n){var e=n.getBoundingClientRect(),t=e.top,r=e.left,a=e.width,i=e.height,o=n.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return o.removeAttribute("id"),o.style.position="absolute",o.style.top=t+s+"px",o.style.left=r+l+"px",o.style.width=a+"px",o.style.height=i+"px",o.style.transform="",o},Ps=function(n,e){var t=Ts({bubbles:!1,cancelable:!1,detail:void 0},e);if("function"==typeof window.CustomEvent)return new CustomEvent(n,t);var r=document.createEvent("CustomEvent");return r.initCustomEvent(n,t.bubbles,t.cancelable,t.detail),r};!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css","top"===t&&r.firstChild?r.insertBefore(a,r.firstChild):r.appendChild(a),a.styleSheet?a.styleSheet.cssText=n:a.appendChild(document.createTextNode(n))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Bs=function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=window.Promise||function(n){function e(){}n(e,e)},a=function(n){var e=n.target;e!==T?-1!==y.indexOf(e)&&h({target:e}):f()},i=function(){if(!k&&w.original){var n=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(E-n)>S.scrollOffset&&setTimeout(f,150)}},o=function(n){var e=n.key||n.keyCode;"Escape"!==e&&"Esc"!==e&&27!==e||f()},s=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n;if(n.background&&(T.style.background=n.background),n.container&&n.container instanceof Object&&(e.container=Ts({},S.container,n.container)),n.template){var t=As(n.template)?n.template:document.querySelector(n.template);e.template=t}return S=Ts({},S,e),y.forEach((function(n){n.dispatchEvent(Ps("medium-zoom:update",{detail:{zoom:C}}))})),C},l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return n(Ts({},S,e))},c=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];var r=e.reduce((function(n,e){return[].concat(n,Is(e))}),[]);return r.filter((function(n){return-1===y.indexOf(n)})).forEach((function(n){y.push(n),n.classList.add("medium-zoom-image")})),x.forEach((function(n){var e=n.type,t=n.listener,a=n.options;r.forEach((function(n){n.addEventListener(e,t,a)}))})),C},u=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];w.zoomed&&f();var r=e.length>0?e.reduce((function(n,e){return[].concat(n,Is(e))}),[]):y;return r.forEach((function(n){n.classList.remove("medium-zoom-image"),n.dispatchEvent(Ps("medium-zoom:detach",{detail:{zoom:C}}))})),y=y.filter((function(n){return-1===r.indexOf(n)})),C},p=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(r){r.addEventListener("medium-zoom:"+n,e,t)})),x.push({type:"medium-zoom:"+n,listener:e,options:t}),C},d=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(r){r.removeEventListener("medium-zoom:"+n,e,t)})),x=x.filter((function(t){return!(t.type==="medium-zoom:"+n&&t.listener.toString()===e.toString())})),C},m=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target,t=function(){var n={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},e=void 0,t=void 0;if(S.container)if(S.container instanceof Object)e=(n=Ts({},n,S.container)).width-n.left-n.right-2*S.margin,t=n.height-n.top-n.bottom-2*S.margin;else{var r=(As(S.container)?S.container:document.querySelector(S.container)).getBoundingClientRect(),a=r.width,i=r.height,o=r.left,s=r.top;n=Ts({},n,{width:a,height:i,left:o,top:s})}e=e||n.width-2*S.margin,t=t||n.height-2*S.margin;var l=w.zoomedHd||w.original,c=_s(l)?e:l.naturalWidth||e,u=_s(l)?t:l.naturalHeight||t,p=l.getBoundingClientRect(),d=p.top,m=p.left,f=p.width,h=p.height,g=Math.min(c,e)/f,v=Math.min(u,t)/h,b=Math.min(g,v),y="scale("+b+") translate3d("+((e-f)/2-m+S.margin+n.left)/b+"px, "+((t-h)/2-d+S.margin+n.top)/b+"px, 0)";w.zoomed.style.transform=y,w.zoomedHd&&(w.zoomedHd.style.transform=y)};return new r((function(n){if(e&&-1===y.indexOf(e))n(C);else{if(w.zoomed)n(C);else{if(e)w.original=e;else{if(!(y.length>0))return void n(C);var r=y;w.original=r[0]}if(w.original.dispatchEvent(Ps("medium-zoom:open",{detail:{zoom:C}})),E=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,k=!0,w.zoomed=zs(w.original),document.body.appendChild(T),S.template){var a=As(S.template)?S.template:document.querySelector(S.template);w.template=document.createElement("div"),w.template.appendChild(a.content.cloneNode(!0)),document.body.appendChild(w.template)}if(document.body.appendChild(w.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),w.original.classList.add("medium-zoom-image--hidden"),w.zoomed.classList.add("medium-zoom-image--opened"),w.zoomed.addEventListener("click",f),w.zoomed.addEventListener("transitionend",(function e(){k=!1,w.zoomed.removeEventListener("transitionend",e),w.original.dispatchEvent(Ps("medium-zoom:opened",{detail:{zoom:C}})),n(C)})),w.original.getAttribute("data-zoom-src")){w.zoomedHd=w.zoomed.cloneNode(),w.zoomedHd.removeAttribute("srcset"),w.zoomedHd.removeAttribute("sizes"),w.zoomedHd.src=w.zoomed.getAttribute("data-zoom-src"),w.zoomedHd.onerror=function(){clearInterval(i),console.warn("Unable to reach the zoom image target "+w.zoomedHd.src),w.zoomedHd=null,t()};var i=setInterval((function(){w.zoomedHd.complete&&(clearInterval(i),w.zoomedHd.classList.add("medium-zoom-image--opened"),w.zoomedHd.addEventListener("click",f),document.body.appendChild(w.zoomedHd),t())}),10)}else if(w.original.hasAttribute("srcset")){w.zoomedHd=w.zoomed.cloneNode(),w.zoomedHd.removeAttribute("sizes"),w.zoomedHd.removeAttribute("loading");var o=w.zoomedHd.addEventListener("load",(function(){w.zoomedHd.removeEventListener("load",o),w.zoomedHd.classList.add("medium-zoom-image--opened"),w.zoomedHd.addEventListener("click",f),document.body.appendChild(w.zoomedHd),t()}))}else t()}}}))},f=function(){return new r((function(n){if(!k&&w.original){k=!0,document.body.classList.remove("medium-zoom--opened"),w.zoomed.style.transform="",w.zoomedHd&&(w.zoomedHd.style.transform=""),w.template&&(w.template.style.transition="opacity 150ms",w.template.style.opacity=0),w.original.dispatchEvent(Ps("medium-zoom:close",{detail:{zoom:C}})),w.zoomed.addEventListener("transitionend",(function e(){w.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(w.zoomed),w.zoomedHd&&document.body.removeChild(w.zoomedHd),document.body.removeChild(T),w.zoomed.classList.remove("medium-zoom-image--opened"),w.template&&document.body.removeChild(w.template),k=!1,w.zoomed.removeEventListener("transitionend",e),w.original.dispatchEvent(Ps("medium-zoom:closed",{detail:{zoom:C}})),w.original=null,w.zoomed=null,w.zoomedHd=null,w.template=null,n(C)}))}else n(C)}))},h=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target;return w.original?f():m({target:e})},g=function(){return S},v=function(){return y},b=function(){return w.original},y=[],x=[],k=!1,E=0,S=t,w={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(e)?S=e:(e||"string"==typeof e)&&c(e),S=Ts({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},S);var T=js(S.background);document.addEventListener("click",a),document.addEventListener("keyup",o),document.addEventListener("scroll",i),window.addEventListener("resize",f);var C={open:m,close:f,toggle:h,update:s,clone:l,attach:c,detach:u,on:p,off:d,getOptions:g,getImages:v,getZoomedImage:b};return C},Os={data:()=>({zoom:null}),mounted(){this.updateZoom()},updated(){this.updateZoom()},methods:{updateZoom(){setTimeout(()=>{this.zoom&&this.zoom.detach(),this.zoom=Bs(".theme-vdoing-content img:not(.no-zoom)",{})},1e3)}}};t(233),t(234);class Ms{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var Rs=[hs,ks,ws,Os,{mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new Ms).show({text:"复制成功",duration:3e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}}],Ds={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return us("layout",n),qt.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},$s=t(6),Us=Object($s.a)(Ds,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(Us,"mixins",Rs);const Ls=[{name:"v-4553e29a",path:"/nav1/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-4553e29a").then(t)}},{path:"/nav1/index.html",redirect:"/nav1/"},{path:"/00.目录页/01.nav1.html",redirect:"/nav1/"},{name:"v-3af4ed73",path:"/nav2/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-3af4ed73").then(t)}},{path:"/nav2/index.html",redirect:"/nav2/"},{path:"/00.目录页/02.nav2.html",redirect:"/nav2/"},{name:"v-ced8679a",path:"/nav3/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-ced8679a").then(t)}},{path:"/nav3/index.html",redirect:"/nav3/"},{path:"/00.目录页/03.nav3.html",redirect:"/nav3/"},{name:"v-139aaa1a",path:"/nav4/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-139aaa1a").then(t)}},{path:"/nav4/index.html",redirect:"/nav4/"},{path:"/00.目录页/04.nav4.html",redirect:"/nav4/"},{name:"v-53d189b3",path:"/nav5/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-53d189b3").then(t)}},{path:"/nav5/index.html",redirect:"/nav5/"},{path:"/00.目录页/05.nav5.html",redirect:"/nav5/"},{name:"v-9d1f2f1a",path:"/nav6/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-9d1f2f1a").then(t)}},{path:"/nav6/index.html",redirect:"/nav6/"},{path:"/00.目录页/06.nav6.html",redirect:"/nav6/"},{name:"v-0f0f4733",path:"/nav7/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-0f0f4733").then(t)}},{path:"/nav7/index.html",redirect:"/nav7/"},{path:"/00.目录页/07.nav7.html",redirect:"/nav7/"},{name:"v-6cae25f3",path:"/pages/c4fc16/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-6cae25f3").then(t)}},{path:"/pages/c4fc16/index.html",redirect:"/pages/c4fc16/"},{path:"/00.目录页/08.nav8.html",redirect:"/pages/c4fc16/"},{name:"v-6b65f69a",path:"/pages/2e8ff4/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-6b65f69a").then(t)}},{path:"/pages/2e8ff4/index.html",redirect:"/pages/2e8ff4/"},{path:"/00.目录页/09.nav9.html",redirect:"/pages/2e8ff4/"},{name:"v-29be7ce1",path:"/nav10/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-29be7ce1").then(t)}},{path:"/nav10/index.html",redirect:"/nav10/"},{path:"/00.目录页/10.nav10.html",redirect:"/nav10/"},{name:"v-4053c8e1",path:"/pages/d657ad/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-4053c8e1").then(t)}},{path:"/pages/d657ad/index.html",redirect:"/pages/d657ad/"},{path:"/00.目录页/20.Direction.html",redirect:"/pages/d657ad/"},{name:"v-3ca6161a",path:"/pages/6610c3/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-3ca6161a").then(t)}},{path:"/pages/6610c3/index.html",redirect:"/pages/6610c3/"},{path:"/02.前端核心/02.HTML/02.HTML基础.html",redirect:"/pages/6610c3/"},{name:"v-7a3b0982",path:"/pages/8d8cc5/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-7a3b0982").then(t)}},{path:"/pages/8d8cc5/index.html",redirect:"/pages/8d8cc5/"},{path:"/02.前端核心/02.HTML/04.SVG.html",redirect:"/pages/8d8cc5/"},{name:"v-92f36068",path:"/pages/ff116a/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-92f36068").then(t)}},{path:"/pages/ff116a/index.html",redirect:"/pages/ff116a/"},{path:"/02.前端核心/02.HTML/06.Canvas.html",redirect:"/pages/ff116a/"},{name:"v-117b3c17",path:"/pages/de9f63/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-117b3c17").then(t)}},{path:"/pages/de9f63/index.html",redirect:"/pages/de9f63/"},{path:"/02.前端核心/04.CSS/04.布局.html",redirect:"/pages/de9f63/"},{name:"v-c45cbe58",path:"/pages/ebc097/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-c45cbe58").then(t)}},{path:"/pages/ebc097/index.html",redirect:"/pages/ebc097/"},{path:"/02.前端核心/04.CSS/02.CSS基础.html",redirect:"/pages/ebc097/"},{name:"v-7b3c9250",path:"/pages/291205/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-7b3c9250").then(t)}},{path:"/pages/291205/index.html",redirect:"/pages/291205/"},{path:"/02.前端核心/04.CSS/06.预处理语言.html",redirect:"/pages/291205/"},{name:"v-50adfce0",path:"/pages/5f4f4a/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-50adfce0").then(t)}},{path:"/pages/5f4f4a/index.html",redirect:"/pages/5f4f4a/"},{path:"/02.前端核心/04.CSS/08.CSS进阶.html",redirect:"/pages/5f4f4a/"},{name:"v-5de1ace2",path:"/pages/023981/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-5de1ace2").then(t)}},{path:"/pages/023981/index.html",redirect:"/pages/023981/"},{path:"/02.前端核心/06.JAVASCRIPT/02.JS相关.html",redirect:"/pages/023981/"},{name:"v-9c62bc7c",path:"/pages/2f5334/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-9c62bc7c").then(t)}},{path:"/pages/2f5334/index.html",redirect:"/pages/2f5334/"},{path:"/02.前端核心/06.JAVASCRIPT/04.DOM.html",redirect:"/pages/2f5334/"},{name:"v-25624120",path:"/pages/a65e15/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-25624120").then(t)}},{path:"/pages/a65e15/index.html",redirect:"/pages/a65e15/"},{path:"/02.前端核心/06.JAVASCRIPT/08.JS执行上下文.html",redirect:"/pages/a65e15/"},{name:"v-424d1a10",path:"/pages/fdd069/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-424d1a10").then(t)}},{path:"/pages/fdd069/index.html",redirect:"/pages/fdd069/"},{path:"/02.前端核心/06.JAVASCRIPT/06.JS正则表达式.html",redirect:"/pages/fdd069/"},{name:"v-458cae27",path:"/pages/0f41a0/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-458cae27").then(t)}},{path:"/pages/0f41a0/index.html",redirect:"/pages/0f41a0/"},{path:"/02.前端核心/06.JAVASCRIPT/10.JS执行机制.html",redirect:"/pages/0f41a0/"},{name:"v-498423f6",path:"/pages/49be71/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-498423f6").then(t)}},{path:"/pages/49be71/index.html",redirect:"/pages/49be71/"},{path:"/02.前端核心/06.JAVASCRIPT/12.原型链和Prototype.html",redirect:"/pages/49be71/"},{name:"v-4f6bc734",path:"/pages/19b349/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-4f6bc734").then(t)}},{path:"/pages/19b349/index.html",redirect:"/pages/19b349/"},{path:"/02.前端核心/06.JAVASCRIPT/14.JS类型判断.html",redirect:"/pages/19b349/"},{name:"v-35e552d1",path:"/pages/b02d31/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-35e552d1").then(t)}},{path:"/pages/b02d31/index.html",redirect:"/pages/b02d31/"},{path:"/02.前端核心/08.TYPESCRIPT/02.TS类型.html",redirect:"/pages/b02d31/"},{name:"v-0afebd0f",path:"/pages/f1a087/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-0afebd0f").then(t)}},{path:"/pages/f1a087/index.html",redirect:"/pages/f1a087/"},{path:"/02.前端核心/08.TYPESCRIPT/04.TS类型体操.html",redirect:"/pages/f1a087/"},{name:"v-c360f9da",path:"/pages/71a516/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-c360f9da").then(t)}},{path:"/pages/71a516/index.html",redirect:"/pages/71a516/"},{path:"/02.前端核心/08.TYPESCRIPT/06.TS装饰器.html",redirect:"/pages/71a516/"},{name:"v-43c23156",path:"/pages/3672e4/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-43c23156").then(t)}},{path:"/pages/3672e4/index.html",redirect:"/pages/3672e4/"},{path:"/02.前端核心/08.TYPESCRIPT/08.声明文件.html",redirect:"/pages/3672e4/"},{name:"v-64265c0c",path:"/pages/fvdhb4/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-64265c0c").then(t)}},{path:"/pages/fvdhb4/index.html",redirect:"/pages/fvdhb4/"},{path:"/02.前端核心/08.TYPESCRIPT/10.tsconfigjson.html",redirect:"/pages/fvdhb4/"},{name:"v-ec73c972",path:"/pages/bfc8a9/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-ec73c972").then(t)}},{path:"/pages/bfc8a9/index.html",redirect:"/pages/bfc8a9/"},{path:"/02.前端核心/10.浏览器.html",redirect:"/pages/bfc8a9/"},{name:"v-556efd19",path:"/pages/0571cf/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-556efd19").then(t)}},{path:"/pages/0571cf/index.html",redirect:"/pages/0571cf/"},{path:"/02.前端核心/12.项目构建/01.模块化.html",redirect:"/pages/0571cf/"},{name:"v-d35a7e4a",path:"/pages/fdde5d/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-d35a7e4a").then(t)}},{path:"/pages/fdde5d/index.html",redirect:"/pages/fdde5d/"},{path:"/02.前端核心/12.项目构建/02.项目构建工具.html",redirect:"/pages/fdde5d/"},{name:"v-4aa6d1ec",path:"/pages/2eb00d/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-4aa6d1ec").then(t)}},{path:"/pages/2eb00d/index.html",redirect:"/pages/2eb00d/"},{path:"/02.前端核心/12.项目构建/04.包管理工具.html",redirect:"/pages/2eb00d/"},{name:"v-c065396a",path:"/pages/40a7d0/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-c065396a").then(t)}},{path:"/pages/40a7d0/index.html",redirect:"/pages/40a7d0/"},{path:"/02.前端核心/12.项目构建/05.babel.html",redirect:"/pages/40a7d0/"},{name:"v-779882c3",path:"/pages/340243/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-779882c3").then(t)}},{path:"/pages/340243/index.html",redirect:"/pages/340243/"},{path:"/02.前端核心/12.项目构建/06.webpack.html",redirect:"/pages/340243/"},{name:"v-2d7008b7",path:"/pages/5e472d/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-2d7008b7").then(t)}},{path:"/pages/5e472d/index.html",redirect:"/pages/5e472d/"},{path:"/02.前端核心/12.项目构建/08.rollup.html",redirect:"/pages/5e472d/"},{name:"v-ebbc19d2",path:"/pages/db215c/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-ebbc19d2").then(t)}},{path:"/pages/db215c/index.html",redirect:"/pages/db215c/"},{path:"/02.前端核心/12.项目构建/10.vite.html",redirect:"/pages/db215c/"},{name:"v-63e31f32",path:"/pages/c14805/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-63e31f32").then(t)}},{path:"/pages/c14805/index.html",redirect:"/pages/c14805/"},{path:"/02.前端核心/12.项目构建/12.esbuild.html",redirect:"/pages/c14805/"},{name:"v-432e9239",path:"/pages/008666/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-432e9239").then(t)}},{path:"/pages/008666/index.html",redirect:"/pages/008666/"},{path:"/02.前端核心/14.HTTP.html",redirect:"/pages/008666/"},{name:"v-6d47f78a",path:"/pages/ca7770/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-6d47f78a").then(t)}},{path:"/pages/ca7770/index.html",redirect:"/pages/ca7770/"},{path:"/04.前端框架/02.NodeJS/02.JS与Node异同.html",redirect:"/pages/ca7770/"},{name:"v-cc055e2c",path:"/pages/c68f27/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-cc055e2c").then(t)}},{path:"/pages/c68f27/index.html",redirect:"/pages/c68f27/"},{path:"/04.前端框架/04.Vue/02.Vue笔记.html",redirect:"/pages/c68f27/"},{name:"v-90869c28",path:"/pages/38a877/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-90869c28").then(t)}},{path:"/pages/38a877/index.html",redirect:"/pages/38a877/"},{path:"/04.前端框架/04.Vue/04.vuepress搭建博客.html",redirect:"/pages/38a877/"},{name:"v-1eb5c8ce",path:"/pages/9b2b82/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-1eb5c8ce").then(t)}},{path:"/pages/9b2b82/index.html",redirect:"/pages/9b2b82/"},{path:"/04.前端框架/06.Angular/02.NG基础.html",redirect:"/pages/9b2b82/"},{name:"v-738f4df7",path:"/pages/8b348e/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-738f4df7").then(t)}},{path:"/pages/8b348e/index.html",redirect:"/pages/8b348e/"},{path:"/04.前端框架/06.Angular/04.方法执行顺序.html",redirect:"/pages/8b348e/"},{name:"v-7fa2f8c3",path:"/pages/91efda/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-7fa2f8c3").then(t)}},{path:"/pages/91efda/index.html",redirect:"/pages/91efda/"},{path:"/04.前端框架/06.Angular/06.NG变更检测.html",redirect:"/pages/91efda/"},{name:"v-48127d6e",path:"/pages/d644ee/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-48127d6e").then(t)}},{path:"/pages/d644ee/index.html",redirect:"/pages/d644ee/"},{path:"/04.前端框架/06.Angular/08.RxJS基础.html",redirect:"/pages/d644ee/"},{name:"v-4d233e08",path:"/pages/370feb/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-4d233e08").then(t)}},{path:"/pages/370feb/index.html",redirect:"/pages/370feb/"},{path:"/04.前端框架/06.Angular/10.NgRx基础.html",redirect:"/pages/370feb/"},{name:"v-1ba04538",path:"/pages/151484/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-1ba04538").then(t)}},{path:"/pages/151484/index.html",redirect:"/pages/151484/"},{path:"/04.前端框架/10.移动端框架.html",redirect:"/pages/151484/"},{name:"v-96ee807e",path:"/pages/5bfd77/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-96ee807e").then(t)}},{path:"/pages/5bfd77/index.html",redirect:"/pages/5bfd77/"},{path:"/04.前端框架/14.Nginx.html",redirect:"/pages/5bfd77/"},{name:"v-7809cc13",path:"/pages/ac114b/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-7809cc13").then(t)}},{path:"/pages/ac114b/index.html",redirect:"/pages/ac114b/"},{path:"/06.Java后端/02.SpringBoot2核心技术/02.Web开发.html",redirect:"/pages/ac114b/"},{name:"v-72c9cbe3",path:"/pages/445c60/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-72c9cbe3").then(t)}},{path:"/pages/445c60/index.html",redirect:"/pages/445c60/"},{path:"/06.Java后端/02.SpringBoot2核心技术/04.数据访问.html",redirect:"/pages/445c60/"},{name:"v-58da78da",path:"/pages/391d50/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-58da78da").then(t)}},{path:"/pages/391d50/index.html",redirect:"/pages/391d50/"},{path:"/06.Java后端/02.SpringBoot2核心技术/08.指标监控.html",redirect:"/pages/391d50/"},{name:"v-339c9639",path:"/pages/ab5029/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-339c9639").then(t)}},{path:"/pages/ab5029/index.html",redirect:"/pages/ab5029/"},{path:"/06.Java后端/02.SpringBoot2核心技术/06.单元测试.html",redirect:"/pages/ab5029/"},{name:"v-13d7552e",path:"/pages/2ced34/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-13d7552e").then(t)}},{path:"/pages/2ced34/index.html",redirect:"/pages/2ced34/"},{path:"/06.Java后端/02.SpringBoot2核心技术/10.原理解析.html",redirect:"/pages/2ced34/"},{name:"v-26553830",path:"/pages/74f9dc/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-26553830").then(t)}},{path:"/pages/74f9dc/index.html",redirect:"/pages/74f9dc/"},{path:"/06.Java后端/04.微服务之谷粒商城/02.微服务简介.html",redirect:"/pages/74f9dc/"},{name:"v-a0918bee",path:"/pages/ef266f/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-a0918bee").then(t)}},{path:"/pages/ef266f/index.html",redirect:"/pages/ef266f/"},{path:"/06.Java后端/04.微服务之谷粒商城/04.服务端环境搭建.html",redirect:"/pages/ef266f/"},{name:"v-6af311b1",path:"/pages/017f58/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-6af311b1").then(t)}},{path:"/pages/017f58/index.html",redirect:"/pages/017f58/"},{path:"/06.Java后端/04.微服务之谷粒商城/06.视频教程目录.html",redirect:"/pages/017f58/"},{name:"v-38855b18",path:"/pages/47e1e1/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-38855b18").then(t)}},{path:"/pages/47e1e1/index.html",redirect:"/pages/47e1e1/"},{path:"/06.Java后端/04.微服务之谷粒商城/08.知识点详解.html",redirect:"/pages/47e1e1/"},{name:"v-3c7a4958",path:"/pages/67419f/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-3c7a4958").then(t)}},{path:"/pages/67419f/index.html",redirect:"/pages/67419f/"},{path:"/08.算法/02.数据结构.html",redirect:"/pages/67419f/"},{name:"v-53bf4cd7",path:"/pages/93a4e4/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-53bf4cd7").then(t)}},{path:"/pages/93a4e4/index.html",redirect:"/pages/93a4e4/"},{path:"/06.Java后端/04.微服务之谷粒商城/10.中间件使用.html",redirect:"/pages/93a4e4/"},{name:"v-252ffd04",path:"/pages/d00a7e/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-252ffd04").then(t)}},{path:"/pages/d00a7e/index.html",redirect:"/pages/d00a7e/"},{path:"/08.算法/04.note.html",redirect:"/pages/d00a7e/"},{name:"v-37a54737",path:"/pages/b9afd2/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-37a54737").then(t)}},{path:"/pages/b9afd2/index.html",redirect:"/pages/b9afd2/"},{path:"/10.设计模式/02.设计原则.html",redirect:"/pages/b9afd2/"},{name:"v-164eb618",path:"/pages/e0e155/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-164eb618").then(t)}},{path:"/pages/e0e155/index.html",redirect:"/pages/e0e155/"},{path:"/20.C++/02.note.html",redirect:"/pages/e0e155/"},{name:"v-675625d0",path:"/pages/65ccfc/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-675625d0").then(t)}},{path:"/pages/65ccfc/index.html",redirect:"/pages/65ccfc/"},{path:"/10.设计模式/04.设计模式.html",redirect:"/pages/65ccfc/"},{name:"v-559637e0",path:"/pages/353244/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-559637e0").then(t)}},{path:"/pages/353244/index.html",redirect:"/pages/353244/"},{path:"/20.C++/04.cmake.html",redirect:"/pages/353244/"},{name:"v-084ae744",path:"/pages/228ce3/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-084ae744").then(t)}},{path:"/pages/228ce3/index.html",redirect:"/pages/228ce3/"},{path:"/20.C++/30.vscode.html",redirect:"/pages/228ce3/"},{name:"v-4bcb0bb2",path:"/pages/263d7a/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-4bcb0bb2").then(t)}},{path:"/pages/263d7a/index.html",redirect:"/pages/263d7a/"},{path:"/22.Common/02.日常可用.html",redirect:"/pages/263d7a/"},{name:"v-a325224c",path:"/pages/101c12/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-a325224c").then(t)}},{path:"/pages/101c12/index.html",redirect:"/pages/101c12/"},{path:"/22.Common/04.命令行.html",redirect:"/pages/101c12/"},{name:"v-4c4a0522",path:"/pages/87173b/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-4c4a0522").then(t)}},{path:"/pages/87173b/index.html",redirect:"/pages/87173b/"},{path:"/22.Common/06.Git.html",redirect:"/pages/87173b/"},{name:"v-6462a9b0",path:"/pages/77064b/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-6462a9b0").then(t)}},{path:"/pages/77064b/index.html",redirect:"/pages/77064b/"},{path:"/22.Common/12.Linux.html",redirect:"/pages/77064b/"},{name:"v-259c3ae0",path:"/pages/d4b4c0/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-259c3ae0").then(t)}},{path:"/pages/d4b4c0/index.html",redirect:"/pages/d4b4c0/"},{path:"/22.Common/60.软件.html",redirect:"/pages/d4b4c0/"},{name:"v-1ffcc279",path:"/pages/3894e9/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-1ffcc279").then(t)}},{path:"/pages/3894e9/index.html",redirect:"/pages/3894e9/"},{path:"/99.收藏/04.博客文章.html",redirect:"/pages/3894e9/"},{name:"v-5c505a1c",path:"/pages/bceabe/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-5c505a1c").then(t)}},{path:"/pages/bceabe/index.html",redirect:"/pages/bceabe/"},{path:"/99.收藏/06.前端相关网站.html",redirect:"/pages/bceabe/"},{name:"v-7b6d445b",path:"/pages/8d591b/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-7b6d445b").then(t)}},{path:"/pages/8d591b/index.html",redirect:"/pages/8d591b/"},{path:"/22.Common/62.书籍.html",redirect:"/pages/8d591b/"},{name:"v-795e2903",path:"/pages/d7139e/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-795e2903").then(t)}},{path:"/pages/d7139e/index.html",redirect:"/pages/d7139e/"},{path:"/99.收藏/08.Java后台相关网站.html",redirect:"/pages/d7139e/"},{name:"v-43bc1f77",path:"/pages/944683/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-43bc1f77").then(t)}},{path:"/pages/944683/index.html",redirect:"/pages/944683/"},{path:"/99.收藏/12.颜色.html",redirect:"/pages/944683/"},{name:"v-2863befc",path:"/",component:Us,beforeEnter:(n,e,t)=>{cs("Layout","v-2863befc").then(t)}},{path:"/index.html",redirect:"/"},{path:"*",component:Us}],Ns={title:"我的博客",description:"",base:"/",headTags:[],pages:[{title:"前端核心",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"02.前端核心",description:"HTML / CSS / JavaScript / TypeScript / Babel / Webpack / 浏览器 / HTTP"}},title:"前端核心",date:"2022-07-27T23:21:23.000Z",permalink:"/nav1/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/01.nav1.html",relativePath:"00.目录页/01.nav1.md",key:"v-4553e29a",path:"/nav1/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"前端框架",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"04.前端框架",description:"NodeJS / Vue / Angular / React / React Native / Ionic / Flutter"}},title:"前端框架",date:"2022-07-27T23:21:23.000Z",permalink:"/nav2/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/02.nav2.html",relativePath:"00.目录页/02.nav2.md",key:"v-3af4ed73",path:"/nav2/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Java后端",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"06.Java后端",description:"Java后端微服务"}},title:"Java后端",date:"2022-07-27T23:21:23.000Z",permalink:"/nav3/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/03.nav3.html",relativePath:"00.目录页/03.nav3.md",key:"v-ced8679a",path:"/nav3/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"算法",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"08.算法",description:"算法和数据结构"}},title:"算法",date:"2022-07-27T23:21:23.000Z",permalink:"/nav4/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/04.nav4.html",relativePath:"00.目录页/04.nav4.md",key:"v-139aaa1a",path:"/nav4/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"练习",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"10.设计模式",description:"设计模式"}},title:"练习",date:"2022-07-27T23:21:23.000Z",permalink:"/nav5/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/05.nav5.html",relativePath:"00.目录页/05.nav5.md",key:"v-53d189b3",path:"/nav5/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"C++",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"20.C++",description:"C++的学习开始啦"}},title:"C++",date:"2022-07-27T23:21:23.000Z",permalink:"/nav6/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/06.nav6.html",relativePath:"00.目录页/06.nav6.md",key:"v-9d1f2f1a",path:"/nav6/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Common",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"22.Common",description:"通用的内容"}},title:"Common",date:"2022-07-27T23:21:23.000Z",permalink:"/nav7/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/07.nav7.html",relativePath:"00.目录页/07.nav7.md",key:"v-0f0f4733",path:"/nav7/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"nav8",frontmatter:{title:"nav8",date:"2022-11-13T14:37:09.000Z",permalink:"/pages/c4fc16/"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/08.nav8.html",relativePath:"00.目录页/08.nav8.md",key:"v-6cae25f3",path:"/pages/c4fc16/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"nav9",frontmatter:{title:"nav9",date:"2022-11-13T14:37:18.000Z",permalink:"/pages/2e8ff4/"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/09.nav9.html",relativePath:"00.目录页/09.nav9.md",key:"v-6b65f69a",path:"/pages/2e8ff4/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"收藏",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"99.收藏",description:null}},title:"收藏",date:"2022-07-27T23:21:23.000Z",permalink:"/nav10/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/10.nav10.html",relativePath:"00.目录页/10.nav10.md",key:"v-29be7ce1",path:"/nav10/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"方向",frontmatter:{title:"方向",date:"2022-11-13T01:26:09.000Z",permalink:"/pages/d657ad/",sidebar:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/20.Direction.html",relativePath:"00.目录页/20.Direction.md",key:"v-4053c8e1",path:"/pages/d657ad/",headers:[{level:3,title:"Web Frontend Basics",slug:"web-frontend-basics",normalizedTitle:"web frontend basics",charIndex:5},{level:3,title:"Web Frontend Framework",slug:"web-frontend-framework",normalizedTitle:"web frontend framework",charIndex:32},{level:3,title:"Java Backend MicroService",slug:"java-backend-microservice",normalizedTitle:"java backend microservice",charIndex:62},{level:3,title:"C++ AI",slug:"c-ai",normalizedTitle:"c++ ai",charIndex:95},{level:3,title:"Algorithm and Structure",slug:"algorithm-and-structure",normalizedTitle:"algorithm and structure",charIndex:109},{level:3,title:"Design Pattern",slug:"design-pattern",normalizedTitle:"design pattern",charIndex:140},{level:3,title:"Common",slug:"common",normalizedTitle:"common",charIndex:162},{level:3,title:"Favorites",slug:"favorites",normalizedTitle:"favorites",charIndex:176}],headersStr:"Web Frontend Basics Web Frontend Framework Java Backend MicroService C++ AI Algorithm and Structure Design Pattern Common Favorites",content:" * # Web Frontend Basics\n\n\n * # Web Frontend Framework\n\n\n * # Java Backend MicroService\n\n\n * # C++ AI\n\n\n * # Algorithm and Structure\n\n\n * # Design Pattern\n\n\n * # Common\n\n\n * # Favorites",normalizedContent:" * # web frontend basics\n\n\n * # web frontend framework\n\n\n * # java backend microservice\n\n\n * # c++ ai\n\n\n * # algorithm and structure\n\n\n * # design pattern\n\n\n * # common\n\n\n * # favorites",charsets:{}},{title:"HTML 基础",frontmatter:{title:"HTML 基础",date:"2022-07-28T00:09:25.000Z",permalink:"/pages/6610c3/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/02.HTML/02.HTML%E5%9F%BA%E7%A1%80.html",relativePath:"02.前端核心/02.HTML/02.HTML基础.md",key:"v-3ca6161a",path:"/pages/6610c3/",headers:[{level:2,title:"元素特性",slug:"元素特性",normalizedTitle:"元素特性",charIndex:2},{level:3,title:"块级元素 display: block;",slug:"块级元素-display-block",normalizedTitle:"块级元素 display: block;",charIndex:28},{level:3,title:"内联元素（行内元素）display: inline;",slug:"内联元素-行内元素-display-inline",normalizedTitle:"内联元素（行内元素）display: inline;",charIndex:122},{level:3,title:"行内块元素 display: inline-block;",slug:"行内块元素-display-inline-block",normalizedTitle:"行内块元素 display: inline-block;",charIndex:270},{level:2,title:"特殊元素",slug:"特殊元素",normalizedTitle:"特殊元素",charIndex:360},{level:3,title:"",slug:"meta",normalizedTitle:"",charIndex:0},{level:3,title:"video",slug:"video",normalizedTitle:"video",charIndex:1124},{level:3,title:"audio",slug:"audio",normalizedTitle:"audio",charIndex:1134},{level:3,title:"svg",slug:"svg",normalizedTitle:"svg",charIndex:1144},{level:3,title:"canvas",slug:"canvas",normalizedTitle:"canvas",charIndex:1152},{level:2,title:"Web Components",slug:"web-components",normalizedTitle:"web components",charIndex:1163},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:1258}],headersStr:"元素特性 块级元素 display: block; 内联元素（行内元素）display: inline; 行内块元素 display: inline-block; 特殊元素  video audio svg canvas Web Components 参考文档",content:'# 元素特性\n\n切记：下列特性与具体标签无关。\n\n\n# 块级元素 display: block;\n\n 1. 独自占据一行，故默认宽度是容器的100%；\n 2. 可以设置宽、高、行高、内外边距；\n 3. 可以容纳行内元素和其他块级元素；\n\n\n# 内联元素（行内元素）display: inline;\n\n 1. 会和相邻的行内元素排成一行；\n 2. 设置宽、高无效，默认宽高是其自身内容的宽高；\n 3. 只能设置水平方向的内外边距；（PS：垂直方向的内外边距有视觉上的效果，但不具有实质上的作用）\n 4. 只能容纳其他行内元素和文本；\n\n\n# 行内块元素 display: inline-block;\n\n 1. 和相邻行内块元素在同一行；\n 2. 默认宽高为其内容的宽高；\n 3. 可以设置宽、高、行高和内外边距；\n\n\n# 特殊元素\n\n\n#\n\n 1. 实例1 - 定义文档关键词，用于搜索引擎\n\n<meta name="keywords" content="HTML, CSS, XML, XHTML, JavaScript"/>\n\n\n1\n\n 2. 实例2 - 定义 web 页面描述\n\n<meta name="description" content="Free Web tutorials on HTML and CSS"/>\n\n\n1\n\n 3. 实例3 - 定义页面作者\n\n<meta name="author" content="huan" />\n\n\n1\n\n 4. 实例4 - 每 30 秒刷新页面\n\n<meta http-equiv="refresh" content="30" />\n\n\n1\n\n 5. 实例5 - 定义页面字符编码\n\n<meta charset="utf-8" />\n\n\n1\n\n 6. 利用 meta 对 viewport 进行控制\n\n<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">\n\n\n1\n\n\n// 语法\n<script src="" defer async><\/script>\n\n\n1\n2\n\n\ndefer 和 async 的区别是：前者要等到整个页面正常渲染结束，才会执行；\n\n后者一旦下载完，渲染引擎就会立即中断渲染，执行这个脚本以后，在继续渲染。\n\n一句话，defer 是“渲染完再执行”，async 是“下载完就立即执行”。另外，如果有多个 defer 脚本， 会按照它们在页面出现的顺序加载，而多个 async 脚本是不能保证加载顺序的。\n\n\n# video\n\n\n# audio\n\n\n# svg\n\n\n# canvas\n\n\n# Web Components\n\n * Custom elements （自定义元素）\n * Shadow DOM （影子DOM）\n * HTML templates（HTML模板）\n\n\n# 参考文档\n\n 1. 移动前端开发之viewport的深入理解',normalizedContent:'# 元素特性\n\n切记：下列特性与具体标签无关。\n\n\n# 块级元素 display: block;\n\n 1. 独自占据一行，故默认宽度是容器的100%；\n 2. 可以设置宽、高、行高、内外边距；\n 3. 可以容纳行内元素和其他块级元素；\n\n\n# 内联元素（行内元素）display: inline;\n\n 1. 会和相邻的行内元素排成一行；\n 2. 设置宽、高无效，默认宽高是其自身内容的宽高；\n 3. 只能设置水平方向的内外边距；（ps：垂直方向的内外边距有视觉上的效果，但不具有实质上的作用）\n 4. 只能容纳其他行内元素和文本；\n\n\n# 行内块元素 display: inline-block;\n\n 1. 和相邻行内块元素在同一行；\n 2. 默认宽高为其内容的宽高；\n 3. 可以设置宽、高、行高和内外边距；\n\n\n# 特殊元素\n\n\n#\n\n 1. 实例1 - 定义文档关键词，用于搜索引擎\n\n<meta name="keywords" content="html, css, xml, xhtml, javascript"/>\n\n\n1\n\n 2. 实例2 - 定义 web 页面描述\n\n<meta name="description" content="free web tutorials on html and css"/>\n\n\n1\n\n 3. 实例3 - 定义页面作者\n\n<meta name="author" content="huan" />\n\n\n1\n\n 4. 实例4 - 每 30 秒刷新页面\n\n<meta http-equiv="refresh" content="30" />\n\n\n1\n\n 5. 实例5 - 定义页面字符编码\n\n<meta charset="utf-8" />\n\n\n1\n\n 6. 利用 meta 对 viewport 进行控制\n\n<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">\n\n\n1\n\n\n// 语法\n<script src="" defer async><\/script>\n\n\n1\n2\n\n\ndefer 和 async 的区别是：前者要等到整个页面正常渲染结束，才会执行；\n\n后者一旦下载完，渲染引擎就会立即中断渲染，执行这个脚本以后，在继续渲染。\n\n一句话，defer 是“渲染完再执行”，async 是“下载完就立即执行”。另外，如果有多个 defer 脚本， 会按照它们在页面出现的顺序加载，而多个 async 脚本是不能保证加载顺序的。\n\n\n# video\n\n\n# audio\n\n\n# svg\n\n\n# canvas\n\n\n# web components\n\n * custom elements （自定义元素）\n * shadow dom （影子dom）\n * html templates（html模板）\n\n\n# 参考文档\n\n 1. 移动前端开发之viewport的深入理解',charsets:{cjk:!0}},{title:"SVG",frontmatter:{title:"SVG",date:"2022-07-28T00:09:38.000Z",permalink:"/pages/8d8cc5/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/02.HTML/04.SVG.html",relativePath:"02.前端核心/02.HTML/04.SVG.md",key:"v-7a3b0982",path:"/pages/8d8cc5/",headers:[{level:2,title:"SVG 基础图形",slug:"svg-基础图形",normalizedTitle:"svg 基础图形",charIndex:2},{level:2,title:"绘制路径的命令",slug:"绘制路径的命令",normalizedTitle:"绘制路径的命令",charIndex:55}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"SVG 基础图形 绘制路径的命令",content:"# SVG 基础图形\n\n矩形 圆形 椭圆 直线 多边形 折线 路径 文本\n\n这里着重讲解路径Path\n\n\n# 绘制路径的命令\n\n * M = moveto\n * L = lineto\n * H = horizontal lineto\n * V = curveto\n * S = smooth curveto\n * Q = quadratic Belzier curve\n * T = smooth quadratic Belzier curveto\n * A = elliptical Arc\n * Z = closepath\n\n注意： 以上所有命令均允许小写字母。大写表示绝对定位，小写表示相对定位。\n\n说明： A / a - 绘制当前点到（x,y）的圆弧\n\nrx ry (半径) x-axis-rotation large-arc-flag sweep-flag x y (终点)\n\nx-axis-rotation (x的旋转角度) large-arc-flag (若需要圆弧角度小于180度，则为0；否则为1) sweep-flag (需要圆弧以负角度绘制则为0；以正角度绘制则为1) Q / q\n\nx1 y1 x y\n\n绘制一条从当前点到（x,y），控制点为（x1,y1）的二次贝塞尔曲线\n\nT / t\n\nx y\n\n绘制一条从当前点到（x,y）的二次贝塞尔曲线，控制点是前一个Q命令控制点的中心对称点。如果没有前一条曲线，当前点会被用作控制点。绘制出来的曲线更流畅\n\nC / c\n\nx1 y1 x2 y2 x y\n\n绘制一条从当前点到（x,y）的三次贝塞尔曲线，（x1,y1）为曲线的开始控制点，（x2,y2）为曲线的终点控制点\n\nS / s\n\nx2 y2 x y\n\n绘制一条从当前点到（x,y）的三次贝塞尔曲线，（x2,y2）为新端点的控制点。第一个控制点是前一个C命令控制点的中心对称点。如果没有前一条曲线，当前点会被用作控制点。绘制出来的曲线更流畅",normalizedContent:"# svg 基础图形\n\n矩形 圆形 椭圆 直线 多边形 折线 路径 文本\n\n这里着重讲解路径path\n\n\n# 绘制路径的命令\n\n * m = moveto\n * l = lineto\n * h = horizontal lineto\n * v = curveto\n * s = smooth curveto\n * q = quadratic belzier curve\n * t = smooth quadratic belzier curveto\n * a = elliptical arc\n * z = closepath\n\n注意： 以上所有命令均允许小写字母。大写表示绝对定位，小写表示相对定位。\n\n说明： a / a - 绘制当前点到（x,y）的圆弧\n\nrx ry (半径) x-axis-rotation large-arc-flag sweep-flag x y (终点)\n\nx-axis-rotation (x的旋转角度) large-arc-flag (若需要圆弧角度小于180度，则为0；否则为1) sweep-flag (需要圆弧以负角度绘制则为0；以正角度绘制则为1) q / q\n\nx1 y1 x y\n\n绘制一条从当前点到（x,y），控制点为（x1,y1）的二次贝塞尔曲线\n\nt / t\n\nx y\n\n绘制一条从当前点到（x,y）的二次贝塞尔曲线，控制点是前一个q命令控制点的中心对称点。如果没有前一条曲线，当前点会被用作控制点。绘制出来的曲线更流畅\n\nc / c\n\nx1 y1 x2 y2 x y\n\n绘制一条从当前点到（x,y）的三次贝塞尔曲线，（x1,y1）为曲线的开始控制点，（x2,y2）为曲线的终点控制点\n\ns / s\n\nx2 y2 x y\n\n绘制一条从当前点到（x,y）的三次贝塞尔曲线，（x2,y2）为新端点的控制点。第一个控制点是前一个c命令控制点的中心对称点。如果没有前一条曲线，当前点会被用作控制点。绘制出来的曲线更流畅",charsets:{cjk:!0}},{title:"Canvas",frontmatter:{title:"Canvas",date:"2022-07-28T00:09:50.000Z",permalink:"/pages/ff116a/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/02.HTML/06.Canvas.html",relativePath:"02.前端核心/02.HTML/06.Canvas.md",key:"v-92f36068",path:"/pages/ff116a/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"Fabric.js中文文档\n\nWebGL入门教程一：基本概念和使用说明",normalizedContent:"fabric.js中文文档\n\nwebgl入门教程一：基本概念和使用说明",charsets:{cjk:!0}},{title:"布局",frontmatter:{title:"布局",date:"2022-07-28T00:10:19.000Z",permalink:"/pages/de9f63/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/04.CSS/04.%E5%B8%83%E5%B1%80.html",relativePath:"02.前端核心/04.CSS/04.布局.md",key:"v-117b3c17",path:"/pages/de9f63/",headers:[{level:2,title:"布局方式",slug:"布局方式",normalizedTitle:"布局方式",charIndex:20}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"布局方式",content:"这是非常重要的一节，后续详叙。\n\n\n# 布局方式\n\nMDN CSS Layout\n\n 1. 静态布局\n 2. 流式布局（百分比布局）\n 3. 响应式布局（rem/em布局）\n 4. Flex Layout\n 5. Grid Layout\n\n说明\n\n * 元素的外部显示类型将决定该元素在流式布局中的表现，块级或内联元素。\n * 元素的内部显示类型可以控制其子元素的布局，流式布局、grid 布局或 flex 布局。",normalizedContent:"这是非常重要的一节，后续详叙。\n\n\n# 布局方式\n\nmdn css layout\n\n 1. 静态布局\n 2. 流式布局（百分比布局）\n 3. 响应式布局（rem/em布局）\n 4. flex layout\n 5. grid layout\n\n说明\n\n * 元素的外部显示类型将决定该元素在流式布局中的表现，块级或内联元素。\n * 元素的内部显示类型可以控制其子元素的布局，流式布局、grid 布局或 flex 布局。",charsets:{cjk:!0}},{title:"CSS 基础",frontmatter:{title:"CSS 基础",date:"2022-07-28T00:10:09.000Z",permalink:"/pages/ebc097/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/04.CSS/02.CSS%E5%9F%BA%E7%A1%80.html",relativePath:"02.前端核心/04.CSS/02.CSS基础.md",key:"v-c45cbe58",path:"/pages/ebc097/",headers:[{level:2,title:"Selectors",slug:"selectors",normalizedTitle:"selectors",charIndex:2},{level:3,title:"1.基础选择器",slug:"_1-基础选择器",normalizedTitle:"1.基础选择器",charIndex:16},{level:3,title:"2.属性选择器",slug:"_2-属性选择器",normalizedTitle:"2.属性选择器",charIndex:183},{level:3,title:"3.选择器权重",slug:"_3-选择器权重",normalizedTitle:"3.选择器权重",charIndex:564},{level:2,title:"三大特性",slug:"三大特性",normalizedTitle:"三大特性",charIndex:793},{level:3,title:"优先级",slug:"优先级",normalizedTitle:"优先级",charIndex:804},{level:3,title:"继承性",slug:"继承性",normalizedTitle:"继承性",charIndex:808},{level:3,title:"层叠性",slug:"层叠性",normalizedTitle:"层叠性",charIndex:812},{level:2,title:"Pseudo-classes",slug:"pseudo-classes",normalizedTitle:"pseudo-classes",charIndex:1335},{level:2,title:"Pseudo-elements",slug:"pseudo-elements",normalizedTitle:"pseudo-elements",charIndex:1356},{level:2,title:"@-rules",slug:"rules",normalizedTitle:"@-rules",charIndex:1378},{level:2,title:"Types",slug:"types",normalizedTitle:"types",charIndex:1452},{level:2,title:"元素显隐控制",slug:"元素显隐控制",normalizedTitle:"元素显隐控制",charIndex:1648},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:1888}],headersStr:"Selectors 1.基础选择器 2.属性选择器 3.选择器权重 三大特性 优先级 继承性 层叠性 Pseudo-classes Pseudo-elements @-rules Types 元素显隐控制 参考文档",content:"# Selectors\n\n\n# 1.基础选择器\n\n* {}\nid {}\n.class {}\ntag {}\n[attr] {}\ndiv, p {}\ndiv p {}\n#选取所有父级是div的p元素（能用尽量使用这个）\ndiv > p {}\n#选取div后面的第一个p元素（同级元素）\ndiv + p {}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 2.属性选择器\n\n#选择attr属性值为value的元素\n[attr = value] {}\n\n#选择attr属性值包含单词value的元素\n[attr ~= value] {}\n\n#选择attr属性值是以value开头的元素\n[attr |= value] {}\n\n#选择attr属性值是以value开头的元素\n[attr ^= value] {}\n\n#选择attr属性值是以value结尾的元素\n[attr $= value] {}\n\n#选择attr属性值包含字符串value的元素\n[attr *= value] {}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n区分：2、3要求 value 值是一个连着的字符串；后三个 value 是一个长字符串的字符串即可。所以后三个的匹配范围比2、3更广。\n\n\n# 3.选择器权重\n\n选择器类型                      权重\n* 通配符                      0000\nelement 元素选择器、伪元素          0001\nclass attr 类选择器、属性选择器、伪类   0010\nid 选择器                     0100\n内联样式                       1000\n\n权重相加规则： 对位相加不进位，左高右低永不变。\n\n\n# 三大特性\n\n三大特性：优先级、继承性和层叠性。好好体会其在实际应用的好处。\n\n\n# 优先级\n\n优先级就是分配给指定的 CSS 声明的一个权重，它由匹配的选择器中的每一种类型选择器类型的数值决定。\n\n而当优先级与多个 CSS 声明中任意一个声明的优先级相等的时候，CSS 中最后的那个声明将会被应用到元素上。\n\n当同一个元素有多个声明的时候，优先级才会有意义。因为每一个直接作用于元素的 CSS 规则总是会接管/覆盖该元素从祖先元素继承而来的规则。\n\n\n# 继承性\n\n当元素的一个继承属性 inherited property 没有指定值时，则取父元素的同属性的计算值。\n\n只有文档根元素取该属性的概述中给定的初始值（这里的意思应该是：在该属性本身的定义中的默认值）。\n\n当元素的一个非继承属性 reset property 没有指定值时，则取属性的初始值（该值在该属性的概述里被指定）。\n\n\n# 层叠性\n\n层叠是 CSS 的一个基本特征，它是一个定义了如何合并来自多个源的属性值的算法。 它在 CSS 处于核心地位，CSS 的全称 ”层叠样式表“ 正是强调了这一点。\n\n此外，某些 CSS 属性有使用元素种类的限制。比如，有些属性只能作用于 block container。\n\n\n# Pseudo-classes\n\n\n\n\n# Pseudo-elements\n\n\n\n\n# @-rules\n\n * @charset\n * @font-face\n * @import\n * @keyframes\n * @media\n\n\n# Types\n\n 1. <length>\n    1. 绝对单位：px、in、cm、mm\n    2. 相对单位：em、rem、ch、ex、fr\n    3. vw、vh、vmax、vmin\n 2. <angle>\n    1. deg：360deg = 360o\n    2. turn：1turn = 360o\n    3. grad：2grad = 2Π\n 3. <color>\n\n\n# 元素显隐控制\n\n* {\n   opacity: 0;\n   visibility: hidden;\n   display: none;\n}\n\n\n1\n2\n3\n4\n5\n\n 1. display: none：不占控件，不能点击。（场景：显示出原来这里不存在的结构）\n 2. visibility: hidden：占据控件，不能点击。（场景：显示不会导致页面结构发生变动，不会撑开）\n 3. opacity: 0：占据空间。可以点击。（场景：可以跟 transition 搭配）\n\n\n# 参考文档\n\n 1. 静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别\n 2. vertical-align\n 3. conic-gradient圆锥渐变\n 4. css inspiration\n 5. CSS Grid 网格布局教程\n 6. css scrollbar样式设置\n 7. CSS对象模型CSSOM是什么？",normalizedContent:"# selectors\n\n\n# 1.基础选择器\n\n* {}\nid {}\n.class {}\ntag {}\n[attr] {}\ndiv, p {}\ndiv p {}\n#选取所有父级是div的p元素（能用尽量使用这个）\ndiv > p {}\n#选取div后面的第一个p元素（同级元素）\ndiv + p {}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 2.属性选择器\n\n#选择attr属性值为value的元素\n[attr = value] {}\n\n#选择attr属性值包含单词value的元素\n[attr ~= value] {}\n\n#选择attr属性值是以value开头的元素\n[attr |= value] {}\n\n#选择attr属性值是以value开头的元素\n[attr ^= value] {}\n\n#选择attr属性值是以value结尾的元素\n[attr $= value] {}\n\n#选择attr属性值包含字符串value的元素\n[attr *= value] {}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n区分：2、3要求 value 值是一个连着的字符串；后三个 value 是一个长字符串的字符串即可。所以后三个的匹配范围比2、3更广。\n\n\n# 3.选择器权重\n\n选择器类型                      权重\n* 通配符                      0000\nelement 元素选择器、伪元素          0001\nclass attr 类选择器、属性选择器、伪类   0010\nid 选择器                     0100\n内联样式                       1000\n\n权重相加规则： 对位相加不进位，左高右低永不变。\n\n\n# 三大特性\n\n三大特性：优先级、继承性和层叠性。好好体会其在实际应用的好处。\n\n\n# 优先级\n\n优先级就是分配给指定的 css 声明的一个权重，它由匹配的选择器中的每一种类型选择器类型的数值决定。\n\n而当优先级与多个 css 声明中任意一个声明的优先级相等的时候，css 中最后的那个声明将会被应用到元素上。\n\n当同一个元素有多个声明的时候，优先级才会有意义。因为每一个直接作用于元素的 css 规则总是会接管/覆盖该元素从祖先元素继承而来的规则。\n\n\n# 继承性\n\n当元素的一个继承属性 inherited property 没有指定值时，则取父元素的同属性的计算值。\n\n只有文档根元素取该属性的概述中给定的初始值（这里的意思应该是：在该属性本身的定义中的默认值）。\n\n当元素的一个非继承属性 reset property 没有指定值时，则取属性的初始值（该值在该属性的概述里被指定）。\n\n\n# 层叠性\n\n层叠是 css 的一个基本特征，它是一个定义了如何合并来自多个源的属性值的算法。 它在 css 处于核心地位，css 的全称 ”层叠样式表“ 正是强调了这一点。\n\n此外，某些 css 属性有使用元素种类的限制。比如，有些属性只能作用于 block container。\n\n\n# pseudo-classes\n\n\n\n\n# pseudo-elements\n\n\n\n\n# @-rules\n\n * @charset\n * @font-face\n * @import\n * @keyframes\n * @media\n\n\n# types\n\n 1. <length>\n    1. 绝对单位：px、in、cm、mm\n    2. 相对单位：em、rem、ch、ex、fr\n    3. vw、vh、vmax、vmin\n 2. <angle>\n    1. deg：360deg = 360o\n    2. turn：1turn = 360o\n    3. grad：2grad = 2π\n 3. <color>\n\n\n# 元素显隐控制\n\n* {\n   opacity: 0;\n   visibility: hidden;\n   display: none;\n}\n\n\n1\n2\n3\n4\n5\n\n 1. display: none：不占控件，不能点击。（场景：显示出原来这里不存在的结构）\n 2. visibility: hidden：占据控件，不能点击。（场景：显示不会导致页面结构发生变动，不会撑开）\n 3. opacity: 0：占据空间。可以点击。（场景：可以跟 transition 搭配）\n\n\n# 参考文档\n\n 1. 静态布局、自适应布局、流式布局、响应式布局、弹性布局等的概念和区别\n 2. vertical-align\n 3. conic-gradient圆锥渐变\n 4. css inspiration\n 5. css grid 网格布局教程\n 6. css scrollbar样式设置\n 7. css对象模型cssom是什么？",charsets:{cjk:!0}},{title:"预处理语言",frontmatter:{title:"预处理语言",date:"2022-08-23T23:11:57.000Z",permalink:"/pages/291205/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/04.CSS/06.%E9%A2%84%E5%A4%84%E7%90%86%E8%AF%AD%E8%A8%80.html",relativePath:"02.前端核心/04.CSS/06.预处理语言.md",key:"v-7b3c9250",path:"/pages/291205/",headers:[{level:2,title:"Sass / Scss",slug:"sass-scss",normalizedTitle:"sass / scss",charIndex:24},{level:2,title:"Less",slug:"less",normalizedTitle:"less",charIndex:40},{level:2,title:"Stylus",slug:"stylus",normalizedTitle:"stylus",charIndex:49}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"Sass / Scss Less Stylus",content:"主要记录一下它们的范式和使用习惯即可。\n\n\n# Sass / Scss\n\n\n# Less\n\n\n# Stylus",normalizedContent:"主要记录一下它们的范式和使用习惯即可。\n\n\n# sass / scss\n\n\n# less\n\n\n# stylus",charsets:{cjk:!0}},{title:"CSS 进阶",frontmatter:{title:"CSS 进阶",date:"2022-09-15T20:15:28.000Z",permalink:"/pages/5f4f4a/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/04.CSS/08.CSS%E8%BF%9B%E9%98%B6.html",relativePath:"02.前端核心/04.CSS/08.CSS进阶.md",key:"v-50adfce0",path:"/pages/5f4f4a/",headersStr:null,content:"https://www.cnblogs.com/lvmylife/p/5484844.html\n\nDefensive CSS",normalizedContent:"https://www.cnblogs.com/lvmylife/p/5484844.html\n\ndefensive css",charsets:{}},{title:"JS相关",frontmatter:{title:"JS相关",date:"2022-07-28T00:11:27.000Z",permalink:"/pages/023981/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/06.JAVASCRIPT/02.JS%E7%9B%B8%E5%85%B3.html",relativePath:"02.前端核心/06.JAVASCRIPT/02.JS相关.md",key:"v-5de1ace2",path:"/pages/023981/",headers:[{level:2,title:"ES版本说明",slug:"es版本说明",normalizedTitle:"es版本说明",charIndex:27},{level:2,title:"V8引擎的原理",slug:"v8引擎的原理",normalizedTitle:"v8引擎的原理",charIndex:312}],headersStr:"ES版本说明 V8引擎的原理",content:" * ecma官网\n * es5.1 汉化版\n\n\n# ES版本说明\n\n和 ECMAScript 有关的标准有 ECMA262，ECMA290，ECMA327，ECMA357，ECMA402，ECMA404，ECMA414 等等。\n\n其中：\n\n * 290，327，357 等等没有推广开来，被废弃。\n * ECMA 262 是语言规范本身。\n * ECMA 402 则是制定一些基于 ECMAScript5 或者之后版本的一些国际化 API 标准。\n * ECMA 404 是JSON规范。\n * ECMA 414 则规定了哪些规范是和 ECMAScript 有关的。目前内部就包含了 262，402 和 404.\n\n\n# V8引擎的原理\n\n\n\nv8",normalizedContent:" * ecma官网\n * es5.1 汉化版\n\n\n# es版本说明\n\n和 ecmascript 有关的标准有 ecma262，ecma290，ecma327，ecma357，ecma402，ecma404，ecma414 等等。\n\n其中：\n\n * 290，327，357 等等没有推广开来，被废弃。\n * ecma 262 是语言规范本身。\n * ecma 402 则是制定一些基于 ecmascript5 或者之后版本的一些国际化 api 标准。\n * ecma 404 是json规范。\n * ecma 414 则规定了哪些规范是和 ecmascript 有关的。目前内部就包含了 262，402 和 404.\n\n\n# v8引擎的原理\n\n\n\nv8",charsets:{cjk:!0}},{title:"DOM",frontmatter:{title:"DOM",date:"2022-07-28T00:11:39.000Z",permalink:"/pages/2f5334/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/06.JAVASCRIPT/04.DOM.html",relativePath:"02.前端核心/06.JAVASCRIPT/04.DOM.md",key:"v-9c62bc7c",path:"/pages/2f5334/",headers:[{level:2,title:"e.target 和 e.currentTarget 之间的区别",slug:"e-target-和-e-currenttarget-之间的区别",normalizedTitle:"e.target 和 e.currenttarget 之间的区别",charIndex:309},{level:2,title:"addEventListener 的第三个参数capture、once、passive",slug:"addeventlistener-的第三个参数capture、once、passive",normalizedTitle:"addeventlistener 的第三个参数capture、once、passive",charIndex:829}],headersStr:"e.target 和 e.currentTarget 之间的区别 addEventListener 的第三个参数capture、once、passive",content:"事件传播的三个阶段\n\n 1. 事件捕获阶段\n 2. 目标阶段\n 3. 事件冒泡阶段\n\n\n\n 1. mouseover和mouseout成对，mouseenter和mouseleave成对。\n 2. mouseover触发优先级高于mouseenter，mouseout触发优先级高于mouseleave。\n 3. 在父元素上绑定mouseover和mouseout事件，子元素同样会触发，即子元素mouseover和mouseout事件会冒泡至父元素；而父元素绑定mouseenter和mouseleave事件只对父元素有效，子元素不会触发，即mouseenter和mouseleave事件不会冒泡至父元素。\n\n\n# e.target 和 e.currentTarget 之间的区别\n\n总结：\n\n * currentTarget始终是监听事件者\n * target是事件的真正发出者\n\n// Element Attr\nelement.scrollTop\nelement.scrollLeft\n\n// 获取滚动容器的宽高\nelement.scrollHeight \nelement.scrollWidth[readonly]\n    \n// 返回自己距offsetParent元素的距离\nelement.offsetTop \nelement.offsetLeft\n\n// 判断滚动是否触底\nelement.scrollHeight = element.scrollTop + element.clientLeft;\n\n// Event - 获取当前鼠标的坐标\nwindow.clientX\nwindow.clientY\nwindow.scrollX\nwindow.scrollX\nwindow.pageX\nwindow.pageY\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# addEventListener 的第三个参数capture、once、passive\n\nelement.addEventListener(eventName, listener, {\n    // 如果是true，表示listener会在该类型的事件捕获阶段传播该EventTarget时触发\n    capture: true,\n    // 如果是true，表示listener在添加之后最多只调用一次，listener会在其被调用之后自动移除\n    once: false,\n    // 默认为true。如果为true，表示listener永远不会调用preventDefault()。\n    // 如果listener仍然调用了这个函数，客户端将会忽略它并抛出一个控制台警告\n    passive: true,\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n",normalizedContent:"事件传播的三个阶段\n\n 1. 事件捕获阶段\n 2. 目标阶段\n 3. 事件冒泡阶段\n\n\n\n 1. mouseover和mouseout成对，mouseenter和mouseleave成对。\n 2. mouseover触发优先级高于mouseenter，mouseout触发优先级高于mouseleave。\n 3. 在父元素上绑定mouseover和mouseout事件，子元素同样会触发，即子元素mouseover和mouseout事件会冒泡至父元素；而父元素绑定mouseenter和mouseleave事件只对父元素有效，子元素不会触发，即mouseenter和mouseleave事件不会冒泡至父元素。\n\n\n# e.target 和 e.currenttarget 之间的区别\n\n总结：\n\n * currenttarget始终是监听事件者\n * target是事件的真正发出者\n\n// element attr\nelement.scrolltop\nelement.scrollleft\n\n// 获取滚动容器的宽高\nelement.scrollheight \nelement.scrollwidth[readonly]\n    \n// 返回自己距offsetparent元素的距离\nelement.offsettop \nelement.offsetleft\n\n// 判断滚动是否触底\nelement.scrollheight = element.scrolltop + element.clientleft;\n\n// event - 获取当前鼠标的坐标\nwindow.clientx\nwindow.clienty\nwindow.scrollx\nwindow.scrollx\nwindow.pagex\nwindow.pagey\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# addeventlistener 的第三个参数capture、once、passive\n\nelement.addeventlistener(eventname, listener, {\n    // 如果是true，表示listener会在该类型的事件捕获阶段传播该eventtarget时触发\n    capture: true,\n    // 如果是true，表示listener在添加之后最多只调用一次，listener会在其被调用之后自动移除\n    once: false,\n    // 默认为true。如果为true，表示listener永远不会调用preventdefault()。\n    // 如果listener仍然调用了这个函数，客户端将会忽略它并抛出一个控制台警告\n    passive: true,\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n",charsets:{cjk:!0}},{title:"【重点】JS执行上下文",frontmatter:{title:"【重点】JS执行上下文",date:"2022-07-28T00:12:14.000Z",permalink:"/pages/a65e15/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/06.JAVASCRIPT/08.JS%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87.html",relativePath:"02.前端核心/06.JAVASCRIPT/08.JS执行上下文.md",key:"v-25624120",path:"/pages/a65e15/",headers:[{level:2,title:"作用域（Scope）和上下文（Context）",slug:"作用域-scope-和上下文-context",normalizedTitle:"作用域（scope）和上下文（context）",charIndex:58},{level:2,title:"执行栈(Execution Stack)",slug:"执行栈-execution-stack",normalizedTitle:"执行栈(execution stack)",charIndex:454},{level:2,title:"执行上下文(执行环境)",slug:"执行上下文-执行环境",normalizedTitle:"执行上下文(执行环境)",charIndex:694},{level:3,title:"变量对象(Variable Object)",slug:"变量对象-variable-object",normalizedTitle:"变量对象(variable object)",charIndex:1026},{level:3,title:"作用域链(Scope Chain)",slug:"作用域链-scope-chain",normalizedTitle:"作用域链(scope chain)",charIndex:1340},{level:3,title:"thisArg",slug:"thisarg",normalizedTitle:"thisarg",charIndex:1523},{level:2,title:"闭包",slug:"闭包",normalizedTitle:"闭包",charIndex:285}],headersStr:"作用域（Scope）和上下文（Context） 执行栈(Execution Stack) 执行上下文(执行环境) 变量对象(Variable Object) 作用域链(Scope Chain) thisArg 闭包",content:"https://www.cnblogs.com/dreamingbaobei/p/9815962.html\n\n\n# 作用域（Scope）和上下文（Context）\n\n函数的每次调用都有与之紧密相关的作用域和上下文。从根本上来说，作用域是基于函数的，而上下文是基于对象的。\n\n换句话说，作用域涉及到所被调用函数中的变量访问，并且不同的调用场景是不一样的。\n\n上下文始终是 this 关键字的值，它是拥有（控制）当前所执行代码的对象的引用。\n\n作用域和上下文异同\n\n * 创建时间不同：全局作用域之外，每个函数都会创建自己的作用域，作用域在函数定义的时候就已经确定了(这也是闭包的原理)，而不是在函数调用时。\n   * 全局执行上下文环境是在全局作用域确定之后，JS代码马上执行之前创建。\n   * 函数执行上下文时在函数调用时，函数体代码执行之前创建。\n * 状态不同： 作用域是静态的，只要函数定义好了就一直存在，不会再变。上下文环境是动态的，调用函数的时候创建，函数执行完毕上下文环境就会被释放。\n\n\n# 执行栈(Execution Stack)\n\n执行栈，也叫调用栈，具有 LIFO（后进先出）结构，用于存储在代码执行期间创建的所有执行上下文。\n\n首次运行JS代码时，会创建一个全局执行上下文并 Push 到当前的执行栈中。 每当发生函数调用，引擎都会为该函数创建一个新的函数执行上下文并 Push 到当前执行栈的栈顶。\n\n根据执行栈 LIFO 规则，当栈顶函数运行完成后，其对应的函数执行上下文将会从执行栈中 Pop 出， 上下文控制权将移到当前执行栈的下一个执行上下文。\n\n\n# 执行上下文(执行环境)\n\n执行环境可以分为两个阶段：\n\n * 创建阶段(创建与初始化阶段)：解析器首先会创建一个VO，它由定义在EC中的变量、 函数声明和参数组成。在这个阶段，作用域链会被初始化，this的值也会被最终确定。\n * 执行阶段：代码被解释执行。 每个执行环境都有一个与之关联的VO，环境中定义的所有变量和函数都保存在这个对象中。 需要知道，我们无法手动访问这个对象，只有解析器才能访问它。\n\n执行上下文的类型\n\n * 全局执行上下文：只有一个，浏览器中全局对象就是window对象，this指向这个全局对象。\n * 函数执行上下文：存在无数个，只有在函数被调用的时候才会被创建，每次调用函数都会创建一个新的执行上下文。\n\nEC的结构图：\n\n\n\n\n# 变量对象(Variable Object)\n\n变量对象的创建，依次经历了以下几个过程：\n\n 1. 建立arguments对象。检查当前上下文中的参数，建立该对象下的属性与属性值。\n 2. 检查当前上下文的函数声明，也就是使用 function 关键字声明的函数。在变量对象中以函数名建立一个属性，属性值为指向该函数所在内存地址的引用。如果函数名的属性已经存在，那么该属性将会被新的引用所覆盖。\n 3. 检查当前上下文中的变量声明，每找到一个变量声明，就在变量对象中建立一个属性，属性值为 undefined。如果该变量名的属性已经存在，为了防止同名的函数被修改为 undefined，则会直接跳过，原属性值不会被修改。\n\n\n# 作用域链(Scope Chain)\n\n当代码在一个环境中执行时，会创建变量对象的一个作用域链（scope chain）。 作用域链的用途是保证对执行环境有权访问的所有变量和函数的有序访问。 作用域链包含了在环境栈中的每个执行环境对应的变量对象。通过作用域链，可以决定变量的访问和标识符的解析。\n\n注意：全局执行环境的变量对象始终都是作用域链的最后一个对象。\n\n\n# thisArg\n\n在一个函数执行上下文中，this由调用者提供，由调用函数的方式来决定。如果调用者函数被某一个对象所拥有，那么该函数在调用时，内部的 this 指向该对象。 如果函数独立调用，那么该函数内部的 this，则指向 undefined。但是在非严格模式下，当 this 指向 undefined 时，它会自动指向全局对象。\n\n拓展\n\n箭头函数中 this 指向当前函数所在所在作用域内的 this，若箭头函数外没有函数包裹，则this指向最外层对象window。\n\n\n# 闭包\n\n闭包是指有权访问另一个函数作用域中的变量的函数。代入ES中就是，上层的EC通过作用域链可以访问下层EC中VO。",normalizedContent:"https://www.cnblogs.com/dreamingbaobei/p/9815962.html\n\n\n# 作用域（scope）和上下文（context）\n\n函数的每次调用都有与之紧密相关的作用域和上下文。从根本上来说，作用域是基于函数的，而上下文是基于对象的。\n\n换句话说，作用域涉及到所被调用函数中的变量访问，并且不同的调用场景是不一样的。\n\n上下文始终是 this 关键字的值，它是拥有（控制）当前所执行代码的对象的引用。\n\n作用域和上下文异同\n\n * 创建时间不同：全局作用域之外，每个函数都会创建自己的作用域，作用域在函数定义的时候就已经确定了(这也是闭包的原理)，而不是在函数调用时。\n   * 全局执行上下文环境是在全局作用域确定之后，js代码马上执行之前创建。\n   * 函数执行上下文时在函数调用时，函数体代码执行之前创建。\n * 状态不同： 作用域是静态的，只要函数定义好了就一直存在，不会再变。上下文环境是动态的，调用函数的时候创建，函数执行完毕上下文环境就会被释放。\n\n\n# 执行栈(execution stack)\n\n执行栈，也叫调用栈，具有 lifo（后进先出）结构，用于存储在代码执行期间创建的所有执行上下文。\n\n首次运行js代码时，会创建一个全局执行上下文并 push 到当前的执行栈中。 每当发生函数调用，引擎都会为该函数创建一个新的函数执行上下文并 push 到当前执行栈的栈顶。\n\n根据执行栈 lifo 规则，当栈顶函数运行完成后，其对应的函数执行上下文将会从执行栈中 pop 出， 上下文控制权将移到当前执行栈的下一个执行上下文。\n\n\n# 执行上下文(执行环境)\n\n执行环境可以分为两个阶段：\n\n * 创建阶段(创建与初始化阶段)：解析器首先会创建一个vo，它由定义在ec中的变量、 函数声明和参数组成。在这个阶段，作用域链会被初始化，this的值也会被最终确定。\n * 执行阶段：代码被解释执行。 每个执行环境都有一个与之关联的vo，环境中定义的所有变量和函数都保存在这个对象中。 需要知道，我们无法手动访问这个对象，只有解析器才能访问它。\n\n执行上下文的类型\n\n * 全局执行上下文：只有一个，浏览器中全局对象就是window对象，this指向这个全局对象。\n * 函数执行上下文：存在无数个，只有在函数被调用的时候才会被创建，每次调用函数都会创建一个新的执行上下文。\n\nec的结构图：\n\n\n\n\n# 变量对象(variable object)\n\n变量对象的创建，依次经历了以下几个过程：\n\n 1. 建立arguments对象。检查当前上下文中的参数，建立该对象下的属性与属性值。\n 2. 检查当前上下文的函数声明，也就是使用 function 关键字声明的函数。在变量对象中以函数名建立一个属性，属性值为指向该函数所在内存地址的引用。如果函数名的属性已经存在，那么该属性将会被新的引用所覆盖。\n 3. 检查当前上下文中的变量声明，每找到一个变量声明，就在变量对象中建立一个属性，属性值为 undefined。如果该变量名的属性已经存在，为了防止同名的函数被修改为 undefined，则会直接跳过，原属性值不会被修改。\n\n\n# 作用域链(scope chain)\n\n当代码在一个环境中执行时，会创建变量对象的一个作用域链（scope chain）。 作用域链的用途是保证对执行环境有权访问的所有变量和函数的有序访问。 作用域链包含了在环境栈中的每个执行环境对应的变量对象。通过作用域链，可以决定变量的访问和标识符的解析。\n\n注意：全局执行环境的变量对象始终都是作用域链的最后一个对象。\n\n\n# thisarg\n\n在一个函数执行上下文中，this由调用者提供，由调用函数的方式来决定。如果调用者函数被某一个对象所拥有，那么该函数在调用时，内部的 this 指向该对象。 如果函数独立调用，那么该函数内部的 this，则指向 undefined。但是在非严格模式下，当 this 指向 undefined 时，它会自动指向全局对象。\n\n拓展\n\n箭头函数中 this 指向当前函数所在所在作用域内的 this，若箭头函数外没有函数包裹，则this指向最外层对象window。\n\n\n# 闭包\n\n闭包是指有权访问另一个函数作用域中的变量的函数。代入es中就是，上层的ec通过作用域链可以访问下层ec中vo。",charsets:{cjk:!0}},{title:"JS正则表达式",frontmatter:{title:"JS正则表达式",date:"2022-07-28T00:11:58.000Z",permalink:"/pages/fdd069/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/06.JAVASCRIPT/06.JS%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",relativePath:"02.前端核心/06.JAVASCRIPT/06.JS正则表达式.md",key:"v-424d1a10",path:"/pages/fdd069/",headers:[{level:2,title:"语法",slug:"语法",normalizedTitle:"语法",charIndex:70},{level:2,title:"RegExp实例属性和方法",slug:"regexp实例属性和方法",normalizedTitle:"regexp实例属性和方法",charIndex:170},{level:2,title:"正则表达式进阶",slug:"正则表达式进阶",normalizedTitle:"正则表达式进阶",charIndex:819},{level:3,title:"转义字符",slug:"转义字符",normalizedTitle:"转义字符",charIndex:831},{level:3,title:"修饰符",slug:"修饰符",normalizedTitle:"修饰符",charIndex:375},{level:3,title:"方括号",slug:"方括号",normalizedTitle:"方括号",charIndex:985},{level:3,title:"元字符",slug:"元字符",normalizedTitle:"元字符",charIndex:1227},{level:3,title:"量词",slug:"量词",normalizedTitle:"量词",charIndex:1892},{level:3,title:"分组",slug:"分组",normalizedTitle:"分组",charIndex:2399},{level:3,title:"反向引用",slug:"反向引用",normalizedTitle:"反向引用",charIndex:2461},{level:2,title:"捕获",slug:"捕获",normalizedTitle:"捕获",charIndex:2453},{level:3,title:"捕获的引用",slug:"捕获的引用",normalizedTitle:"捕获的引用",charIndex:2552},{level:3,title:"没有捕获的分组",slug:"没有捕获的分组",normalizedTitle:"没有捕获的分组",charIndex:2786},{level:2,title:"利用函数进行替换",slug:"利用函数进行替换",normalizedTitle:"利用函数进行替换",charIndex:3140},{level:3,title:"replace声明",slug:"replace声明",normalizedTitle:"replace声明",charIndex:3153},{level:3,title:"引用分组匹配",slug:"引用分组匹配",normalizedTitle:"引用分组匹配",charIndex:3381},{level:3,title:"第二个参数是函数【重点】",slug:"第二个参数是函数【重点】",normalizedTitle:"第二个参数是函数【重点】",charIndex:3457}],headersStr:"语法 RegExp实例属性和方法 正则表达式进阶 转义字符 修饰符 方括号 元字符 量词 分组 反向引用 捕获 捕获的引用 没有捕获的分组 利用函数进行替换 replace声明 引用分组匹配 第二个参数是函数【重点】",content:"JavaScript正则表达式\n\nRunoob JS RegExp\n\n正则可视化工具：https://jex.im/regulex\n\n\n# 语法\n\nlet patt = new RegExp(pattern,modifiers);\n// 或者更简单的方式\nlet patt=/pattern/modifiers;\n\n\n1\n2\n3\n\n\n\n# RegExp实例属性和方法\n\ninterface RegExp {\n    exec(string: string): RegExpExecArray | null;\n    test(string: string): boolean;\n    // 正则表达式的字符串表示，按照字面量形式而非传入构造函数中的字符串模式返回\n    readonly source: string;\n    // 是否设置了g修饰符\n    readonly global: boolean;\n    // 是否设置了i修饰符\n    readonly ignoreCase: boolean;\n    // 是否设置了m修饰符\n    readonly multiline: boolean;\n    // 整数,表示开始搜索下一个匹配项的字符位置，从0算起\n    lastIndex: number;\n    // Non-standard extensions\n    compile(): this;\n}\n\ninterface RegExpExecArray extends Array<string> {\n    // 表示匹配项在字符串的位置\n    index: number;\n    // 表示应用正则表达式的字符串\n    input: string;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 正则表达式进阶\n\n\n# 转义字符\n\n如果我们需要匹配[、$、^、]等特殊字符，在正则中，使用反斜杠可以对任意字符进行转义，让被转义的字符作为本身进行匹配。\n\n\n# 修饰符\n\n修饰符   描述\ni     执行对大小写不敏感的匹配\ng     执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）\nm     执行多行匹配\n\n\n# 方括号\n\n方括号用于查找某个范围内的字符：\n\n表达式       描述\n[abc]     查找方括号之间的任何字符。\n[^abc]    查找任何不在方括号之间的字符。\n[0-9]     查找任何从 0 至 9 的数字。\n[a-z]     查找任何从小写 a 到小写 z 的字符。\n[A-Z]     查找任何从大写 A 到大写 Z 的字符。\n[adgk]    查找给定集合内的任何字符。\n[^adgk]   查找给定集合外的任何字符。\n(red      blue\n\n\n# 元字符\n\n元字符（Metacharacter）是拥有特殊含义的字符：\n\n元字符                   描述\n. 查找单个字符，除了换行和行结束符。   \n\\w                    查找数字、字母及下划线。\n\\W                    查找非单词字符。\n\\d                    查找数字。【注意与/[0-9]/的区别】\n\\D                    查找非数字字符。\n\\s                    查找空白字符。\n\\S                    查找非空白字符。\n\\b                    匹配单词边界。\n\\B                    匹配非单词边界。\n\\0                    查找 NULL 字符。\n\\n                    查找换行符。\n\\f                    查找换页符。\n\\r                    查找回车符。\n\\t                    查找制表符。\n\\v                    查找垂直制表符。\n\\xxx                  查找以八进制数 xxx 规定的字符。\n\\xdd                  查找以十六进制数 dd 规定的字符。\n\\uxxxx                查找以十六进制数 xxxx 规定的 Unicode 字符。\n\n\n# 量词\n\n量词        描述\nn+        匹配任何包含至少一个 n 的字符串。\nn*        匹配任何包含零个或多个 n 的字符串。\nn?        匹配任何包含零个或一个 n 的字符串。\nn{X}      匹配包含 X 个 n 的序列的字符串。\nn{X,}     X 是一个正整数。前面的模式 n 连续出现至少 X 次时匹配。\nn{X, Y}   X 和 Y 为正整数。前面的模式 n 连续出现至少 X 次，至多 Y 次时匹配。\nn$        匹配任何结尾为 n 的字符串。\n^n        匹配任何开头为 n 的字符串。\n?=n       匹配任何其后紧接指定字符串 n 的字符串。\n?!n       匹配任何其后没有紧接指定字符串 n 的字符串。\n\n拓展\n\n/a?/    // 零次或一次\n/a+/    // 一次或多次\n/a*/    // 零次或多次\n/a{m, n}/ // m次到n次\n\n\n1\n2\n3\n4\n\n\n这些操作符可分为贪婪的和非贪婪的，默认情况下是贪婪的。\n\n要转为非贪婪的话，我们只需在操作符后面加一个（?），此时将进行最小限度的匹配。\n\n\n# 分组\n\n使用 '()' 可以进行分组，当正则表达式有一部分用括号进行分组时，它具有双重责任，同时也创建所谓的捕获。\n\n\n# 反向引用\n\n在反斜杠后面加一个要引用的捕获数量，该数字从1开始。\n\n/<(\\w+)>(.+)<\\/\\1>/;  // <a>click me</a>\n\n\n1\n\n\n\n# 捕获\n\n\n# 捕获的引用\n\n可以引用捕获到的匹配结果的两种方式：一是自身匹配；二是替换字符串。\n\n * 方式一：上述“反向引用”已提及；/<(\\w+)>(.+)</\\1>/; // click me\n * 方式二：将驼峰变量变为用中划线替换，这在AngularJS等框架中太常见。\n\n// ngClick -> ng-click\n'ngClick'.replace(/([A-Z]])/g, '-$1').toLowerCase(); // ng-click\n\n\n1\n2\n\n\n\n# 没有捕获的分组\n\n小括号有双重责任：不仅要进行分组操作，还可以指定捕获。\n\n如果正则表达式中存在大量的分组，就会引起很多不必要的捕获。\n\n在开始括号后面加一个 ?: 可以让其不进行捕获。\n\nlet str = 'java-java-script';\n// ['java-java-script', 'java-java-', 'java-']\nstr.match(/((java-)+)script/);\n// ['java-java-script', 'java-java-']\nstr.match(/((?:java-)+)script/);\n// ['java-java-script']\nstr.match(/(?:(?:java-)+)script/);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 利用函数进行替换\n\n\n# replace声明\n\ninterface String {\n    replace(searchValue: string | RegExp, replaceValue: string): string;\n    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;\n}\n\n\n1\n2\n3\n4\n\n\n\n# 引用分组匹配\n\n'abcdefg'.replace(/(d)/g, '-$1-'); // abc-d-efg\n\n\n1\n\n\n参考上述提及的分组\n\n\n# 第二个参数是函数【重点】\n\n主要说一下第二个参数是函数的情况下，它的参数有哪些？\n\n// 格式\n'abcabcabca'.replace(/(abc)/g, (args) => {});\n\n\n1\n2\n\n\n这里我们将参数args分为四部分：\n\n 1. 匹配的值（每次一个）\n 2. 分组匹配的值（个数与分组的个数相等）\n 3. 匹配的字符串首字符索引值（每次一个）\n 4. 整个字符串（就是我们操纵的字符串）",normalizedContent:"javascript正则表达式\n\nrunoob js regexp\n\n正则可视化工具：https://jex.im/regulex\n\n\n# 语法\n\nlet patt = new regexp(pattern,modifiers);\n// 或者更简单的方式\nlet patt=/pattern/modifiers;\n\n\n1\n2\n3\n\n\n\n# regexp实例属性和方法\n\ninterface regexp {\n    exec(string: string): regexpexecarray | null;\n    test(string: string): boolean;\n    // 正则表达式的字符串表示，按照字面量形式而非传入构造函数中的字符串模式返回\n    readonly source: string;\n    // 是否设置了g修饰符\n    readonly global: boolean;\n    // 是否设置了i修饰符\n    readonly ignorecase: boolean;\n    // 是否设置了m修饰符\n    readonly multiline: boolean;\n    // 整数,表示开始搜索下一个匹配项的字符位置，从0算起\n    lastindex: number;\n    // non-standard extensions\n    compile(): this;\n}\n\ninterface regexpexecarray extends array<string> {\n    // 表示匹配项在字符串的位置\n    index: number;\n    // 表示应用正则表达式的字符串\n    input: string;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 正则表达式进阶\n\n\n# 转义字符\n\n如果我们需要匹配[、$、^、]等特殊字符，在正则中，使用反斜杠可以对任意字符进行转义，让被转义的字符作为本身进行匹配。\n\n\n# 修饰符\n\n修饰符   描述\ni     执行对大小写不敏感的匹配\ng     执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）\nm     执行多行匹配\n\n\n# 方括号\n\n方括号用于查找某个范围内的字符：\n\n表达式       描述\n[abc]     查找方括号之间的任何字符。\n[^abc]    查找任何不在方括号之间的字符。\n[0-9]     查找任何从 0 至 9 的数字。\n[a-z]     查找任何从小写 a 到小写 z 的字符。\n[a-z]     查找任何从大写 a 到大写 z 的字符。\n[adgk]    查找给定集合内的任何字符。\n[^adgk]   查找给定集合外的任何字符。\n(red      blue\n\n\n# 元字符\n\n元字符（metacharacter）是拥有特殊含义的字符：\n\n元字符                   描述\n. 查找单个字符，除了换行和行结束符。   \n\\w                    查找数字、字母及下划线。\n\\w                    查找非单词字符。\n\\d                    查找数字。【注意与/[0-9]/的区别】\n\\d                    查找非数字字符。\n\\s                    查找空白字符。\n\\s                    查找非空白字符。\n\\b                    匹配单词边界。\n\\b                    匹配非单词边界。\n\\0                    查找 null 字符。\n\\n                    查找换行符。\n\\f                    查找换页符。\n\\r                    查找回车符。\n\\t                    查找制表符。\n\\v                    查找垂直制表符。\n\\xxx                  查找以八进制数 xxx 规定的字符。\n\\xdd                  查找以十六进制数 dd 规定的字符。\n\\uxxxx                查找以十六进制数 xxxx 规定的 unicode 字符。\n\n\n# 量词\n\n量词        描述\nn+        匹配任何包含至少一个 n 的字符串。\nn*        匹配任何包含零个或多个 n 的字符串。\nn?        匹配任何包含零个或一个 n 的字符串。\nn{x}      匹配包含 x 个 n 的序列的字符串。\nn{x,}     x 是一个正整数。前面的模式 n 连续出现至少 x 次时匹配。\nn{x, y}   x 和 y 为正整数。前面的模式 n 连续出现至少 x 次，至多 y 次时匹配。\nn$        匹配任何结尾为 n 的字符串。\n^n        匹配任何开头为 n 的字符串。\n?=n       匹配任何其后紧接指定字符串 n 的字符串。\n?!n       匹配任何其后没有紧接指定字符串 n 的字符串。\n\n拓展\n\n/a?/    // 零次或一次\n/a+/    // 一次或多次\n/a*/    // 零次或多次\n/a{m, n}/ // m次到n次\n\n\n1\n2\n3\n4\n\n\n这些操作符可分为贪婪的和非贪婪的，默认情况下是贪婪的。\n\n要转为非贪婪的话，我们只需在操作符后面加一个（?），此时将进行最小限度的匹配。\n\n\n# 分组\n\n使用 '()' 可以进行分组，当正则表达式有一部分用括号进行分组时，它具有双重责任，同时也创建所谓的捕获。\n\n\n# 反向引用\n\n在反斜杠后面加一个要引用的捕获数量，该数字从1开始。\n\n/<(\\w+)>(.+)<\\/\\1>/;  // <a>click me</a>\n\n\n1\n\n\n\n# 捕获\n\n\n# 捕获的引用\n\n可以引用捕获到的匹配结果的两种方式：一是自身匹配；二是替换字符串。\n\n * 方式一：上述“反向引用”已提及；/<(\\w+)>(.+)</\\1>/; // click me\n * 方式二：将驼峰变量变为用中划线替换，这在angularjs等框架中太常见。\n\n// ngclick -> ng-click\n'ngclick'.replace(/([a-z]])/g, '-$1').tolowercase(); // ng-click\n\n\n1\n2\n\n\n\n# 没有捕获的分组\n\n小括号有双重责任：不仅要进行分组操作，还可以指定捕获。\n\n如果正则表达式中存在大量的分组，就会引起很多不必要的捕获。\n\n在开始括号后面加一个 ?: 可以让其不进行捕获。\n\nlet str = 'java-java-script';\n// ['java-java-script', 'java-java-', 'java-']\nstr.match(/((java-)+)script/);\n// ['java-java-script', 'java-java-']\nstr.match(/((?:java-)+)script/);\n// ['java-java-script']\nstr.match(/(?:(?:java-)+)script/);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 利用函数进行替换\n\n\n# replace声明\n\ninterface string {\n    replace(searchvalue: string | regexp, replacevalue: string): string;\n    replace(searchvalue: string | regexp, replacer: (substring: string, ...args: any[]) => string): string;\n}\n\n\n1\n2\n3\n4\n\n\n\n# 引用分组匹配\n\n'abcdefg'.replace(/(d)/g, '-$1-'); // abc-d-efg\n\n\n1\n\n\n参考上述提及的分组\n\n\n# 第二个参数是函数【重点】\n\n主要说一下第二个参数是函数的情况下，它的参数有哪些？\n\n// 格式\n'abcabcabca'.replace(/(abc)/g, (args) => {});\n\n\n1\n2\n\n\n这里我们将参数args分为四部分：\n\n 1. 匹配的值（每次一个）\n 2. 分组匹配的值（个数与分组的个数相等）\n 3. 匹配的字符串首字符索引值（每次一个）\n 4. 整个字符串（就是我们操纵的字符串）",charsets:{cjk:!0}},{title:"【重点】JS执行机制",frontmatter:{title:"【重点】JS执行机制",date:"2022-07-28T00:12:27.000Z",permalink:"/pages/0f41a0/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/06.JAVASCRIPT/10.JS%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6.html",relativePath:"02.前端核心/06.JAVASCRIPT/10.JS执行机制.md",key:"v-458cae27",path:"/pages/0f41a0/",headers:[{level:2,title:"Event Loop",slug:"event-loop",normalizedTitle:"event loop",charIndex:2},{level:2,title:"宏任务和微任务",slug:"宏任务和微任务",normalizedTitle:"宏任务和微任务",charIndex:19}],headersStr:"Event Loop 宏任务和微任务",content:"# Event Loop\n\n\n\n\n# 宏任务和微任务\n\n涉及关键词：Task Queue、Event Loop、Macro Task、Micro Task。\n\n 1. 宏任务\n    1. setTimeout、setinterval、setImmediate\n    2. I / O\n    3. UI Rendering 等\n 2. 微任务\n    1. process.nextTick\n    2. Promise\n    3. Object.observer （已废弃）\n    4. MutationObserver （webAPIs）等",normalizedContent:"# event loop\n\n\n\n\n# 宏任务和微任务\n\n涉及关键词：task queue、event loop、macro task、micro task。\n\n 1. 宏任务\n    1. settimeout、setinterval、setimmediate\n    2. i / o\n    3. ui rendering 等\n 2. 微任务\n    1. process.nexttick\n    2. promise\n    3. object.observer （已废弃）\n    4. mutationobserver （webapis）等",charsets:{cjk:!0}},{title:"【重点】原型链和Prototype",frontmatter:{title:"【重点】原型链和Prototype",date:"2022-07-28T00:12:57.000Z",permalink:"/pages/49be71/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/06.JAVASCRIPT/12.%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%92%8CPrototype.html",relativePath:"02.前端核心/06.JAVASCRIPT/12.原型链和Prototype.md",key:"v-498423f6",path:"/pages/49be71/",headers:[{level:2,title:"认识对象",slug:"认识对象",normalizedTitle:"认识对象",charIndex:2},{level:3,title:"属性描述符",slug:"属性描述符",normalizedTitle:"属性描述符",charIndex:11},{level:3,title:"frozen、sealed、extensible",slug:"frozen、sealed、extensible",normalizedTitle:"frozen、sealed、extensible",charIndex:487},{level:2,title:"JS原型链",slug:"js原型链",normalizedTitle:"js原型链",charIndex:999}],headersStr:"认识对象 属性描述符 frozen、sealed、extensible JS原型链",content:"# 认识对象\n\n\n# 属性描述符\n\ninterface PropertyDescriptor {\n// 决定该属性能否被删除，以及除 value 和 writable 外的其它特性是否可以被修改（若修改则报错）\nconfigurable?: boolean;\n// 决定 forin 或 Object.keys 能否枚举该属性\nenumerable?: boolean;\n\n    // 数据描述符\n    value?: any;\n    writable?: boolean;\n    \n    // 存取描述符\n    get?(): any;\n    set?(v: any): void;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n注意\n\n数据描述符和存取描述符不可同时出现，否则会报错。 即意味着 set/get 是不能够和 value/writable 一起用的，因为当是存取器属性的时候， 当设置了 set 标志着可写，设置了get 就标志着可读，而 value 也是通过 get 函数返回的，所以不能同时使用。\n\n\n# frozen、sealed、extensible\n\n1、extensible\n\n默认所有都西昂都是可拓展的，可以添加属性和方法。通过Object.preventExtensions()来禁止拓展。\n\n对于原本就存在的属性是不受影响的，可以修改删除，可以通过Object.isExtensible()来判断。\n\nlet persons = { name: 'a' }\nObject.preventExtensions(persons)\npersons.age = 18\nconsole.log(persons.age) // undefined\n\n\n1\n2\n3\n4\n\n\n2、sealed\n\n对象无法拓展的同时，原有的属性无法删除，可以修改。因为它们的 configurable 被设为 false 了， 无法把数据属性改为存取器属性，无法使用Object.defineProperty()。\n\n可以使用Object.isSealed来检测是否密封了。\n\n3、frozen\n\n这个比以上两种更加严格，原本存在的属性都不能修改，writable 被设为 false。\n\n存取器属性只有 set 函数定义了的情况下才能改。\n\n\n# JS原型链\n\n本文主要理解JS中的prototype、proto和constructor属性。",normalizedContent:"# 认识对象\n\n\n# 属性描述符\n\ninterface propertydescriptor {\n// 决定该属性能否被删除，以及除 value 和 writable 外的其它特性是否可以被修改（若修改则报错）\nconfigurable?: boolean;\n// 决定 forin 或 object.keys 能否枚举该属性\nenumerable?: boolean;\n\n    // 数据描述符\n    value?: any;\n    writable?: boolean;\n    \n    // 存取描述符\n    get?(): any;\n    set?(v: any): void;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n注意\n\n数据描述符和存取描述符不可同时出现，否则会报错。 即意味着 set/get 是不能够和 value/writable 一起用的，因为当是存取器属性的时候， 当设置了 set 标志着可写，设置了get 就标志着可读，而 value 也是通过 get 函数返回的，所以不能同时使用。\n\n\n# frozen、sealed、extensible\n\n1、extensible\n\n默认所有都西昂都是可拓展的，可以添加属性和方法。通过object.preventextensions()来禁止拓展。\n\n对于原本就存在的属性是不受影响的，可以修改删除，可以通过object.isextensible()来判断。\n\nlet persons = { name: 'a' }\nobject.preventextensions(persons)\npersons.age = 18\nconsole.log(persons.age) // undefined\n\n\n1\n2\n3\n4\n\n\n2、sealed\n\n对象无法拓展的同时，原有的属性无法删除，可以修改。因为它们的 configurable 被设为 false 了， 无法把数据属性改为存取器属性，无法使用object.defineproperty()。\n\n可以使用object.issealed来检测是否密封了。\n\n3、frozen\n\n这个比以上两种更加严格，原本存在的属性都不能修改，writable 被设为 false。\n\n存取器属性只有 set 函数定义了的情况下才能改。\n\n\n# js原型链\n\n本文主要理解js中的prototype、proto和constructor属性。",charsets:{cjk:!0}},{title:"JS类型判断",frontmatter:{title:"JS类型判断",date:"2022-07-28T00:13:12.000Z",permalink:"/pages/19b349/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/06.JAVASCRIPT/14.JS%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD.html",relativePath:"02.前端核心/06.JAVASCRIPT/14.JS类型判断.md",key:"v-4f6bc734",path:"/pages/19b349/",headers:[{level:2,title:"Map / Set",slug:"map-set",normalizedTitle:"map / set",charIndex:2},{level:3,title:"Map",slug:"map",normalizedTitle:"map",charIndex:2},{level:3,title:"Set",slug:"set",normalizedTitle:"set",charIndex:8},{level:2,title:"类型转换",slug:"类型转换",normalizedTitle:"类型转换",charIndex:1063},{level:3,title:"'=='涉及的类型转换规则",slug:"涉及的类型转换规则",normalizedTitle:"'=='涉及的类型转换规则",charIndex:2656},{level:3,title:"对象转原始类型是根据什么流程运行的？",slug:"对象转原始类型是根据什么流程运行的",normalizedTitle:"对象转原始类型是根据什么流程运行的？",charIndex:2939},{level:2,title:"undefined 和 void 0",slug:"undefined-和-void-0",normalizedTitle:"undefined 和 void 0",charIndex:3143},{level:2,title:"JS Operators",slug:"js-operators",normalizedTitle:"js operators",charIndex:3558}],headersStr:"Map / Set Map Set 类型转换 '=='涉及的类型转换规则 对象转原始类型是根据什么流程运行的？ undefined 和 void 0 JS Operators",content:"# Map / Set\n\n菜鸟教程 - ES6 Map 与 Set\n\n\n# Map\n\nMaps 和 Objects 的区别\n\n * 一个 Object 的键只能是字符串或者 Symbols，但一个 Map 的键可以是任意值。\n * Map 中的键值是有序的（FIFO 原则），而添加到对象中的键则不是。\n * Map 的键值对个数可以从 size 属性获取，而 Object 的键值对个数只能手动计算。\n * Object 都有自己的原型，原型链上的键名有可能和你自己在对象上的设置的键名产生冲突。\n\nMap 与 Array的转换\n\nlet arr = [[\"key1\", \"value1\"], [\"key2\", \"value2\"]];\n// Map 构造函数可以将一个 二维 键值对数组转换成一个 Map 对象\nlet map = new Map(arr);\n// 使用 Array.from 函数可以将一个 Map 对象转换成一个二维键值对数组\nlet arry2 = Array.from(map);\n\n\n1\n2\n3\n4\n5\n\n\nMap 的克隆\n\nlet myMap1 = new Map([[\"key1\", \"value1\"], [\"key2\", \"value2\"]]);\nlet myMap2 = new Map(myMap1);\n\nconsole.log(original === clone);\n// 打印 false。 Map 对象构造函数生成实例，迭代出新的对象。\n\n\n1\n2\n3\n4\n5\n\n\nMap 的合并\n\nlet first = new Map([[1, 'one'], [2, 'two'], [3, 'three'],]);\nlet second = new Map([[1, 'uno'], [2, 'dos']]);\n// 合并两个 Map 对象时，如果有重复的键值，则后面的会覆盖前面的，对应值即 uno，dos， three\nlet merged = new Map([...first, ...second]);\n\n\n1\n2\n3\n4\n\n\n\n# Set\n\nSet 中的特殊值\n\nSet 对象存储的值总是唯一的，所以需要判断两个值是否恒等。有几个特殊值需要特殊对待：\n\n * +0 与 -0 在存储判断唯一性的时候是恒等的，所以不重复；\n * undefined 与 undefined 是恒等的，所以不重复；\n * NaN 与 NaN 是不恒等的，但是在 Set 中只能存一个，不重复。\n\n类型转换\n\n// Array 转 Set\nlet mySet = new Set([\"value1\", \"value2\", \"value3\"]);\n// 用...操作符，将 Set 转 Array\nlet myArray = [...mySet];\n\n// String 转 Set\nvar mySet = new Set('hello');  // Set(4) {\"h\", \"e\", \"l\", \"o\"}\n// 注：Set 中 toString 方法是不能将 Set 转换成 String\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nSet对象作用\n\n// 数组去重\nvar mySet = new Set([1, 2, 3, 4, 4]);\n[...mySet]; // [1, 2, 3, 4]\n\n// 并集\nvar mySet = new Set([1, 2, 3, 4, 4]);\n[...mySet]; // [1, 2, 3, 4]\n\n// 交集\nvar a = new Set([1, 2, 3]);\nvar b = new Set([4, 3, 2]);\nvar intersect = new Set([...a].filter(x => b.has(x))); // {2, 3}\n\n// 差集\nvar a = new Set([1, 2, 3]);\nvar b = new Set([4, 3, 2]);\nvar difference = new Set([...a].filter(x => !b.has(x))); // {1}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 类型转换\n\nnull、undefined\n\nBoolean(null);      // false\nBoolean(undefined); // false\n\nNumber(null);       // 0\nNumber(undefined);  // NaN\n\nString(null);       // null\nString(undefined);  // undefined\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nString\n\nNumber('');         // 0\n/^(-|\\+)?[0-9]+(\\.[0-9]+)?$/.test(str);\n// 当字符串str满足上述正则时，Number(str)可转为正常数字，否则转为NaN。\n\n\n1\n2\n3\n\n\nArray\n\nBoolean([1]);       // true\nString([1]); // 等价于Array.prototype.toString()\nNumber([1]); // Array->String->Number\n\n\n1\n2\n3\n\n\nObject\n\nBoolean({id: 1});   // true\nString({id: 1});    // '[object Object]'\n// 等价于：Object.prototype.toString()\nNumber({id: 1});    // NaN\n\n\n1\n2\n3\n4\n\n\nMap\n\nBoolean(new Map());     // true\nString(new Map());      // '[object Map]'\nNumber(new Map());      // NaN\n\n\n1\n2\n3\n\n\nSet\n\nBoolean(new Set());     // true\nString(new Set());      // '[object Set]'\nNumber(new Set());      // NaN\n\n\n1\n2\n3\n\n\n\n# '=='涉及的类型转换规则\n\n * 两边的类型是否相同，相同的话就比较值的大小，例如：1==2，返回 false\n * 判断的是否是 null 和 undefined，是的话就返回 true\n * 判断的类型是否是 String 和 Number，是的话，把 String 类型转换成 Number，在进行比较\n * 判断其中一方是否是 Boolean，是的话就把 Boolean 转换成 Number，在进行比较\n * 如果其中一方为 Object，且另一方为 String、Number 或者 Symbol，会将 Object 转换成字符串，在进行比较\n\n\n# 对象转原始类型是根据什么流程运行的？\n\n对象转原始类型，会调用内置的ToPrimitive 函数，对于该函数而言，其逻辑如下：\n\n 1. 如果Symbol.toPrimitive()方法，优先调用在返回（该方法由用户自己定义）；\n 2. 调用valueOf()，如果转换为原始类型，则返回；\n 3. 调用toString()，如果转换为原始类型，则返回；\n 4. 如果都没有，返回原始类型，会报错；\n\n\n# undefined 和 void 0\n\n列举几点区别：\n\n 1. undefined 是可变的；在全局环境中，undefined是只读的。而在局部作用域中，undefined是可变的。\n 2. 什么是void；void是一元运算符，出现在操作数的左边，操作数可以是任何类型的值，void右边的表达式可以是带括号形式（例如：void(0)），也可以是不带括号的形式（例如：void 0）。\n 3. 使用 void 0 代替 undefined 的原因是；\n    1. 使用void 0比使用undefined能够减少3个字节；\n    2. undefined并不是js中的保留字，我们可以使用undefined作为变量名，然后给它赋值。void 0输出唯一的结果undefined，保证了不变性。\n 4. undefined与null的区别；null代表空值，代表“定义了但是为空”。而undefined的代表未定义。\n\n\n# JS Operators\n\n1、instanceof\n\ninstanceof运算符用于检测构造函数的prototype属性是否出现在某个实例对象的原型链上。\n\n手动实现一下instanceof的功能：\n\nfunction myInstanceof (left, right) {\n   // 基本数据类型直接返回false\n   if (typeof left !== 'object' || left === null) return false\n   // getProtypeOf是Object对象自带的一个方法，能够拿到参数的原型对象\n   let proto = Object.getPrototypeOf(left)\n   while (true) {\n      // 查找到尽头，还没找到\n      if (proto == null) return false\n      // 找到相同的原型对象\n      if (proto == right.prototype) return true\n      proto = Object.getPrototypeOf(proto)\n   }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n2、typeof （后续给出判定数据类型的所有方法）\n\ntypeof 1  // number\ntypeof 'string'  // string\ntypeof false  // boolean\ntypeof null  // object\ntypeof undefined  // undefined\ntypeof [1, 2, 3]  // object\ntypeof { name: 'js' }  // object\ntypeof function () {}  // function\ntypeof Symbol('key')  // symbol\ntypeof new Map()  // object\ntypeof new Set()  // object\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n下面给出一种可以精确区分数据类型的方法：\n\nconst isType = (target: any): string => Object.prototype.toString.call(target);\n\n\n1\n\n\n// 输出结果\n'[object Number]'\n'[object String]'\n'[object Boolean]'\n'[object Null]'\n'[object Undefined]'\n'[object Symbol]'\n'[object Object]'\n'[object Array]'\n'[object Map]'\n'[object Set]'\n'[object BigInt]'\n'[object Date]'\n'[object Function]'\n\n'[object Arguments]'\n'[object AsyncFunction]'\n'[object DOMException]'\n'[object Error]'\n'[object GeneratorFunction]'\n'[object Promise]'\n'[object Proxy]' // 这个比较特殊\n'[object RegExp]'\n'[object WeakMap]'\n'[object WeakSet]'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n3、in in操作检查对象中是否有名为property的属性。也可以检查对象的原型，以便知道该属性是否为原型链的一部分。\n\n提示\n\nin操作符会检查原型上的属性； 当我们想要判断该属性是否是该对象的自身属性时：Object.prototype.hasOwnProperty.call()；\n\n4、new\n\n该操作符后续再细说。\n\nfunction Person(name: string) {\n    this.name = name;\n}\n\n\n1\n2\n3\n\n\n提示\n\n对于不加new来执行构造函数来说，返回值就是构造函数的执行结果； 对于加new来执行构造函数而言，如果 return 的是基本数据类型，那么忽视掉该 return 值；如果返回的是一个引用类型，那么返回该引用类型； Object(value)，当以该形式而不是构造函数形式调用 Object 时，会执行类型转换；",normalizedContent:"# map / set\n\n菜鸟教程 - es6 map 与 set\n\n\n# map\n\nmaps 和 objects 的区别\n\n * 一个 object 的键只能是字符串或者 symbols，但一个 map 的键可以是任意值。\n * map 中的键值是有序的（fifo 原则），而添加到对象中的键则不是。\n * map 的键值对个数可以从 size 属性获取，而 object 的键值对个数只能手动计算。\n * object 都有自己的原型，原型链上的键名有可能和你自己在对象上的设置的键名产生冲突。\n\nmap 与 array的转换\n\nlet arr = [[\"key1\", \"value1\"], [\"key2\", \"value2\"]];\n// map 构造函数可以将一个 二维 键值对数组转换成一个 map 对象\nlet map = new map(arr);\n// 使用 array.from 函数可以将一个 map 对象转换成一个二维键值对数组\nlet arry2 = array.from(map);\n\n\n1\n2\n3\n4\n5\n\n\nmap 的克隆\n\nlet mymap1 = new map([[\"key1\", \"value1\"], [\"key2\", \"value2\"]]);\nlet mymap2 = new map(mymap1);\n\nconsole.log(original === clone);\n// 打印 false。 map 对象构造函数生成实例，迭代出新的对象。\n\n\n1\n2\n3\n4\n5\n\n\nmap 的合并\n\nlet first = new map([[1, 'one'], [2, 'two'], [3, 'three'],]);\nlet second = new map([[1, 'uno'], [2, 'dos']]);\n// 合并两个 map 对象时，如果有重复的键值，则后面的会覆盖前面的，对应值即 uno，dos， three\nlet merged = new map([...first, ...second]);\n\n\n1\n2\n3\n4\n\n\n\n# set\n\nset 中的特殊值\n\nset 对象存储的值总是唯一的，所以需要判断两个值是否恒等。有几个特殊值需要特殊对待：\n\n * +0 与 -0 在存储判断唯一性的时候是恒等的，所以不重复；\n * undefined 与 undefined 是恒等的，所以不重复；\n * nan 与 nan 是不恒等的，但是在 set 中只能存一个，不重复。\n\n类型转换\n\n// array 转 set\nlet myset = new set([\"value1\", \"value2\", \"value3\"]);\n// 用...操作符，将 set 转 array\nlet myarray = [...myset];\n\n// string 转 set\nvar myset = new set('hello');  // set(4) {\"h\", \"e\", \"l\", \"o\"}\n// 注：set 中 tostring 方法是不能将 set 转换成 string\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nset对象作用\n\n// 数组去重\nvar myset = new set([1, 2, 3, 4, 4]);\n[...myset]; // [1, 2, 3, 4]\n\n// 并集\nvar myset = new set([1, 2, 3, 4, 4]);\n[...myset]; // [1, 2, 3, 4]\n\n// 交集\nvar a = new set([1, 2, 3]);\nvar b = new set([4, 3, 2]);\nvar intersect = new set([...a].filter(x => b.has(x))); // {2, 3}\n\n// 差集\nvar a = new set([1, 2, 3]);\nvar b = new set([4, 3, 2]);\nvar difference = new set([...a].filter(x => !b.has(x))); // {1}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 类型转换\n\nnull、undefined\n\nboolean(null);      // false\nboolean(undefined); // false\n\nnumber(null);       // 0\nnumber(undefined);  // nan\n\nstring(null);       // null\nstring(undefined);  // undefined\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nstring\n\nnumber('');         // 0\n/^(-|\\+)?[0-9]+(\\.[0-9]+)?$/.test(str);\n// 当字符串str满足上述正则时，number(str)可转为正常数字，否则转为nan。\n\n\n1\n2\n3\n\n\narray\n\nboolean([1]);       // true\nstring([1]); // 等价于array.prototype.tostring()\nnumber([1]); // array->string->number\n\n\n1\n2\n3\n\n\nobject\n\nboolean({id: 1});   // true\nstring({id: 1});    // '[object object]'\n// 等价于：object.prototype.tostring()\nnumber({id: 1});    // nan\n\n\n1\n2\n3\n4\n\n\nmap\n\nboolean(new map());     // true\nstring(new map());      // '[object map]'\nnumber(new map());      // nan\n\n\n1\n2\n3\n\n\nset\n\nboolean(new set());     // true\nstring(new set());      // '[object set]'\nnumber(new set());      // nan\n\n\n1\n2\n3\n\n\n\n# '=='涉及的类型转换规则\n\n * 两边的类型是否相同，相同的话就比较值的大小，例如：1==2，返回 false\n * 判断的是否是 null 和 undefined，是的话就返回 true\n * 判断的类型是否是 string 和 number，是的话，把 string 类型转换成 number，在进行比较\n * 判断其中一方是否是 boolean，是的话就把 boolean 转换成 number，在进行比较\n * 如果其中一方为 object，且另一方为 string、number 或者 symbol，会将 object 转换成字符串，在进行比较\n\n\n# 对象转原始类型是根据什么流程运行的？\n\n对象转原始类型，会调用内置的toprimitive 函数，对于该函数而言，其逻辑如下：\n\n 1. 如果symbol.toprimitive()方法，优先调用在返回（该方法由用户自己定义）；\n 2. 调用valueof()，如果转换为原始类型，则返回；\n 3. 调用tostring()，如果转换为原始类型，则返回；\n 4. 如果都没有，返回原始类型，会报错；\n\n\n# undefined 和 void 0\n\n列举几点区别：\n\n 1. undefined 是可变的；在全局环境中，undefined是只读的。而在局部作用域中，undefined是可变的。\n 2. 什么是void；void是一元运算符，出现在操作数的左边，操作数可以是任何类型的值，void右边的表达式可以是带括号形式（例如：void(0)），也可以是不带括号的形式（例如：void 0）。\n 3. 使用 void 0 代替 undefined 的原因是；\n    1. 使用void 0比使用undefined能够减少3个字节；\n    2. undefined并不是js中的保留字，我们可以使用undefined作为变量名，然后给它赋值。void 0输出唯一的结果undefined，保证了不变性。\n 4. undefined与null的区别；null代表空值，代表“定义了但是为空”。而undefined的代表未定义。\n\n\n# js operators\n\n1、instanceof\n\ninstanceof运算符用于检测构造函数的prototype属性是否出现在某个实例对象的原型链上。\n\n手动实现一下instanceof的功能：\n\nfunction myinstanceof (left, right) {\n   // 基本数据类型直接返回false\n   if (typeof left !== 'object' || left === null) return false\n   // getprotypeof是object对象自带的一个方法，能够拿到参数的原型对象\n   let proto = object.getprototypeof(left)\n   while (true) {\n      // 查找到尽头，还没找到\n      if (proto == null) return false\n      // 找到相同的原型对象\n      if (proto == right.prototype) return true\n      proto = object.getprototypeof(proto)\n   }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n2、typeof （后续给出判定数据类型的所有方法）\n\ntypeof 1  // number\ntypeof 'string'  // string\ntypeof false  // boolean\ntypeof null  // object\ntypeof undefined  // undefined\ntypeof [1, 2, 3]  // object\ntypeof { name: 'js' }  // object\ntypeof function () {}  // function\ntypeof symbol('key')  // symbol\ntypeof new map()  // object\ntypeof new set()  // object\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n下面给出一种可以精确区分数据类型的方法：\n\nconst istype = (target: any): string => object.prototype.tostring.call(target);\n\n\n1\n\n\n// 输出结果\n'[object number]'\n'[object string]'\n'[object boolean]'\n'[object null]'\n'[object undefined]'\n'[object symbol]'\n'[object object]'\n'[object array]'\n'[object map]'\n'[object set]'\n'[object bigint]'\n'[object date]'\n'[object function]'\n\n'[object arguments]'\n'[object asyncfunction]'\n'[object domexception]'\n'[object error]'\n'[object generatorfunction]'\n'[object promise]'\n'[object proxy]' // 这个比较特殊\n'[object regexp]'\n'[object weakmap]'\n'[object weakset]'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n3、in in操作检查对象中是否有名为property的属性。也可以检查对象的原型，以便知道该属性是否为原型链的一部分。\n\n提示\n\nin操作符会检查原型上的属性； 当我们想要判断该属性是否是该对象的自身属性时：object.prototype.hasownproperty.call()；\n\n4、new\n\n该操作符后续再细说。\n\nfunction person(name: string) {\n    this.name = name;\n}\n\n\n1\n2\n3\n\n\n提示\n\n对于不加new来执行构造函数来说，返回值就是构造函数的执行结果； 对于加new来执行构造函数而言，如果 return 的是基本数据类型，那么忽视掉该 return 值；如果返回的是一个引用类型，那么返回该引用类型； object(value)，当以该形式而不是构造函数形式调用 object 时，会执行类型转换；",charsets:{cjk:!0}},{title:"TS类型",frontmatter:{title:"TS类型",date:"2022-07-28T00:15:31.000Z",permalink:"/pages/b02d31/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/08.TYPESCRIPT/02.TS%E7%B1%BB%E5%9E%8B.html",relativePath:"02.前端核心/08.TYPESCRIPT/02.TS类型.md",key:"v-35e552d1",path:"/pages/b02d31/",headers:[{level:2,title:"unknown、any、never 和 void",slug:"unknown、any、never-和-void",normalizedTitle:"unknown、any、never 和 void",charIndex:23},{level:3,title:"定义",slug:"定义",normalizedTitle:"定义",charIndex:81},{level:3,title:"区别",slug:"区别",normalizedTitle:"区别",charIndex:277},{level:3,title:"推荐使用",slug:"推荐使用",normalizedTitle:"推荐使用",charIndex:449},{level:2,title:"关键字",slug:"关键字",normalizedTitle:"关键字",charIndex:980},{level:3,title:"extends",slug:"extends",normalizedTitle:"extends",charIndex:1013},{level:3,title:"typeof",slug:"typeof",normalizedTitle:"typeof",charIndex:1157},{level:3,title:"keyof",slug:"keyof",normalizedTitle:"keyof",charIndex:1209},{level:3,title:"infer",slug:"infer",normalizedTitle:"infer",charIndex:1528},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:439},{level:3,title:"is",slug:"is",normalizedTitle:"is",charIndex:1356},{level:3,title:"as const",slug:"as-const",normalizedTitle:"as const",charIndex:2537},{level:2,title:"高级类型",slug:"高级类型",normalizedTitle:"高级类型",charIndex:2550},{level:3,title:"联合类型 + 交叉类型",slug:"联合类型-交叉类型",normalizedTitle:"联合类型 + 交叉类型",charIndex:2559},{level:3,title:"条件类型",slug:"条件类型",normalizedTitle:"条件类型",charIndex:609},{level:3,title:"枚举成员类型",slug:"枚举成员类型",normalizedTitle:"枚举成员类型",charIndex:3571},{level:3,title:"索引类型",slug:"索引类型",normalizedTitle:"索引类型",charIndex:1227},{level:3,title:"映射类型",slug:"映射类型",normalizedTitle:"映射类型",charIndex:4323},{level:3,title:"多态的 this 类型",slug:"多态的-this-类型",normalizedTitle:"多态的 this 类型",charIndex:5067},{level:3,title:"字面量类型",slug:"字面量类型",normalizedTitle:"字面量类型",charIndex:5148},{level:3,title:"类型断言",slug:"类型断言",normalizedTitle:"类型断言",charIndex:325},{level:3,title:"类型保护",slug:"类型保护",normalizedTitle:"类型保护",charIndex:1736},{level:2,title:"接口 vs 类型别名",slug:"接口-vs-类型别名",normalizedTitle:"接口 vs 类型别名",charIndex:5561}],headersStr:"unknown、any、never 和 void 定义 区别 推荐使用 关键字 extends typeof keyof infer in is as const 高级类型 联合类型 + 交叉类型 条件类型 枚举成员类型 索引类型 映射类型 多态的 this 类型 字面量类型 类型断言 类型保护 接口 vs 类型别名",content:" * 深入理解 TypeScript\n\n\n# unknown、any、never 和 void\n\nTS 中何时使用“never”与“unknown”类型\n\n\n# 定义\n\n * any：用于描述任意类型的变量，不做任何约束，编译时会跳过对其的类型检查。\n * unknown：表示未知类型，即写代码的时候还不知道具体会是什么数据类型。\n * never：永不存在的值的类型，常用于表示不能执行到终点的函数返回值，例如抛出异常或函数中执行无限循环的代码的函数返回值类型。\n * void：表示无任何类型，没有类型，例如没有返回值的函数的返回值类型。\n\n\n# 区别\n\nany 和 unknown 的区别\n\nunknown 与 any 类似，但使用前必须进行类型断言或守卫。\n\nnever 与 void 的区别\n\n用于函数时，never 表示函数执行不到返回值那一步（可能：抛出异常或死循环了）的返回值类型，即永不存在值的类型； 而 void 则表示没有返回值，不返回或返回 undefined。\n\n\n# 推荐使用\n\nany 类型导致问题太多，如类型污染，使用不存在属性或方法而不报错等；而且不方便后期维护，所以，建议能不用 any 就不用 any， 但是如果声明时并不能确定具体的类型，则可以使用 unknown 代替，在使用时用类型断言或类型守卫进行类型收缩。\n\nnever 类型用于表示用不存在的值的类型，所以常用于构造条件类型来组合出更灵活的类型定义。\n\n一个典型的 never 例子\n\ninterface Foo {\n  type: 'foo'\n}\n\ninterface Bar {\n  type: 'bar'\n}\n\ntype All = Foo | Bar\n\nfunction handleValue(val: All) {\n  switch (val.type) {\n    case 'foo':\n      break;\n    case 'bar':\n      break;\n    default:\n      const exhaustiveCheck: never = val;\n      break;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 关键字\n\n一篇比较全的文章：TS 类型表达中常用的关键字\n\n\n# extends\n\ninterface Size {\n    length: number;\n}\n\nfunction print<T extends Size>(arr: T): void {\n}\n// 此时arr必须是具有length属性的对象\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# typeof\n\n在 TS 中用于类型表达时，typeof 可以用于从一个变量上获取它的类型参考\n\n\n# keyof\n\nkeyof 是TS中的索引类型查询操作符。keyof T 会得到由 T 上已知的公共属性名组成的联合类型。\n\ntype Point = { x: number; y: number };\ntype P = keyof Point; // 'x' | 'y'\n\ntype Arrayish = { [n: number]: unknown };\ntype A = keyof Arrayish; // nuber\n\ntype Mapish = { [k: string]: boolean };\ntype M = keyof Mapish; // string | number\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# infer\n\n关于 infer 操作符，这个可以用来进行类型推测。\n\n\n# in\n\nin 操作符用于遍历目标类型的公开属性名。类似 for .. in 的机制。\n\n从其用途看，我们很容易想到 in 可用于联合类型或者枚举类型。\n\ntype Readonly<T> = {\n\treadonly [P in keyof T]: T[P]\n}\n\n\n1\n2\n3\n\n\n\n# is\n\nis 操作符用于TS的类型谓词中，是实现TS类型保护的一种方式。\n\n比如下面这种场景：\n\nfunction doSometing(value: string | number) {\n    if (typeof value === 'string') {\n        // TS 可以识别这个分支中 value 是 string 类型的参数（这就叫类型保护）\n        // do something\n    } else {\n        // TS 可以识别这个分支中 value 是 number 类型的参数\n        // do something\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n除去上面这种方式以外，我们可以使用TS的类型谓词来实现：\n\nfunction isString(value: any): value is string {\n    return typeof value === 'string';\n}\n\nfunction doSometing(value: string | number) {\n    if (isString(value)) {\n        // TS 可以识别这个分支中 value 是 string 类型的参数（这就叫类型保护）\n    } else {\n        // TS 可以识别这个分支中 value 是 number 类型的参数\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n这样做的好处是：实现了代码复用，实现了更好的语义化。\n\n其实，TS 代码中 Array.isArray 便是使用了这样的声明。\n\ninterface ArrayConstructor {\n    // ...\n    isArray(arg: any): arg is Array<any>;\n}\n\n\n1\n2\n3\n4\n\n\n\n# as const\n\n\n# 高级类型\n\n\n# 联合类型 + 交叉类型\n\ntype Uniontype = number | string;\ninterface A {\n    length: number;\n}\ninterface B {\n    name: string;\n}\ntype IntersectionType = A & B;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 可辨识联合\n\ninterface Square {\n    kind: \"square\";\n    size: number;\n}\ninterface Rectangle {\n    kind: \"rectangle\";\n    width: number;\n    height: number;\n}\ninterface Circle {\n    kind: \"circle\";\n    radius: number;\n}\n\ntype Shape = Square | Rectangle | Circle;\n\nfunction area(s: Shape) {\n    switch (s.kind) {\n        case \"square\": return s.size * s.size;\n        case \"rectangle\": return s.height * s.width;\n        case \"circle\": return Math.PI * s.radius ** 2;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 条件类型\n\ntype T1 = { name: string };\ntype T2 = { age: number };\ntype Bar<T> = T extends { a: (x: infer U) => void; b: (x: infer U) => void } ? U : never;\ntype T10 = Bar<{ a: (x: string) => void; b: (x: string) => void }>;\ntype T11 = Bar<{ a: (x: T1) => void; b: (x: T2) => void }>; // T1 & T2\n\n\n1\n2\n3\n4\n5\n\n\n\n# 枚举成员类型\n\n# const 枚举\n\n大多数情况下，枚举是十分有效的方案。然而在某些情况下需求很严格。 为了避免在额外生成的代码上的开销和额外的非直接的对枚举成员的访问， 我们可以使用 const 枚举。 常量枚举通过在枚举上使用 const 修饰符来定义。\n\nconst enum Enum {\n    A = 1,\n    B = A * 2,\n}\n\n\n1\n2\n3\n4\n\n\n常量枚举只能使用常量枚举表达式，并且不同于常规的枚举，它们在编译阶段会被删除。 常量枚举成员在使用的地方会被内联进来。 之所以可以这么做是因为，常量枚举不允许包含计算成员。\n\n# 外部枚举\n\n外部枚举用来描述已经存在的枚举类型的形状。\n\ndeclare enum Enum {\n    A = 1,\n    B,\n    C = 2\n}\n\n\n1\n2\n3\n4\n5\n\n\n外部枚举和非外部枚举之间有一个重要的区别，在正常的枚举里，没有初始化方法的成员被当成常数成员。 对于非常数的外部枚举而言，没有初始化方法时被当做需要经过计算的。\n\n\n# 索引类型\n\n提示\n\n * keyof T - 索引类型查询操作符\n * T[K] - 索引访问操作符\n\n索引类型和字符串索引签名\n\nkeyof和 T[K]与字符串索引签名进行交互。 如果你有一个带有字符串索引签名的类型，那么 keyof T会是 string。 并且 T[string]为索引签名的类型：\n\ninterface Map<T> {\n    [key: string]: T;\n}\nlet keys: keyof Map<number>; // string\nlet value: Map<number>['foo']; // number\n\n\n1\n2\n3\n4\n5\n\n\n\n# 映射类型\n\nTypeScript提供了从旧类型中创建新类型的一种方式 — 映射类型。 在映射类型里，新类型以相同的形式去转换旧类型里每个属性。 例如，你可以令每个属性成为 readonly类型或可选的。 下面是一些例子：\n\ntype Readonly<T> = {\n    readonly [P in keyof T]: T[P];\n}\ntype Partial<T> = {\n    [P in keyof T]?: T[P];\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n下面来看看最简单的映射类型和它的组成部分：\n\ntype Keys = 'option1' | 'option2';\ntype Flags = { [K in Keys]: boolean };\n\n\n1\n2\n\n\n它的语法与索引签名的语法类型，内部使用了 for .. in。 具有三个部分：\n\n 1. 类型变量 K，它会依次绑定到每个属性。\n 2. 字符串字面量联合的 Keys，它包含了要迭代的属性名的集合。\n 3. 属性的结果类型。\n\n由映射类型进行推断\n\nfunction unproxify<T>(t: Proxify<T>): T {\n    let result = {} as T;\n    for (const k in t) {\n        result[k] = t[k].get();\n    }\n    return result;\n}\n\nlet originalProps = unproxify(proxyProps);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n注意\n\n注意这个拆包推断只适用于同态的映射类型。 如果映射类型不是同态的，那么需要给拆包函数一个明确的类型参数。\n\n\n# 多态的 this 类型\n\n多态的 this 类型表示的是某个包含类或接口的子类型。这被称做 F-bounded多态性。它能很容易地表现连贯接口间的继承。\n\n\n# 字面量类型\n\n\n# 类型断言\n\ninterface Bird {\n    fly();\n    layEggs();\n}\n\ninterface Fish {\n    swim();\n    layEggs();\n}\n\nfunction getSmallPet(): Fish | Bird {\n    // ...\n}\n\nlet pet = getSmallPet();\n\n// 下面使用了类型断言\nif ((<Fish>pet).swim) {\n    (<Fish>pet).swim();\n}\nelse {\n    (<Bird>pet).fly();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 类型保护\n\n * typeof\n * instanceof\n * in\n * 用自定义的类型保护\n * 字面量类型保护\n\n\n# 接口 vs 类型别名\n\n> interface 侧重于描述数据结构，type 侧重于描述类型。\n\nextends\n\ninterface I1 { a: string; }\n\ntype T1 = { b: string; }\n\ntype T11 = { c: string; }\n\ninterface I2 extends I1 {}\ninterface I3 extends T1 {}\n\ntype T2 = T1 & I1;\ntype T2 = T1 & T11;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",normalizedContent:" * 深入理解 typescript\n\n\n# unknown、any、never 和 void\n\nts 中何时使用“never”与“unknown”类型\n\n\n# 定义\n\n * any：用于描述任意类型的变量，不做任何约束，编译时会跳过对其的类型检查。\n * unknown：表示未知类型，即写代码的时候还不知道具体会是什么数据类型。\n * never：永不存在的值的类型，常用于表示不能执行到终点的函数返回值，例如抛出异常或函数中执行无限循环的代码的函数返回值类型。\n * void：表示无任何类型，没有类型，例如没有返回值的函数的返回值类型。\n\n\n# 区别\n\nany 和 unknown 的区别\n\nunknown 与 any 类似，但使用前必须进行类型断言或守卫。\n\nnever 与 void 的区别\n\n用于函数时，never 表示函数执行不到返回值那一步（可能：抛出异常或死循环了）的返回值类型，即永不存在值的类型； 而 void 则表示没有返回值，不返回或返回 undefined。\n\n\n# 推荐使用\n\nany 类型导致问题太多，如类型污染，使用不存在属性或方法而不报错等；而且不方便后期维护，所以，建议能不用 any 就不用 any， 但是如果声明时并不能确定具体的类型，则可以使用 unknown 代替，在使用时用类型断言或类型守卫进行类型收缩。\n\nnever 类型用于表示用不存在的值的类型，所以常用于构造条件类型来组合出更灵活的类型定义。\n\n一个典型的 never 例子\n\ninterface foo {\n  type: 'foo'\n}\n\ninterface bar {\n  type: 'bar'\n}\n\ntype all = foo | bar\n\nfunction handlevalue(val: all) {\n  switch (val.type) {\n    case 'foo':\n      break;\n    case 'bar':\n      break;\n    default:\n      const exhaustivecheck: never = val;\n      break;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 关键字\n\n一篇比较全的文章：ts 类型表达中常用的关键字\n\n\n# extends\n\ninterface size {\n    length: number;\n}\n\nfunction print<t extends size>(arr: t): void {\n}\n// 此时arr必须是具有length属性的对象\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# typeof\n\n在 ts 中用于类型表达时，typeof 可以用于从一个变量上获取它的类型参考\n\n\n# keyof\n\nkeyof 是ts中的索引类型查询操作符。keyof t 会得到由 t 上已知的公共属性名组成的联合类型。\n\ntype point = { x: number; y: number };\ntype p = keyof point; // 'x' | 'y'\n\ntype arrayish = { [n: number]: unknown };\ntype a = keyof arrayish; // nuber\n\ntype mapish = { [k: string]: boolean };\ntype m = keyof mapish; // string | number\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# infer\n\n关于 infer 操作符，这个可以用来进行类型推测。\n\n\n# in\n\nin 操作符用于遍历目标类型的公开属性名。类似 for .. in 的机制。\n\n从其用途看，我们很容易想到 in 可用于联合类型或者枚举类型。\n\ntype readonly<t> = {\n\treadonly [p in keyof t]: t[p]\n}\n\n\n1\n2\n3\n\n\n\n# is\n\nis 操作符用于ts的类型谓词中，是实现ts类型保护的一种方式。\n\n比如下面这种场景：\n\nfunction dosometing(value: string | number) {\n    if (typeof value === 'string') {\n        // ts 可以识别这个分支中 value 是 string 类型的参数（这就叫类型保护）\n        // do something\n    } else {\n        // ts 可以识别这个分支中 value 是 number 类型的参数\n        // do something\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n除去上面这种方式以外，我们可以使用ts的类型谓词来实现：\n\nfunction isstring(value: any): value is string {\n    return typeof value === 'string';\n}\n\nfunction dosometing(value: string | number) {\n    if (isstring(value)) {\n        // ts 可以识别这个分支中 value 是 string 类型的参数（这就叫类型保护）\n    } else {\n        // ts 可以识别这个分支中 value 是 number 类型的参数\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n这样做的好处是：实现了代码复用，实现了更好的语义化。\n\n其实，ts 代码中 array.isarray 便是使用了这样的声明。\n\ninterface arrayconstructor {\n    // ...\n    isarray(arg: any): arg is array<any>;\n}\n\n\n1\n2\n3\n4\n\n\n\n# as const\n\n\n# 高级类型\n\n\n# 联合类型 + 交叉类型\n\ntype uniontype = number | string;\ninterface a {\n    length: number;\n}\ninterface b {\n    name: string;\n}\ntype intersectiontype = a & b;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 可辨识联合\n\ninterface square {\n    kind: \"square\";\n    size: number;\n}\ninterface rectangle {\n    kind: \"rectangle\";\n    width: number;\n    height: number;\n}\ninterface circle {\n    kind: \"circle\";\n    radius: number;\n}\n\ntype shape = square | rectangle | circle;\n\nfunction area(s: shape) {\n    switch (s.kind) {\n        case \"square\": return s.size * s.size;\n        case \"rectangle\": return s.height * s.width;\n        case \"circle\": return math.pi * s.radius ** 2;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 条件类型\n\ntype t1 = { name: string };\ntype t2 = { age: number };\ntype bar<t> = t extends { a: (x: infer u) => void; b: (x: infer u) => void } ? u : never;\ntype t10 = bar<{ a: (x: string) => void; b: (x: string) => void }>;\ntype t11 = bar<{ a: (x: t1) => void; b: (x: t2) => void }>; // t1 & t2\n\n\n1\n2\n3\n4\n5\n\n\n\n# 枚举成员类型\n\n# const 枚举\n\n大多数情况下，枚举是十分有效的方案。然而在某些情况下需求很严格。 为了避免在额外生成的代码上的开销和额外的非直接的对枚举成员的访问， 我们可以使用 const 枚举。 常量枚举通过在枚举上使用 const 修饰符来定义。\n\nconst enum enum {\n    a = 1,\n    b = a * 2,\n}\n\n\n1\n2\n3\n4\n\n\n常量枚举只能使用常量枚举表达式，并且不同于常规的枚举，它们在编译阶段会被删除。 常量枚举成员在使用的地方会被内联进来。 之所以可以这么做是因为，常量枚举不允许包含计算成员。\n\n# 外部枚举\n\n外部枚举用来描述已经存在的枚举类型的形状。\n\ndeclare enum enum {\n    a = 1,\n    b,\n    c = 2\n}\n\n\n1\n2\n3\n4\n5\n\n\n外部枚举和非外部枚举之间有一个重要的区别，在正常的枚举里，没有初始化方法的成员被当成常数成员。 对于非常数的外部枚举而言，没有初始化方法时被当做需要经过计算的。\n\n\n# 索引类型\n\n提示\n\n * keyof t - 索引类型查询操作符\n * t[k] - 索引访问操作符\n\n索引类型和字符串索引签名\n\nkeyof和 t[k]与字符串索引签名进行交互。 如果你有一个带有字符串索引签名的类型，那么 keyof t会是 string。 并且 t[string]为索引签名的类型：\n\ninterface map<t> {\n    [key: string]: t;\n}\nlet keys: keyof map<number>; // string\nlet value: map<number>['foo']; // number\n\n\n1\n2\n3\n4\n5\n\n\n\n# 映射类型\n\ntypescript提供了从旧类型中创建新类型的一种方式 — 映射类型。 在映射类型里，新类型以相同的形式去转换旧类型里每个属性。 例如，你可以令每个属性成为 readonly类型或可选的。 下面是一些例子：\n\ntype readonly<t> = {\n    readonly [p in keyof t]: t[p];\n}\ntype partial<t> = {\n    [p in keyof t]?: t[p];\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n下面来看看最简单的映射类型和它的组成部分：\n\ntype keys = 'option1' | 'option2';\ntype flags = { [k in keys]: boolean };\n\n\n1\n2\n\n\n它的语法与索引签名的语法类型，内部使用了 for .. in。 具有三个部分：\n\n 1. 类型变量 k，它会依次绑定到每个属性。\n 2. 字符串字面量联合的 keys，它包含了要迭代的属性名的集合。\n 3. 属性的结果类型。\n\n由映射类型进行推断\n\nfunction unproxify<t>(t: proxify<t>): t {\n    let result = {} as t;\n    for (const k in t) {\n        result[k] = t[k].get();\n    }\n    return result;\n}\n\nlet originalprops = unproxify(proxyprops);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n注意\n\n注意这个拆包推断只适用于同态的映射类型。 如果映射类型不是同态的，那么需要给拆包函数一个明确的类型参数。\n\n\n# 多态的 this 类型\n\n多态的 this 类型表示的是某个包含类或接口的子类型。这被称做 f-bounded多态性。它能很容易地表现连贯接口间的继承。\n\n\n# 字面量类型\n\n\n# 类型断言\n\ninterface bird {\n    fly();\n    layeggs();\n}\n\ninterface fish {\n    swim();\n    layeggs();\n}\n\nfunction getsmallpet(): fish | bird {\n    // ...\n}\n\nlet pet = getsmallpet();\n\n// 下面使用了类型断言\nif ((<fish>pet).swim) {\n    (<fish>pet).swim();\n}\nelse {\n    (<bird>pet).fly();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 类型保护\n\n * typeof\n * instanceof\n * in\n * 用自定义的类型保护\n * 字面量类型保护\n\n\n# 接口 vs 类型别名\n\n> interface 侧重于描述数据结构，type 侧重于描述类型。\n\nextends\n\ninterface i1 { a: string; }\n\ntype t1 = { b: string; }\n\ntype t11 = { c: string; }\n\ninterface i2 extends i1 {}\ninterface i3 extends t1 {}\n\ntype t2 = t1 & i1;\ntype t2 = t1 & t11;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",charsets:{cjk:!0}},{title:"TS类型体操",frontmatter:{title:"TS类型体操",date:"2022-07-28T00:15:48.000Z",permalink:"/pages/f1a087/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/08.TYPESCRIPT/04.TS%E7%B1%BB%E5%9E%8B%E4%BD%93%E6%93%8D.html",relativePath:"02.前端核心/08.TYPESCRIPT/04.TS类型体操.md",key:"v-0afebd0f",path:"/pages/f1a087/",headers:[{level:2,title:"基础工具类型",slug:"基础工具类型",normalizedTitle:"基础工具类型",charIndex:55},{level:2,title:"相等类型判断",slug:"相等类型判断",normalizedTitle:"相等类型判断",charIndex:293},{level:2,title:"使用对象或数组的值或键创建联合类型",slug:"使用对象或数组的值或键创建联合类型",normalizedTitle:"使用对象或数组的值或键创建联合类型",charIndex:604},{level:2,title:"Tuple",slug:"tuple",normalizedTitle:"tuple",charIndex:261},{level:3,title:"tuple to string",slug:"tuple-to-string",normalizedTitle:"tuple to string",charIndex:1355},{level:3,title:"tuple to union",slug:"tuple-to-union",normalizedTitle:"tuple to union",charIndex:1543},{level:3,title:"find",slug:"find",normalizedTitle:"find",charIndex:1745},{level:3,title:"remove",slug:"remove",normalizedTitle:"remove",charIndex:1844},{level:2,title:"Union",slug:"union",normalizedTitle:"union",charIndex:1211},{level:3,title:"长度相等，元素类型是Union",slug:"长度相等-元素类型是union",normalizedTitle:"长度相等，元素类型是union",charIndex:2397},{level:3,title:"union to tuple",slug:"union-to-tuple",normalizedTitle:"union to tuple",charIndex:2554},{level:3,title:"union to intersection",slug:"union-to-intersection",normalizedTitle:"union to intersection",charIndex:2608},{level:2,title:"Intersection",slug:"intersection",normalizedTitle:"intersection",charIndex:3524},{level:3,title:"intersection to tuple",slug:"intersection-to-tuple",normalizedTitle:"intersection to tuple",charIndex:3673},{level:2,title:"String",slug:"string",normalizedTitle:"string",charIndex:1384},{level:3,title:"string to tuple",slug:"string-to-tuple",normalizedTitle:"string to tuple",charIndex:3855},{level:3,title:"remove",slug:"remove-2",normalizedTitle:"remove",charIndex:1844},{level:3,title:"_ => aB",slug:"ab",normalizedTitle:"_ =&gt; ab",charIndex:null}],headersStr:"基础工具类型 相等类型判断 使用对象或数组的值或键创建联合类型 Tuple tuple to string tuple to union find remove Union 长度相等，元素类型是Union union to tuple union to intersection Intersection intersection to tuple String string to tuple remove _ => aB",content:"https://github.com/type-challenges/type-challenges\n\n\n# 基础工具类型\n\ntype T1<T> = T & any // any\ntype T2<T> = T & unknown // T\ntype T3<T> = T | never // T\ntype T4<T> = T & never // never\n\ntype Length<T extends unknown[]> = T['length'] extends infer A ? A : never; // Tuple length\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 相等类型判断\n\ntype Equals<X, Y> = \n    (<T>() => T extends X ? 1 : 2) extends \n        (<T>() => T extends Y ? 1 : 2) \n        ? true : false;\n\n\n1\n2\n3\n4\n\n常见错误\n\ntype Equal<T, U> = T extends U ? U extends T ? true : false : false;\ntype Equal<T, U> = [T] extends [U] ? [U] extends [T] ? true : false : false;\n\n\n1\n2\n\n\n\n# 使用对象或数组的值或键创建联合类型\n\n> 使用对象或数组的值或键创建联合类型\n\n// 使用字符串数组的值创建联合\nconst arr1= ['a', 'b'] as const;\ntype T1 = typeof arr1[number]; // 'a' | 'b'\n\n// 使用对象的键创建联合\nconst obj1 = {\n    a: 'one',\n    b: 'two',\n} as const; // 此处可以不使用 as const\ntype T2 = keyof typeof obj1; // 'a' | 'b'\n\n// 使用对象的值作为联合\nconst obj2 = {\n    a: 'v1',\n    b: 'v2',\n} as const;\ntype T3 = typeof obj2[keyof typeof obj2]; // 'v1' | 'v2'\n\n// 使用联合作为对象的键名\nconst arr2 = ['a', 'b', 'c'] as const;\ntype T4<T> = { // T 指代联合类型\n    [k in T]: boolean;\n}\ntype T5 = T4<typeof arr2[number]>;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n注意这种情况的Union\n\nconst obj2 = {\n    a: 'v1',\n    b: 'v2',\n} as const;\ntype T3 = typeof obj2[keyof typeof obj2]; // 'v1' | 'v2'\n\n\n1\n2\n3\n4\n5\n\n\n\n# Tuple\n\n\n# tuple to string\n\ntype TupleToString<Tuple extends unknown[], S extends string = ''>\n  = Tuple extends [infer A, ...infer B]\n  ? TupleToString<B, `${S}${A & string}`>\n  : S;\n\n\n1\n2\n3\n4\n\n\n\n# tuple to union\n\ntype TupleToUnion<T extends unknown[]> = T[number]; \n// 递归(笨方法)\ntype TupleToUnion2<T> \n    = T extends [infer A, ...infer B] \n    ? A | TupleToUnion2<B> \n    : never;\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# find\n\ntype Find<Tuple extends unknown[], U>\n  = U extends Tuple[number] ? true : false;\n\n\n1\n2\n\n\n\n# remove\n\n// remove a element from tuple\ntype Filter<Tuple extends unknown[], U, Result extends unknown[] = []>\n  = Tuple extends [infer A, ...infer B]\n  ? A extends U\n  ? [...Result, ...B] : Filter<B, U, [...Result, A]>\n  : Result;\n\n// remove a children tuple from tuple\ntype FilterTuple<Tuple extends unknown[], U extends unknown[], Result extends unknown[] = []>\n  = Tuple extends [infer A, ...infer B]\n  ? A extends U[number]\n  ? FilterTuple<B, U, Result> : FilterTuple<B, U, [...Result, A]>\n  : Result;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Union\n\n\n# 长度相等，元素类型是Union\n\ntype T1<T> = Union\ntype Tuple<T> = {\n    [K in keyof T]: T1<T[K]>;\n}\ntype T2<A extends readonly unknown[]> = [...Tuple<A>]\n\n\n1\n2\n3\n4\n5\n\n\n\n# union to tuple\n\n> [TypeScript奇技淫巧] union to tuple\n\n// union to intersection of functions\ntype UnionToIoF<U> = \n    (U extends any ? (k: (x: U) => void) => void : never) extends \n        ((k: infer I) => void) ? I : never\n// return last element from Union\ntype UnionPop<U> = UnionToIoF<U> extends { (a: infer A): void; } ? A : never;\n// prepend an element to a tuple.\ntype Prepend<U, T extends any[]> = ((a: U, ...r: T) => void) extends \n    (...r: infer R) => void ? R : never;\n\ntype UnionToTupleRecursively<Union, Result extends any[]> = {\n    1: Result;\n    0: UnionToTupleRecursively_<Union, UnionPop<Union>, Result>;\n}[[Union] extends [never] ? 1 : 0];\n\ntype UnionToTupleRecursively_<Union, Element, Result extends any[]> = \n    UnionToTupleRecursively<Exclude<Union, Element>, Prepend<Element, Result>>;\n\ntype UnionToTuple<U> = UnionToTupleRecursively<U, []>;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# union to intersection\n\n// 利用函数参数逆变的特性\ntype UnionToIntersection<U> = \n    (U extends any ? (k: U) => void : never) extends \n        ((k: infer I) => void) ? I : never;\n\n\n1\n2\n3\n4\n\n\n\n# Intersection\n\n\n# intersection to tuple\n\n// intersection of functions to tuple\ntype IoFToTuple<U> = U extends {(a: infer A): void } ? A : never;\n// 依据右边infer的个数，依次获得U交叉中最后几个类型\n\n\n1\n2\n3\n\n\n\n# String\n\n\n# string to tuple\n\ntype StringToTuple<S extends string, Tuple extends unknown[] = []>\n  = S extends `${infer A}${infer B}` ? [A, ...StringToTuple<B>]\n  : Tuple;\n\n\n1\n2\n3\n\n\n\n# remove\n\ntype DropString<S extends string, R extends string>\n  = S extends `${infer A}${infer B}`\n  ? (R extends `${string}${A}${string}`\n    ? (DropString<B, R>) : `${A}${DropString<B, R>}`)\n  : S\n\n\n1\n2\n3\n4\n5\n\n\n\n# _ => aB\n\ntype CamelCase<S extends string> = Uncapitalize<CamelCaseCore<Lowercase<S>>>;\ntype CamelCaseCore<S extends string> \n    = S extends `${infer A}_${infer B}` \n    ? `${Capitalize<A>}${CamelCaseCore<B>}` \n    : S;\ntype camelCase = CamelCase<'hello_world_with_types'> // 'helloWorldWithTypes'\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"https://github.com/type-challenges/type-challenges\n\n\n# 基础工具类型\n\ntype t1<t> = t & any // any\ntype t2<t> = t & unknown // t\ntype t3<t> = t | never // t\ntype t4<t> = t & never // never\n\ntype length<t extends unknown[]> = t['length'] extends infer a ? a : never; // tuple length\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 相等类型判断\n\ntype equals<x, y> = \n    (<t>() => t extends x ? 1 : 2) extends \n        (<t>() => t extends y ? 1 : 2) \n        ? true : false;\n\n\n1\n2\n3\n4\n\n常见错误\n\ntype equal<t, u> = t extends u ? u extends t ? true : false : false;\ntype equal<t, u> = [t] extends [u] ? [u] extends [t] ? true : false : false;\n\n\n1\n2\n\n\n\n# 使用对象或数组的值或键创建联合类型\n\n> 使用对象或数组的值或键创建联合类型\n\n// 使用字符串数组的值创建联合\nconst arr1= ['a', 'b'] as const;\ntype t1 = typeof arr1[number]; // 'a' | 'b'\n\n// 使用对象的键创建联合\nconst obj1 = {\n    a: 'one',\n    b: 'two',\n} as const; // 此处可以不使用 as const\ntype t2 = keyof typeof obj1; // 'a' | 'b'\n\n// 使用对象的值作为联合\nconst obj2 = {\n    a: 'v1',\n    b: 'v2',\n} as const;\ntype t3 = typeof obj2[keyof typeof obj2]; // 'v1' | 'v2'\n\n// 使用联合作为对象的键名\nconst arr2 = ['a', 'b', 'c'] as const;\ntype t4<t> = { // t 指代联合类型\n    [k in t]: boolean;\n}\ntype t5 = t4<typeof arr2[number]>;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n注意这种情况的union\n\nconst obj2 = {\n    a: 'v1',\n    b: 'v2',\n} as const;\ntype t3 = typeof obj2[keyof typeof obj2]; // 'v1' | 'v2'\n\n\n1\n2\n3\n4\n5\n\n\n\n# tuple\n\n\n# tuple to string\n\ntype tupletostring<tuple extends unknown[], s extends string = ''>\n  = tuple extends [infer a, ...infer b]\n  ? tupletostring<b, `${s}${a & string}`>\n  : s;\n\n\n1\n2\n3\n4\n\n\n\n# tuple to union\n\ntype tupletounion<t extends unknown[]> = t[number]; \n// 递归(笨方法)\ntype tupletounion2<t> \n    = t extends [infer a, ...infer b] \n    ? a | tupletounion2<b> \n    : never;\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# find\n\ntype find<tuple extends unknown[], u>\n  = u extends tuple[number] ? true : false;\n\n\n1\n2\n\n\n\n# remove\n\n// remove a element from tuple\ntype filter<tuple extends unknown[], u, result extends unknown[] = []>\n  = tuple extends [infer a, ...infer b]\n  ? a extends u\n  ? [...result, ...b] : filter<b, u, [...result, a]>\n  : result;\n\n// remove a children tuple from tuple\ntype filtertuple<tuple extends unknown[], u extends unknown[], result extends unknown[] = []>\n  = tuple extends [infer a, ...infer b]\n  ? a extends u[number]\n  ? filtertuple<b, u, result> : filtertuple<b, u, [...result, a]>\n  : result;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# union\n\n\n# 长度相等，元素类型是union\n\ntype t1<t> = union\ntype tuple<t> = {\n    [k in keyof t]: t1<t[k]>;\n}\ntype t2<a extends readonly unknown[]> = [...tuple<a>]\n\n\n1\n2\n3\n4\n5\n\n\n\n# union to tuple\n\n> [typescript奇技淫巧] union to tuple\n\n// union to intersection of functions\ntype uniontoiof<u> = \n    (u extends any ? (k: (x: u) => void) => void : never) extends \n        ((k: infer i) => void) ? i : never\n// return last element from union\ntype unionpop<u> = uniontoiof<u> extends { (a: infer a): void; } ? a : never;\n// prepend an element to a tuple.\ntype prepend<u, t extends any[]> = ((a: u, ...r: t) => void) extends \n    (...r: infer r) => void ? r : never;\n\ntype uniontotuplerecursively<union, result extends any[]> = {\n    1: result;\n    0: uniontotuplerecursively_<union, unionpop<union>, result>;\n}[[union] extends [never] ? 1 : 0];\n\ntype uniontotuplerecursively_<union, element, result extends any[]> = \n    uniontotuplerecursively<exclude<union, element>, prepend<element, result>>;\n\ntype uniontotuple<u> = uniontotuplerecursively<u, []>;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# union to intersection\n\n// 利用函数参数逆变的特性\ntype uniontointersection<u> = \n    (u extends any ? (k: u) => void : never) extends \n        ((k: infer i) => void) ? i : never;\n\n\n1\n2\n3\n4\n\n\n\n# intersection\n\n\n# intersection to tuple\n\n// intersection of functions to tuple\ntype ioftotuple<u> = u extends {(a: infer a): void } ? a : never;\n// 依据右边infer的个数，依次获得u交叉中最后几个类型\n\n\n1\n2\n3\n\n\n\n# string\n\n\n# string to tuple\n\ntype stringtotuple<s extends string, tuple extends unknown[] = []>\n  = s extends `${infer a}${infer b}` ? [a, ...stringtotuple<b>]\n  : tuple;\n\n\n1\n2\n3\n\n\n\n# remove\n\ntype dropstring<s extends string, r extends string>\n  = s extends `${infer a}${infer b}`\n  ? (r extends `${string}${a}${string}`\n    ? (dropstring<b, r>) : `${a}${dropstring<b, r>}`)\n  : s\n\n\n1\n2\n3\n4\n5\n\n\n\n# _ => ab\n\ntype camelcase<s extends string> = uncapitalize<camelcasecore<lowercase<s>>>;\ntype camelcasecore<s extends string> \n    = s extends `${infer a}_${infer b}` \n    ? `${capitalize<a>}${camelcasecore<b>}` \n    : s;\ntype camelcase = camelcase<'hello_world_with_types'> // 'helloworldwithtypes'\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0}},{title:"TS装饰器",frontmatter:{title:"TS装饰器",date:"2022-07-28T00:17:00.000Z",permalink:"/pages/71a516/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/08.TYPESCRIPT/06.TS%E8%A3%85%E9%A5%B0%E5%99%A8.html",relativePath:"02.前端核心/08.TYPESCRIPT/06.TS装饰器.md",key:"v-c360f9da",path:"/pages/71a516/",headers:[{level:2,title:"装饰器的执行时机",slug:"装饰器的执行时机",normalizedTitle:"装饰器的执行时机",charIndex:123},{level:2,title:"函数柯里化解决参数问题",slug:"函数柯里化解决参数问题",normalizedTitle:"函数柯里化解决参数问题",charIndex:264},{level:2,title:"四种装饰器",slug:"四种装饰器",normalizedTitle:"四种装饰器",charIndex:553},{level:3,title:"1. 类装饰器",slug:"_1-类装饰器",normalizedTitle:"1. 类装饰器",charIndex:563},{level:3,title:"2. 方法装饰器",slug:"_2-方法装饰器",normalizedTitle:"2. 方法装饰器",charIndex:648},{level:3,title:"3. 方法参数装饰器",slug:"_3-方法参数装饰器",normalizedTitle:"3. 方法参数装饰器",charIndex:781},{level:3,title:"4. 属性装饰器",slug:"_4-属性装饰器",normalizedTitle:"4. 属性装饰器",charIndex:894},{level:3,title:"装饰器加载顺序",slug:"装饰器加载顺序",normalizedTitle:"装饰器加载顺序",charIndex:988},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:1193}],headersStr:"装饰器的执行时机 函数柯里化解决参数问题 四种装饰器 1. 类装饰器 2. 方法装饰器 3. 方法参数装饰器 4. 属性装饰器 装饰器加载顺序 参考文档",content:'装饰器是一种特殊类型的声明，它能够被附加到类声明，方法，访问符，属性或参数上，可以修改类的行为。\n\n装饰器使用@expression这种形式，expression 求值后必须为一个函数，他会在运行时被调用，被装饰的声明信息作为参数传入。\n\n\n# 装饰器的执行时机\n\n装饰器对类的行为的改变，是代码编译时发生的（不是TypeScript编译，而是js在执行机中编译阶段），而不是在运行时。\n\n这意味着，装饰器能在编译阶段运行代码。也就是说，装饰器本质就是编译时执行的函数。\n\n在Node.JS环境中模块一加载时就会执行。\n\n\n# 函数柯里化解决参数问题\n\n但是在实际场景中，有时希望像装饰器传入一些参数，如下：\n\n@path("/hello", "world")\nclass HelloService { }\n\n\n1\n2\n\n\n此时上面的装饰器方法就不满足了（VSCode编译报错），这时我们可以借助JavaScript中函数柯里化特性。\n\nfunction Path(p1: string, p2: string) {\n    return function (target) { //  这才是真正装饰器\n        // do something \n    }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 四种装饰器\n\n\n# 1. 类装饰器\n\n应用于类构造函数，其参数是类的构造函数。\n\n注意： class并不是像Java那种强类型语言中的类，而是JavaScript构造函数的语法糖。\n\n\n# 2. 方法装饰器\n\n它会被应用到方法的 属性描述符上，可以用来监视，修改或者替换方法定义。\n\n方法装饰会在运行时传入下列3个参数：\n\n 1. 对于静态成员来说是类的构造函数，对于实例成员来说是类的原型对象。\n 2. 成员的名字。\n 3. 成员的属性描述符。\n\n\n# 3. 方法参数装饰器\n\n参数装饰器表达式会在运行时当作函数被调用，传入下列3个参数：\n\n 1. 对于静态成员来说是类的构造函数，对于实例成员来说是类的原型对象。\n 2. 方法名。\n 3. 参数在函数参数列表中的索引。\n\n\n# 4. 属性装饰器\n\n属性装饰器表达式会在运行时当作函数被调用，传入下列2个参数：\n\n 1. 对于静态成员来说是类的构造函数，对于实例成员来说是类的原型对象。\n 2. 成员的名字。\n\n\n# 装饰器加载顺序\n\n 1. 有多个参数装饰器时，从最后一个参数装饰器依次向前执行。\n 2. 方法和方法参数中参数参数装饰器先执行。\n 3. 类装饰器总是最后执行。\n 4. 方法和属性装饰器，谁在前面说先执行。因为参数属于方法一部分，所以参数会一直紧紧挨着方法执行。\n\n> 第4点说明：如果属性在方法前面，那么执行顺序是：属性>参数>方法>类。 如果方法在属性前面，那么执行顺序是：参数>方法>属性>类。\n\n\n# 参考文档\n\n 1. TypeScript装饰器（decorators）',normalizedContent:'装饰器是一种特殊类型的声明，它能够被附加到类声明，方法，访问符，属性或参数上，可以修改类的行为。\n\n装饰器使用@expression这种形式，expression 求值后必须为一个函数，他会在运行时被调用，被装饰的声明信息作为参数传入。\n\n\n# 装饰器的执行时机\n\n装饰器对类的行为的改变，是代码编译时发生的（不是typescript编译，而是js在执行机中编译阶段），而不是在运行时。\n\n这意味着，装饰器能在编译阶段运行代码。也就是说，装饰器本质就是编译时执行的函数。\n\n在node.js环境中模块一加载时就会执行。\n\n\n# 函数柯里化解决参数问题\n\n但是在实际场景中，有时希望像装饰器传入一些参数，如下：\n\n@path("/hello", "world")\nclass helloservice { }\n\n\n1\n2\n\n\n此时上面的装饰器方法就不满足了（vscode编译报错），这时我们可以借助javascript中函数柯里化特性。\n\nfunction path(p1: string, p2: string) {\n    return function (target) { //  这才是真正装饰器\n        // do something \n    }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 四种装饰器\n\n\n# 1. 类装饰器\n\n应用于类构造函数，其参数是类的构造函数。\n\n注意： class并不是像java那种强类型语言中的类，而是javascript构造函数的语法糖。\n\n\n# 2. 方法装饰器\n\n它会被应用到方法的 属性描述符上，可以用来监视，修改或者替换方法定义。\n\n方法装饰会在运行时传入下列3个参数：\n\n 1. 对于静态成员来说是类的构造函数，对于实例成员来说是类的原型对象。\n 2. 成员的名字。\n 3. 成员的属性描述符。\n\n\n# 3. 方法参数装饰器\n\n参数装饰器表达式会在运行时当作函数被调用，传入下列3个参数：\n\n 1. 对于静态成员来说是类的构造函数，对于实例成员来说是类的原型对象。\n 2. 方法名。\n 3. 参数在函数参数列表中的索引。\n\n\n# 4. 属性装饰器\n\n属性装饰器表达式会在运行时当作函数被调用，传入下列2个参数：\n\n 1. 对于静态成员来说是类的构造函数，对于实例成员来说是类的原型对象。\n 2. 成员的名字。\n\n\n# 装饰器加载顺序\n\n 1. 有多个参数装饰器时，从最后一个参数装饰器依次向前执行。\n 2. 方法和方法参数中参数参数装饰器先执行。\n 3. 类装饰器总是最后执行。\n 4. 方法和属性装饰器，谁在前面说先执行。因为参数属于方法一部分，所以参数会一直紧紧挨着方法执行。\n\n> 第4点说明：如果属性在方法前面，那么执行顺序是：属性>参数>方法>类。 如果方法在属性前面，那么执行顺序是：参数>方法>属性>类。\n\n\n# 参考文档\n\n 1. typescript装饰器（decorators）',charsets:{cjk:!0}},{title:"声明文件",frontmatter:{title:"声明文件",date:"2022-07-28T00:17:10.000Z",permalink:"/pages/3672e4/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/08.TYPESCRIPT/08.%E5%A3%B0%E6%98%8E%E6%96%87%E4%BB%B6.html",relativePath:"02.前端核心/08.TYPESCRIPT/08.声明文件.md",key:"v-43c23156",path:"/pages/3672e4/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"tsconfig.json",frontmatter:{title:"tsconfig.json",date:"2022-07-28T00:17:10.000Z",permalink:"/pages/fvdhb4/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/08.TYPESCRIPT/10.tsconfigjson.html",relativePath:"02.前端核心/08.TYPESCRIPT/10.tsconfigjson.md",key:"v-64265c0c",path:"/pages/fvdhb4/",headersStr:null,content:'{\n    "compilerOptions": {\n    }\n}\n\n\n1\n2\n3\n4\n',normalizedContent:'{\n    "compileroptions": {\n    }\n}\n\n\n1\n2\n3\n4\n',charsets:{}},{title:"浏览器",frontmatter:{title:"浏览器",date:"2022-07-27T23:37:52.000Z",permalink:"/pages/bfc8a9/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/10.%E6%B5%8F%E8%A7%88%E5%99%A8.html",relativePath:"02.前端核心/10.浏览器.md",key:"v-ec73c972",path:"/pages/bfc8a9/",headers:[{level:2,title:"浏览器渲染过程",slug:"浏览器渲染过程",normalizedTitle:"浏览器渲染过程",charIndex:2},{level:3,title:"回流",slug:"回流",normalizedTitle:"回流",charIndex:93},{level:3,title:"重绘",slug:"重绘",normalizedTitle:"重绘",charIndex:140}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"浏览器渲染过程 回流 重绘",content:"# 浏览器渲染过程\n\n 1. 解析HTML、生成DOM树；解析CSS，生成CSSOM树\n 2. 将DOM树和CSSOM树结合，生成渲染树（Render Tree）\n 3. Layout（回流）：根据生成的渲染树，进行回流，得到节点的几何信息（位置、大小）\n 4. Repaint（重绘）：根据渲染树依据回流得到的几何信息，得到节点的绝对像素\n 5. Display：将像素发给GPU，展示在页面上\n\n\n\n你真的了解回流和重绘吗？\n\n\n# 回流\n\n前面我们通过构造渲染树，我们将可见DOM节点以及它对应的样式结合起来，可是我们还需要计算它们在设备视口（viewport）内的确切位置和大小，这个计算的阶段就是回流\n\n\n# 重绘\n\n通过构造渲染树和回流，我们知道了哪些节点是可见的，以及可见节点的样式和具体的几何信息（位置、大小）， 那么我们就可以将渲染树的每个节点都转换位屏幕上的实际像素，这个阶段叫做重绘节点。\n\n何时发生回流重绘\n\n前面我们知道，回流这一阶段主要是计算接待你的位置和几何信息，那么当页面布局和几何信息发生变化的时候，就需要回流。 比如一下情况：\n\n 1. 页面一开始渲染的时候（这必然的）\n 2. 添加或删除可见的 DOM 元素\n 3. 元素的位置发生变化\n 4. 元素的尺寸发生变化（包括外边距、内边距、边框大小、高度和宽度等）\n 5. 内容发生变化，比如文本变化或图片被另一个不同尺寸的图片所替代\n 6. 浏览器的窗口尺寸变化（因为回流是根据视口的大小来计算元素的位置和大小的）\n\n提示\n\n回流一定会触发重绘，而重绘不一定会回流。",normalizedContent:"# 浏览器渲染过程\n\n 1. 解析html、生成dom树；解析css，生成cssom树\n 2. 将dom树和cssom树结合，生成渲染树（render tree）\n 3. layout（回流）：根据生成的渲染树，进行回流，得到节点的几何信息（位置、大小）\n 4. repaint（重绘）：根据渲染树依据回流得到的几何信息，得到节点的绝对像素\n 5. display：将像素发给gpu，展示在页面上\n\n\n\n你真的了解回流和重绘吗？\n\n\n# 回流\n\n前面我们通过构造渲染树，我们将可见dom节点以及它对应的样式结合起来，可是我们还需要计算它们在设备视口（viewport）内的确切位置和大小，这个计算的阶段就是回流\n\n\n# 重绘\n\n通过构造渲染树和回流，我们知道了哪些节点是可见的，以及可见节点的样式和具体的几何信息（位置、大小）， 那么我们就可以将渲染树的每个节点都转换位屏幕上的实际像素，这个阶段叫做重绘节点。\n\n何时发生回流重绘\n\n前面我们知道，回流这一阶段主要是计算接待你的位置和几何信息，那么当页面布局和几何信息发生变化的时候，就需要回流。 比如一下情况：\n\n 1. 页面一开始渲染的时候（这必然的）\n 2. 添加或删除可见的 dom 元素\n 3. 元素的位置发生变化\n 4. 元素的尺寸发生变化（包括外边距、内边距、边框大小、高度和宽度等）\n 5. 内容发生变化，比如文本变化或图片被另一个不同尺寸的图片所替代\n 6. 浏览器的窗口尺寸变化（因为回流是根据视口的大小来计算元素的位置和大小的）\n\n提示\n\n回流一定会触发重绘，而重绘不一定会回流。",charsets:{cjk:!0}},{title:"模块化",frontmatter:{title:"模块化",date:"2022-07-28T00:13:30.000Z",permalink:"/pages/0571cf/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/12.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/01.%E6%A8%A1%E5%9D%97%E5%8C%96.html",relativePath:"02.前端核心/12.项目构建/01.模块化.md",key:"v-556efd19",path:"/pages/0571cf/",headers:[{level:2,title:"工程化",slug:"工程化",normalizedTitle:"工程化",charIndex:2},{level:2,title:"模块化",slug:"模块化",normalizedTitle:"模块化",charIndex:10},{level:3,title:"CJS (CommonJS)【重点】",slug:"cjs-commonjs-【重点】",normalizedTitle:"cjs (commonjs)【重点】",charIndex:18},{level:3,title:"ESM【重点】",slug:"esm【重点】",normalizedTitle:"esm【重点】",charIndex:270},{level:3,title:"UMD【重点】",slug:"umd【重点】",normalizedTitle:"umd【重点】",charIndex:504},{level:3,title:"AMD",slug:"amd",normalizedTitle:"amd",charIndex:601},{level:3,title:"CMD",slug:"cmd",normalizedTitle:"cmd",charIndex:593},{level:2,title:"组件化",slug:"组件化",normalizedTitle:"组件化",charIndex:1147},{level:2,title:"others",slug:"others",normalizedTitle:"others",charIndex:1155},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:1372}],headersStr:"工程化 模块化 CJS (CommonJS)【重点】 ESM【重点】 UMD【重点】 AMD CMD 组件化 others 参考文档",content:'# 工程化\n\n\n# 模块化\n\n\n# CJS (CommonJS)【重点】\n\n特点：\n\n * 所有代码都运行在模块作用域内，不会污染全局作用域；\n * 模块加载的顺序，按照其在代码中引入的顺序；\n * 模块可以多次加载，但是只会在第一次加载时运行依次，然后运行结果会被缓存，之后不论加载几次，都会直接读取缓存。清楚缓存后方可再次运行；\n * module.exports 属性输出的是值的拷贝，一旦输出操作完成，模块内发生的任何变化不会影响一输出的值；\n * 注意 module.exports 和 exports 的用法以及区别；\n\n\n# ESM【重点】\n\n特点：\n\n * CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用；\n * 静态化，编译时就确定模块之间的关系，每个模块的输入和输出变量也是确定的；\n * tree shaking\n\n静态页面使用<script type="module" src=""><\/script>引入ESM文件，浏览器是可以解析的；\n\n但引入CommonJS文件，浏览器是不能解析的。（在 Node 环境下运行是可以 CommonJS 文件）\n\n\n# UMD【重点】\n\nUMD 叫做通用模块定义规范，全称为：Universal Module Definition。\n\n它可以通过运行编译时让同一个代码模块在使用 CommonJS、CMD 甚至是 AMD 的项目中运行。 这样就使得 JavaScript 包运行在浏览器端、服务区端甚至是 APP 端都只需要遵守同一个写法就行了。\n\n\n# AMD\n\nAMD规范，全称为：Asynchronous Module Definition。\n\n由于 CommonJS 是作用于服务端的，是同步加载。这个放到浏览器环境中显然就不太合适了，AMD 规范就是解决这一问题的。\n\n目前，我们只有知道这个是异步加载即可。\n\n想了解更多可以看一下 require.js。\n\n// 第一个参数是导入的模块，第2个参数为函数，函数形参是导入模块的引用。\ndefine([], function() {\n  return {\n    // 对外暴露的内容\n  }\n})\n// 加载模块\nrequire([module], callback);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# CMD\n\nCMD规范，全称为：Common Module Definition。综合了 CommonJS 和 AMD 的特点。\n\nCMD 规范和 AMD 规范的不同指出：\n\n * AMD 需要异步加载模块，而 CMD 可以同步可以异步；\n * CMD 推崇依赖就近，AMD 推崇依赖前置；\n\n> 【CMD 没接触过】\n\n\n# 组件化\n\n\n# others\n\n * IIFE：自执行函数，可通过 <script> 标签加载\n * AMD：通过 requireJS 加载\n * CommonJS：Node 默认的模块规范，可通过 webpack 加载\n * UMD：兼容 IIFE，AMD，CJS 三种模块规范\n * ESM：ES2015 Module 规范，可用 webpack 和 rollup 加载\n\n在开发应用时使用 Webpack，开发库时使用 Rollup。\n\n\n# 参考文档\n\n 1. JS模块化浅谈【CommonJS、AMD、CMD、UMD、ESM】\n 2. Tree-Shaking性能优化实践 - 原理篇',normalizedContent:'# 工程化\n\n\n# 模块化\n\n\n# cjs (commonjs)【重点】\n\n特点：\n\n * 所有代码都运行在模块作用域内，不会污染全局作用域；\n * 模块加载的顺序，按照其在代码中引入的顺序；\n * 模块可以多次加载，但是只会在第一次加载时运行依次，然后运行结果会被缓存，之后不论加载几次，都会直接读取缓存。清楚缓存后方可再次运行；\n * module.exports 属性输出的是值的拷贝，一旦输出操作完成，模块内发生的任何变化不会影响一输出的值；\n * 注意 module.exports 和 exports 的用法以及区别；\n\n\n# esm【重点】\n\n特点：\n\n * commonjs 模块输出的是一个值的拷贝，es6 模块输出的是值的引用；\n * 静态化，编译时就确定模块之间的关系，每个模块的输入和输出变量也是确定的；\n * tree shaking\n\n静态页面使用<script type="module" src=""><\/script>引入esm文件，浏览器是可以解析的；\n\n但引入commonjs文件，浏览器是不能解析的。（在 node 环境下运行是可以 commonjs 文件）\n\n\n# umd【重点】\n\numd 叫做通用模块定义规范，全称为：universal module definition。\n\n它可以通过运行编译时让同一个代码模块在使用 commonjs、cmd 甚至是 amd 的项目中运行。 这样就使得 javascript 包运行在浏览器端、服务区端甚至是 app 端都只需要遵守同一个写法就行了。\n\n\n# amd\n\namd规范，全称为：asynchronous module definition。\n\n由于 commonjs 是作用于服务端的，是同步加载。这个放到浏览器环境中显然就不太合适了，amd 规范就是解决这一问题的。\n\n目前，我们只有知道这个是异步加载即可。\n\n想了解更多可以看一下 require.js。\n\n// 第一个参数是导入的模块，第2个参数为函数，函数形参是导入模块的引用。\ndefine([], function() {\n  return {\n    // 对外暴露的内容\n  }\n})\n// 加载模块\nrequire([module], callback);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# cmd\n\ncmd规范，全称为：common module definition。综合了 commonjs 和 amd 的特点。\n\ncmd 规范和 amd 规范的不同指出：\n\n * amd 需要异步加载模块，而 cmd 可以同步可以异步；\n * cmd 推崇依赖就近，amd 推崇依赖前置；\n\n> 【cmd 没接触过】\n\n\n# 组件化\n\n\n# others\n\n * iife：自执行函数，可通过 <script> 标签加载\n * amd：通过 requirejs 加载\n * commonjs：node 默认的模块规范，可通过 webpack 加载\n * umd：兼容 iife，amd，cjs 三种模块规范\n * esm：es2015 module 规范，可用 webpack 和 rollup 加载\n\n在开发应用时使用 webpack，开发库时使用 rollup。\n\n\n# 参考文档\n\n 1. js模块化浅谈【commonjs、amd、cmd、umd、esm】\n 2. tree-shaking性能优化实践 - 原理篇',charsets:{cjk:!0}},{title:"项目构建工具",frontmatter:{title:"项目构建工具",date:"2022-07-27T23:38:44.000Z",permalink:"/pages/fdde5d/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/12.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/02.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7.html",relativePath:"02.前端核心/12.项目构建/02.项目构建工具.md",key:"v-d35a7e4a",path:"/pages/fdde5d/",headersStr:null,content:" * umi msfu\n * swc\n * esbuild\n * https://juejin.cn/post/6918927987056312327\n * https://blog.csdn.net/qq_21567385/article/details/121345739\n\n直入正题，自从 umi mfsu 和 vite unbundle 打响 FE 高效开发第一枪， 淘系 rax 新增 swc 功能、swc 作者加入 vercel 麾下，nextjs 新版本默认 swc 打包， 再到阿里 ice2 新增 swc + esbuild 链路支持，swc 和 esbuild 逐渐入侵 FE 主工具流，暗示了一统天下的预兆。\n\nRust 和 Go 将 成为未来 JavaScript 基础建设的主流语言。\n\n * esbuild\n * webpack\n * gulp\n * rollup\n * swc\n * vite",normalizedContent:" * umi msfu\n * swc\n * esbuild\n * https://juejin.cn/post/6918927987056312327\n * https://blog.csdn.net/qq_21567385/article/details/121345739\n\n直入正题，自从 umi mfsu 和 vite unbundle 打响 fe 高效开发第一枪， 淘系 rax 新增 swc 功能、swc 作者加入 vercel 麾下，nextjs 新版本默认 swc 打包， 再到阿里 ice2 新增 swc + esbuild 链路支持，swc 和 esbuild 逐渐入侵 fe 主工具流，暗示了一统天下的预兆。\n\nrust 和 go 将 成为未来 javascript 基础建设的主流语言。\n\n * esbuild\n * webpack\n * gulp\n * rollup\n * swc\n * vite",charsets:{cjk:!0}},{title:"项目管理工具",frontmatter:{title:"项目管理工具",date:"2022-09-06T21:55:49.000Z",permalink:"/pages/2eb00d/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/12.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/04.%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.html",relativePath:"02.前端核心/12.项目构建/04.包管理工具.md",key:"v-4aa6d1ec",path:"/pages/2eb00d/",headers:[{level:2,title:"概览",slug:"概览",normalizedTitle:"概览",charIndex:2},{level:2,title:"npm",slug:"npm",normalizedTitle:"npm",charIndex:37},{level:3,title:"npm 常用命令",slug:"npm-常用命令",normalizedTitle:"npm 常用命令",charIndex:178},{level:3,title:"npm 高级命令",slug:"npm-高级命令",normalizedTitle:"npm 高级命令",charIndex:778},{level:2,title:"yarn",slug:"yarn",normalizedTitle:"yarn",charIndex:86},{level:2,title:"pnpm",slug:"pnpm",normalizedTitle:"pnpm",charIndex:103},{level:2,title:"nvm",slug:"nvm",normalizedTitle:"nvm",charIndex:17},{level:2,title:"nrm",slug:"nrm",normalizedTitle:"nrm",charIndex:44},{level:3,title:"npx 和 npm 之间的区别",slug:"npx-和-npm-之间的区别",normalizedTitle:"npx 和 npm 之间的区别",charIndex:1367}],headersStr:"概览 npm npm 常用命令 npm 高级命令 yarn pnpm nvm nrm npx 和 npm 之间的区别",content:"# 概览\n\n * node\n * nvm: node 的版本管理器\n * npm\n * nrm: npm 的源管理器，可以用来方便的切换 npm 源\n * cnpm\n * yarn: npm的升级版\n * pnpm: npm 和 yarn 的升级版\n * npx: 一个 npm 的包执行器。我们可以使用 npx 来执行各种命令。\n\n\n# npm\n\n\n# npm 常用命令\n\n# 初始化项目\nnpm init -y\n\nnpm install <options> # 根据 package.json 下载依赖\n-g # 更新本机 npm 的版本\n\nnpm uninstall <options> package_name\n--save, -S\n--save-dev, -D\n--global, -g\n\nnpm update package_name\n\n# 设置 npm 全局的配置（C:\\Users\\username\\.npmrc）\nnpm config list\nnpm config get registry\nnpm config set registry https://registry.npm.taobao.org/\n\n# 查看全局安装的一级包\nnpm list -g --depth=0\n\n# 查看某个包的最新版本\nnpm view package_name version\n# 查看某个包的所有发布版本\nnpm view package_name versions\n\n# 查看安装模块的安装路径\nnpm root -g\n\nnpm run dev/build/test\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# npm 高级命令\n\nnpm link\n\n\n1\n\n\n\n# yarn\n\nnpm install -g yarn\n\nyarn add\nyarn remove\n\nn\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# pnpm\n\n安装\n\nnpm install -g pnpm\n\n\n1\n\n\n\n# nvm\n\n安装\n\n到 github 上下载 .exe 文件进行安装即可，和安装 node 一样。\n\n# 需要以管理员运行 CMD\nnvm root\nnvm off\nnvm on\nnvm install <version>\nnvm install latest\nnvm uninstall <version>\nnvm list\nnvm list available\nnvm use <version>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# nrm\n\n# 安装\nnpm install -g nrm\n\n# 查看可选的源\nnrm ls\n\n# 切换源\nnrm use taobao\n\n# 添加自定义的源\nnrm add registry_name https://...\n\n# 删除源\nnrm del registry_name\n\n# 测试源\nnrm test registry_name\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# npx 和 npm 之间的区别\n\n主要特点：\n\n 1. 临时安装可执行依赖包，不用全局安装，不用担心长期的污染。\n 2. 可以执行依赖包中的命令，安装完成自动运行。\n 3. 自动加载node_modules中依赖包，不用指定$PATH。\n 4. 可以指定node版本、命令的版本，解决了不同项目使用不同版本的命令的问题。",normalizedContent:"# 概览\n\n * node\n * nvm: node 的版本管理器\n * npm\n * nrm: npm 的源管理器，可以用来方便的切换 npm 源\n * cnpm\n * yarn: npm的升级版\n * pnpm: npm 和 yarn 的升级版\n * npx: 一个 npm 的包执行器。我们可以使用 npx 来执行各种命令。\n\n\n# npm\n\n\n# npm 常用命令\n\n# 初始化项目\nnpm init -y\n\nnpm install <options> # 根据 package.json 下载依赖\n-g # 更新本机 npm 的版本\n\nnpm uninstall <options> package_name\n--save, -s\n--save-dev, -d\n--global, -g\n\nnpm update package_name\n\n# 设置 npm 全局的配置（c:\\users\\username\\.npmrc）\nnpm config list\nnpm config get registry\nnpm config set registry https://registry.npm.taobao.org/\n\n# 查看全局安装的一级包\nnpm list -g --depth=0\n\n# 查看某个包的最新版本\nnpm view package_name version\n# 查看某个包的所有发布版本\nnpm view package_name versions\n\n# 查看安装模块的安装路径\nnpm root -g\n\nnpm run dev/build/test\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# npm 高级命令\n\nnpm link\n\n\n1\n\n\n\n# yarn\n\nnpm install -g yarn\n\nyarn add\nyarn remove\n\nn\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# pnpm\n\n安装\n\nnpm install -g pnpm\n\n\n1\n\n\n\n# nvm\n\n安装\n\n到 github 上下载 .exe 文件进行安装即可，和安装 node 一样。\n\n# 需要以管理员运行 cmd\nnvm root\nnvm off\nnvm on\nnvm install <version>\nnvm install latest\nnvm uninstall <version>\nnvm list\nnvm list available\nnvm use <version>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# nrm\n\n# 安装\nnpm install -g nrm\n\n# 查看可选的源\nnrm ls\n\n# 切换源\nnrm use taobao\n\n# 添加自定义的源\nnrm add registry_name https://...\n\n# 删除源\nnrm del registry_name\n\n# 测试源\nnrm test registry_name\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# npx 和 npm 之间的区别\n\n主要特点：\n\n 1. 临时安装可执行依赖包，不用全局安装，不用担心长期的污染。\n 2. 可以执行依赖包中的命令，安装完成自动运行。\n 3. 自动加载node_modules中依赖包，不用指定$path。\n 4. 可以指定node版本、命令的版本，解决了不同项目使用不同版本的命令的问题。",charsets:{cjk:!0}},{title:"babel",frontmatter:{title:"babel",date:"2022-09-15T17:42:42.000Z",permalink:"/pages/40a7d0/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/12.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/05.babel.html",relativePath:"02.前端核心/12.项目构建/05.babel.md",key:"v-c065396a",path:"/pages/40a7d0/",headers:[{level:2,title:"polyfill",slug:"polyfill",normalizedTitle:"polyfill",charIndex:2}],headersStr:"polyfill",content:"# polyfill\n\n概念：用于实现浏览器并不支持原生 API 的代码。\n\nployfill 和 shim 的区别：\n\n * 一个 shim 是一个库，它将一个新的 API 引入到一个旧的环境中，而且仅靠旧环境中已有的手段实现。\n * 一个 polyfill 就是一个用在浏览器 API 上的 shim。",normalizedContent:"# polyfill\n\n概念：用于实现浏览器并不支持原生 api 的代码。\n\nployfill 和 shim 的区别：\n\n * 一个 shim 是一个库，它将一个新的 api 引入到一个旧的环境中，而且仅靠旧环境中已有的手段实现。\n * 一个 polyfill 就是一个用在浏览器 api 上的 shim。",charsets:{cjk:!0}},{title:"webpack",frontmatter:{title:"webpack",date:"2022-09-06T21:47:15.000Z",permalink:"/pages/340243/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/12.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/06.webpack.html",relativePath:"02.前端核心/12.项目构建/06.webpack.md",key:"v-779882c3",path:"/pages/340243/",headers:[{level:2,title:"入门打包工具",slug:"入门打包工具",normalizedTitle:"入门打包工具",charIndex:20}],headersStr:"入门打包工具",content:" * webpack 官网文档\n\n\n# 入门打包工具\n\n * 打包 js，tree shakeing，静态资源，打包到指定 es 版本的语法，打包 typescript，打包 css 预处理语言。\n * 打包工具自身的：启动一个本地服务器，用于测试；热更新。\n * ",normalizedContent:" * webpack 官网文档\n\n\n# 入门打包工具\n\n * 打包 js，tree shakeing，静态资源，打包到指定 es 版本的语法，打包 typescript，打包 css 预处理语言。\n * 打包工具自身的：启动一个本地服务器，用于测试；热更新。\n * ",charsets:{cjk:!0}},{title:"rollup",frontmatter:{title:"rollup",date:"2022-08-26T00:21:15.000Z",permalink:"/pages/5e472d/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/12.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/08.rollup.html",relativePath:"02.前端核心/12.项目构建/08.rollup.md",key:"v-2d7008b7",path:"/pages/5e472d/",headers:[{level:2,title:"rollup 安装",slug:"rollup-安装",normalizedTitle:"rollup 安装",charIndex:106},{level:2,title:"在 package.json 中添加 script",slug:"在-package-json-中添加-script",normalizedTitle:"在 package.json 中添加 script",charIndex:148},{level:2,title:"rollup.config.js",slug:"rollup-config-js",normalizedTitle:"rollup.config.js",charIndex:256},{level:2,title:"node-resolve / commonjs",slug:"node-resolve-commonjs",normalizedTitle:"node-resolve / commonjs",charIndex:1400},{level:2,title:"json",slug:"json",normalizedTitle:"json",charIndex:158},{level:2,title:"postcss",slug:"postcss",normalizedTitle:"postcss",charIndex:2069},{level:2,title:"babel",slug:"babel",normalizedTitle:"babel",charIndex:2652},{level:2,title:"vue3",slug:"vue3",normalizedTitle:"vue3",charIndex:3121},{level:2,title:"terser",slug:"terser",normalizedTitle:"terser",charIndex:3445},{level:2,title:"babel-node",slug:"babel-node",normalizedTitle:"babel-node",charIndex:3600},{level:2,title:"serve / livereload",slug:"serve-livereload",normalizedTitle:"serve / livereload",charIndex:3704}],headersStr:"rollup 安装 在 package.json 中添加 script rollup.config.js node-resolve / commonjs json postcss babel vue3 terser babel-node serve / livereload",content:" * rollup.js 中文文档\n * https://zhuanlan.zhihu.com/p/486644411\n * https://www.jianshu.com/p/28bf4acd0cf5\n\n\n# rollup 安装\n\nnpm install -g rollup\n\n\n1\n\n\n\n# 在 package.json 中添加 script\n\n> 个人习惯写 script 和配置文件，不习惯在命令行输入参数，记不住。\n\n{\n  \"scripts\": {\n    \"start\": \"rollup -wc rollup.config.js\",\n    \"build\": \"rollup -c rollup.config.js\"\n  }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n命令行参数见：https://www.rollupjs.com/guide/command-line-reference\n\n\n# rollup.config.js\n\nexport default { \n    input: 'src/index.js',\n    // output: [], // 可以为数组，同时配置多个\n    output: { \n        // \n        file: 'dist/bundle.js',\n        // 输出的文件可以还可以是amd，umd，cjs，es，iife\n        format: 'umd',\n        // 包名，format设置为iife/umd时，需要配置该项；配置后在同一页面上的其他脚本可以通过这个名字访问它\n        name: 'myGlobal',\n        // 对象形式的键值对，用于umd/iife包\n        globals: {\n            'vue': 'Vue',\n            'jquery': '$'\n        },\n        // 这个好像是用于 AMD 规范的\n        paths: {\n          'vue': 'https://cdn.jsdelivr.net/npm/vue@3.2.37/dist/vue.global.min.js',\n          'jquery': 'https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js'\n        },\n        // 为true创建单独的sourcemap文件，为inline，sourcemap作为数据URI附加到生成的output文件中\n        sourcemap: true,\n        banner: '/* this is banner */',\n        footer: '/* this is footer */',\n        intro: '/* this is intro */',\n        outro: '/* this is outer */'\n    },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# node-resolve / commonjs\n\n下载\n\nnpm install -D @rollup/plugin-node-resolve\nnpm install -D @rollup/plugin-commonjs\n\n\n1\n2\n\n\nrollup.config.js\n\nimport {nodeResolve} from '@rollup/plugin-node-resolve'\nimport commonjs from \"@rollup/plugin-commonjs\"\n\nexport default {\n    plugins: [\n        nodeResolve(),\n        commonjs()\n    ],\n    // 与node-resolve相对，指定打包时要排除的包\n    external: ['lodash', 'jquery', 'vue']\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n * node-resolver, 主要在打包时，可以将引用的第三方库打包进来\n * commonjs, rollup 在打包 CJS 时，需要引入\n\n\n# json\n\nnpm install -D @rollup/plugin-json\n\n\n1\n\n\nrollup.config.js\n\nimport json from \"@rollup/plugin-json\"\n\nexport default {\n    plugins: [json()]\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# postcss\n\n# postcss\nnpm install -D rollup-plugin-postcss\n# css加前缀\nnpm install -D autoprefixer\n# css压缩\nnpm install -D cssnano\n\n\n1\n2\n3\n4\n5\n6\n\n\nrollup.config.js\n\nimport postcss from 'rollup-plugin-postcss'\nimport autoprefixer from \"autoprefixer\"\nimport cssnano from 'cssnano'\n\nexport default {\n    plugins: [\n      postcss({\n        plugins: [\n          autoprefixer(),\n          cssnano()\n        ],\n        /** 抽离单独的css文件 */\n        extract: 'css/index.css',\n        // extensions: ['.css', '.scss', '.less', '.sass']\n      }),\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# babel\n\nnpm install -D @rollup/plugin-babel\nnpm install -D @babel/core\nnpm install -D @babel/preset-env\n\n\n1\n2\n3\n\n\nrollup.config.js\n\nimport babel from '@rollup/plugin-babel'\n\nexport default {\n    plugins: [\n      babel({\n        exclude: 'node_modules/**',\n        babelHelpers: 'bundled',\n        extensions: ['.js', '.jsx', '.ts', '.tsx']\n      }),\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nconfig files\n\nhttps://www.babeljs.cn/docs/config-files#configuration-file-types\n\n\n# vue3\n\nnpm install -D rollup-plugin-vue\nnpm install -D @vue/compiler-sfc\n\n\n1\n2\n\n\nimport vuePlugin from 'rollup-plugin-vue'\n\nexport default { \n    plugins: [\n      vuePlugin({\n        // postcssPlugins: [\n        //     autoprefixer(),\n        //     cssnano()\n        // ]\n      }),\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# terser\n\nnpm install -D rollup-plugin-terser\n\n\n1\n\n\nimport {terser} from \"rollup-plugin-terser\"\n\nexport default {\n    plugins: [terser()]\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# babel-node\n\n在 Node 环境下执行 ESM 规范文件。\n\nnpm install -D @babel/node\n\n\n1\n\n\n执行脚本：\n\nbabel-node file.js\n\n\n1\n\n\n\n# serve / livereload\n\nnpm install -D rollup-plugin-serve\nnpm install -D rollup-plugin-livereload\n\n\n1\n2\n\n\nimport serve from 'rollup-plugin-serve'\nimport livereload from 'rollup-plugin-livereload'\n\nexport default {\n    plugins: [\n        serve({\n          port: 8020,\n          // 服务器启动的文件夹，默认是项目根目录，需要在该文件下创建index.html\n          contentBase: ''\n        }),\n      // watch dist目录，当目录中的文件发生变化时，刷新页面\n      livereload('dist')\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n",normalizedContent:" * rollup.js 中文文档\n * https://zhuanlan.zhihu.com/p/486644411\n * https://www.jianshu.com/p/28bf4acd0cf5\n\n\n# rollup 安装\n\nnpm install -g rollup\n\n\n1\n\n\n\n# 在 package.json 中添加 script\n\n> 个人习惯写 script 和配置文件，不习惯在命令行输入参数，记不住。\n\n{\n  \"scripts\": {\n    \"start\": \"rollup -wc rollup.config.js\",\n    \"build\": \"rollup -c rollup.config.js\"\n  }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n命令行参数见：https://www.rollupjs.com/guide/command-line-reference\n\n\n# rollup.config.js\n\nexport default { \n    input: 'src/index.js',\n    // output: [], // 可以为数组，同时配置多个\n    output: { \n        // \n        file: 'dist/bundle.js',\n        // 输出的文件可以还可以是amd，umd，cjs，es，iife\n        format: 'umd',\n        // 包名，format设置为iife/umd时，需要配置该项；配置后在同一页面上的其他脚本可以通过这个名字访问它\n        name: 'myglobal',\n        // 对象形式的键值对，用于umd/iife包\n        globals: {\n            'vue': 'vue',\n            'jquery': '$'\n        },\n        // 这个好像是用于 amd 规范的\n        paths: {\n          'vue': 'https://cdn.jsdelivr.net/npm/vue@3.2.37/dist/vue.global.min.js',\n          'jquery': 'https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js'\n        },\n        // 为true创建单独的sourcemap文件，为inline，sourcemap作为数据uri附加到生成的output文件中\n        sourcemap: true,\n        banner: '/* this is banner */',\n        footer: '/* this is footer */',\n        intro: '/* this is intro */',\n        outro: '/* this is outer */'\n    },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# node-resolve / commonjs\n\n下载\n\nnpm install -d @rollup/plugin-node-resolve\nnpm install -d @rollup/plugin-commonjs\n\n\n1\n2\n\n\nrollup.config.js\n\nimport {noderesolve} from '@rollup/plugin-node-resolve'\nimport commonjs from \"@rollup/plugin-commonjs\"\n\nexport default {\n    plugins: [\n        noderesolve(),\n        commonjs()\n    ],\n    // 与node-resolve相对，指定打包时要排除的包\n    external: ['lodash', 'jquery', 'vue']\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n * node-resolver, 主要在打包时，可以将引用的第三方库打包进来\n * commonjs, rollup 在打包 cjs 时，需要引入\n\n\n# json\n\nnpm install -d @rollup/plugin-json\n\n\n1\n\n\nrollup.config.js\n\nimport json from \"@rollup/plugin-json\"\n\nexport default {\n    plugins: [json()]\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# postcss\n\n# postcss\nnpm install -d rollup-plugin-postcss\n# css加前缀\nnpm install -d autoprefixer\n# css压缩\nnpm install -d cssnano\n\n\n1\n2\n3\n4\n5\n6\n\n\nrollup.config.js\n\nimport postcss from 'rollup-plugin-postcss'\nimport autoprefixer from \"autoprefixer\"\nimport cssnano from 'cssnano'\n\nexport default {\n    plugins: [\n      postcss({\n        plugins: [\n          autoprefixer(),\n          cssnano()\n        ],\n        /** 抽离单独的css文件 */\n        extract: 'css/index.css',\n        // extensions: ['.css', '.scss', '.less', '.sass']\n      }),\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# babel\n\nnpm install -d @rollup/plugin-babel\nnpm install -d @babel/core\nnpm install -d @babel/preset-env\n\n\n1\n2\n3\n\n\nrollup.config.js\n\nimport babel from '@rollup/plugin-babel'\n\nexport default {\n    plugins: [\n      babel({\n        exclude: 'node_modules/**',\n        babelhelpers: 'bundled',\n        extensions: ['.js', '.jsx', '.ts', '.tsx']\n      }),\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nconfig files\n\nhttps://www.babeljs.cn/docs/config-files#configuration-file-types\n\n\n# vue3\n\nnpm install -d rollup-plugin-vue\nnpm install -d @vue/compiler-sfc\n\n\n1\n2\n\n\nimport vueplugin from 'rollup-plugin-vue'\n\nexport default { \n    plugins: [\n      vueplugin({\n        // postcssplugins: [\n        //     autoprefixer(),\n        //     cssnano()\n        // ]\n      }),\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# terser\n\nnpm install -d rollup-plugin-terser\n\n\n1\n\n\nimport {terser} from \"rollup-plugin-terser\"\n\nexport default {\n    plugins: [terser()]\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# babel-node\n\n在 node 环境下执行 esm 规范文件。\n\nnpm install -d @babel/node\n\n\n1\n\n\n执行脚本：\n\nbabel-node file.js\n\n\n1\n\n\n\n# serve / livereload\n\nnpm install -d rollup-plugin-serve\nnpm install -d rollup-plugin-livereload\n\n\n1\n2\n\n\nimport serve from 'rollup-plugin-serve'\nimport livereload from 'rollup-plugin-livereload'\n\nexport default {\n    plugins: [\n        serve({\n          port: 8020,\n          // 服务器启动的文件夹，默认是项目根目录，需要在该文件下创建index.html\n          contentbase: ''\n        }),\n      // watch dist目录，当目录中的文件发生变化时，刷新页面\n      livereload('dist')\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n",charsets:{cjk:!0}},{title:"vite",frontmatter:{title:"vite",date:"2022-09-14T22:31:25.000Z",permalink:"/pages/db215c/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/12.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/10.vite.html",relativePath:"02.前端核心/12.项目构建/10.vite.md",key:"v-ebbc19d2",path:"/pages/db215c/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"esbuild",frontmatter:{title:"esbuild",date:"2022-09-14T22:31:53.000Z",permalink:"/pages/c14805/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/12.%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/12.esbuild.html",relativePath:"02.前端核心/12.项目构建/12.esbuild.md",key:"v-63e31f32",path:"/pages/c14805/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"HTTP",frontmatter:{title:"HTTP",date:"2022-07-27T23:38:01.000Z",permalink:"/pages/008666/"},regularPath:"/02.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83/14.HTTP.html",relativePath:"02.前端核心/14.HTTP.md",key:"v-432e9239",path:"/pages/008666/",headers:[{level:2,title:"Web Socket",slug:"web-socket",normalizedTitle:"web socket",charIndex:2},{level:2,title:"Web Worker",slug:"web-worker",normalizedTitle:"web worker",charIndex:1178},{level:2,title:"Service Worker",slug:"service-worker",normalizedTitle:"service worker",charIndex:1498},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:1667}],headersStr:"Web Socket Web Worker Service Worker 参考文档",content:"# Web Socket\n\nWeb Socket是基于TCP协议的一个全双工通信协议，HTML5的新特性。\n\n先了解以下之前通信协议的弊端。以前，在客户端和浏览器之间通信时，只能是客户端发请求之后，服务器才有所应答。 如果服务器有新数据的话，不能够主动地发送给客户端，只能是客户端进行：\n\n * 轮询：客户端不断发新请求给服务器，服务器应答一次之后就断开连接，这就需要不断发起新请求，新连接，造成资源的浪费；\n * 长轮询：客户端发送请求后，就挂在那里，等到服务器有新数据之后，返回新数据，连接关闭。弊端在于服务器需要hold住连接，造成资源浪费，并且客户端收到资源后需要发送新请求。\n\n而Web Socket的好处就是在于服务器可以主动发送资源给客户端，而且只需要一次连接就会是持久连接（这样资源消耗就会少一些）。 有了Web Socket连接，服务器可以源源不断地发送数据给客户端吗，且不需要每次发送数据都进行验证连接信息。具体的实现方法为：\n\n1、客户端在首次发送请求时需要这么写报文：\n\nGET / HTTP/1.1\n// Upgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Protocol: chat, superchat\nHost: example.com\nOrigin: http://example.com\nSec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==\nSec-WebSocket-Version: 13\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n重点在于需要添加上面的粗体内容，Upgrade告诉服务器你想要创建一个websocket连接， 然后Sec-WebSocket-Key中的一串字符串会发送到服务器端，服务器接收到之后，如果它支持WebSocket连接， 那么它就会对其加上特殊字符串之后，进行编码，放入Sec-WebSocket-Accept中返回， 代表自己是支持Web Socket的。而Sec-WebSocket-Protocol代表客户端希望采用的Web Socket协议， Sec-WebSocket-Version代表客户端采用的Web Socket版本号。\n\n2、服务器端返回的报文如下：\n\nHTTP/1.1 101 Switching Protocols\nUpgrade: websocket\nConnection:Upgrade\nSec-WebSocket-Accept: HSmrc0sMlYUkAGmm5OPpG2HaGWk=\nSec-WebSocket-Protocol: chat\nSec-WebSocket-Location: ws://example.com/\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Web Worker\n\nWeb Worker的作用：就是为JavaScript创造多线程环境，允许主线程创建Worker线程，将一些任务分配给后者运行。\n\n在主线程运行的同时，Worker线程在后台运行，两个互不干扰。等到Worker线程完成计算任务，再把结果返回给主线程。\n\n这样的好处使，一些计算密集型或高延迟的任务，被Worker线程负担了，主线程（通常负责UI交互）就会很流畅， 不会被阻塞或拖慢。 Worker线程一旦新建成功，就会始终运行，不会被主线程上的活动（比如用户点击按钮、提交表单）打断。 这样有利于随时响应主线程的通信。但是，这也造成了Worker比较耗费资源、不应该过度使用，而且一旦使用完毕，就应该关闭。\n\n\n# Service Worker\n\n * Service Worker实际上是浏览器和服务器之间的代理服务器，它最大的特点是在页面中注册并安装成功，运行于浏览器后台，不受页面刷新的影响，可以监听和拦截作用域范围内所有页面的HTTP请求。\n * Service Worker的目的在于离线缓存，转发请求和网络代理。它有自己的生命周期。\n\n\n# 参考文档\n\n 1. HTTP 文件上传过程",normalizedContent:"# web socket\n\nweb socket是基于tcp协议的一个全双工通信协议，html5的新特性。\n\n先了解以下之前通信协议的弊端。以前，在客户端和浏览器之间通信时，只能是客户端发请求之后，服务器才有所应答。 如果服务器有新数据的话，不能够主动地发送给客户端，只能是客户端进行：\n\n * 轮询：客户端不断发新请求给服务器，服务器应答一次之后就断开连接，这就需要不断发起新请求，新连接，造成资源的浪费；\n * 长轮询：客户端发送请求后，就挂在那里，等到服务器有新数据之后，返回新数据，连接关闭。弊端在于服务器需要hold住连接，造成资源浪费，并且客户端收到资源后需要发送新请求。\n\n而web socket的好处就是在于服务器可以主动发送资源给客户端，而且只需要一次连接就会是持久连接（这样资源消耗就会少一些）。 有了web socket连接，服务器可以源源不断地发送数据给客户端吗，且不需要每次发送数据都进行验证连接信息。具体的实现方法为：\n\n1、客户端在首次发送请求时需要这么写报文：\n\nget / http/1.1\n// upgrade: websocket\nconnection: upgrade\nsec-websocket-protocol: chat, superchat\nhost: example.com\norigin: http://example.com\nsec-websocket-key: sn9crrp/n9ndmgdcy2vjfq==\nsec-websocket-version: 13\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n重点在于需要添加上面的粗体内容，upgrade告诉服务器你想要创建一个websocket连接， 然后sec-websocket-key中的一串字符串会发送到服务器端，服务器接收到之后，如果它支持websocket连接， 那么它就会对其加上特殊字符串之后，进行编码，放入sec-websocket-accept中返回， 代表自己是支持web socket的。而sec-websocket-protocol代表客户端希望采用的web socket协议， sec-websocket-version代表客户端采用的web socket版本号。\n\n2、服务器端返回的报文如下：\n\nhttp/1.1 101 switching protocols\nupgrade: websocket\nconnection:upgrade\nsec-websocket-accept: hsmrc0smlyukagmm5oppg2hagwk=\nsec-websocket-protocol: chat\nsec-websocket-location: ws://example.com/\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# web worker\n\nweb worker的作用：就是为javascript创造多线程环境，允许主线程创建worker线程，将一些任务分配给后者运行。\n\n在主线程运行的同时，worker线程在后台运行，两个互不干扰。等到worker线程完成计算任务，再把结果返回给主线程。\n\n这样的好处使，一些计算密集型或高延迟的任务，被worker线程负担了，主线程（通常负责ui交互）就会很流畅， 不会被阻塞或拖慢。 worker线程一旦新建成功，就会始终运行，不会被主线程上的活动（比如用户点击按钮、提交表单）打断。 这样有利于随时响应主线程的通信。但是，这也造成了worker比较耗费资源、不应该过度使用，而且一旦使用完毕，就应该关闭。\n\n\n# service worker\n\n * service worker实际上是浏览器和服务器之间的代理服务器，它最大的特点是在页面中注册并安装成功，运行于浏览器后台，不受页面刷新的影响，可以监听和拦截作用域范围内所有页面的http请求。\n * service worker的目的在于离线缓存，转发请求和网络代理。它有自己的生命周期。\n\n\n# 参考文档\n\n 1. http 文件上传过程",charsets:{cjk:!0}},{title:"JS与Node异同",frontmatter:{title:"JS与Node异同",date:"2022-07-28T00:25:34.000Z",permalink:"/pages/ca7770/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/02.NodeJS/02.JS%E4%B8%8ENode%E5%BC%82%E5%90%8C.html",relativePath:"04.前端框架/02.NodeJS/02.JS与Node异同.md",key:"v-6d47f78a",path:"/pages/ca7770/",headers:[{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:2},{level:2,title:"Nodejs",slug:"nodejs",normalizedTitle:"nodejs",charIndex:99},{level:2,title:"NodeJS 特点",slug:"nodejs-特点",normalizedTitle:"nodejs 特点",charIndex:212},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:246}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"JavaScript Nodejs NodeJS 特点 参考文档",content:"# JavaScript\n\n\n\n * ECMAScript（语言基础，如：语法、数据类型结构以及一些内置对象）\n * BOM（一些操作浏览器的方法）\n * DOM（一些操作页面元素的方法）\n\n\n# Nodejs\n\n * ECMAScript (语言基础，如：语法、数据类型结构以及一些内置对象)\n * os (操作系统)\n * file (文件系统)\n * net (网络系统)\n * database (数据库)\n\n\n# NodeJS 特点\n\n事件驱动、异步处理、非I/O阻塞等。\n\n\n# 参考文档\n\n前端Javascript与Nodejs的异同",normalizedContent:"# javascript\n\n\n\n * ecmascript（语言基础，如：语法、数据类型结构以及一些内置对象）\n * bom（一些操作浏览器的方法）\n * dom（一些操作页面元素的方法）\n\n\n# nodejs\n\n * ecmascript (语言基础，如：语法、数据类型结构以及一些内置对象)\n * os (操作系统)\n * file (文件系统)\n * net (网络系统)\n * database (数据库)\n\n\n# nodejs 特点\n\n事件驱动、异步处理、非i/o阻塞等。\n\n\n# 参考文档\n\n前端javascript与nodejs的异同",charsets:{cjk:!0}},{title:"Vue笔记",frontmatter:{title:"Vue笔记",date:"2022-07-28T00:28:38.000Z",permalink:"/pages/c68f27/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/04.Vue/02.Vue%E7%AC%94%E8%AE%B0.html",relativePath:"04.前端框架/04.Vue/02.Vue笔记.md",key:"v-cc055e2c",path:"/pages/c68f27/",headers:[{level:2,title:"Vue 双向绑定原理",slug:"vue-双向绑定原理",normalizedTitle:"vue 双向绑定原理",charIndex:2},{level:2,title:"Vue Render",slug:"vue-render",normalizedTitle:"vue render",charIndex:19},{level:2,title:"Vue项目打包注意事项",slug:"vue项目打包注意事项",normalizedTitle:"vue项目打包注意事项",charIndex:36},{level:3,title:"1.通过 external 来打包",slug:"_1-通过-external-来打包",normalizedTitle:"1.通过 external 来打包",charIndex:52},{level:3,title:"2.使用 cdn 引用 css",slug:"_2-使用-cdn-引用-css",normalizedTitle:"2.使用 cdn 引用 css",charIndex:97},{level:3,title:"3.开启文件 Gzip 压缩",slug:"_3-开启文件-gzip-压缩",normalizedTitle:"3.开启文件 gzip 压缩",charIndex:145},{level:3,title:"4.配置 https 服务",slug:"_4-配置-https-服务",normalizedTitle:"4.配置 https 服务",charIndex:283},{level:3,title:"5.使用 pm2 管理应用",slug:"_5-使用-pm2-管理应用",normalizedTitle:"5.使用 pm2 管理应用",charIndex:607}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"Vue 双向绑定原理 Vue Render Vue项目打包注意事项 1.通过 external 来打包 2.使用 cdn 引用 css 3.开启文件 Gzip 压缩 4.配置 https 服务 5.使用 pm2 管理应用",content:"# Vue 双向绑定原理\n\n\n\n\n# Vue Render\n\n\n\n\n# Vue项目打包注意事项\n\n\n# 1.通过 external 来打包\n\n减少不必要的文件压缩，使用CDN引用即可。\n\n\n# 2.使用 cdn 引用 css\n\n在index.html里引入样式文件（通过CDN）。\n\n\n# 3.开启文件 Gzip 压缩\n\n// app.js\nconst compression = require('compression');\napp.use(compression());\n//app.use(express.static());\n\n\n1\n2\n3\n4\n\n\n\n# 4.配置 https 服务\n\n 1. 申请SSL证书\n 2. 下载证书（full_chain.pem公钥、private.key私钥）\n 3. 配置中间件（示例如下）：\n\n// app.js\nconst https = require('https');\nconst fs = require('fs');\nconst options = {\ncert: fs.readFileSync('./full_chain.pem'),\nkey: fs.readFileSync('./private.key')\n}\nhttps.createServer(options, app).listen(443);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 5.使用 pm2 管理应用\n\n作用：批量管理后台应用，不用多开命令行界面。\n\n使用步骤：\n\n 1. 在服务器安装pm2：npm i pm2 -g\n 2. 启动项目：pm2 start 脚本 --name 自定义名称\n 3. 查看运行项目：pm2 ls",normalizedContent:"# vue 双向绑定原理\n\n\n\n\n# vue render\n\n\n\n\n# vue项目打包注意事项\n\n\n# 1.通过 external 来打包\n\n减少不必要的文件压缩，使用cdn引用即可。\n\n\n# 2.使用 cdn 引用 css\n\n在index.html里引入样式文件（通过cdn）。\n\n\n# 3.开启文件 gzip 压缩\n\n// app.js\nconst compression = require('compression');\napp.use(compression());\n//app.use(express.static());\n\n\n1\n2\n3\n4\n\n\n\n# 4.配置 https 服务\n\n 1. 申请ssl证书\n 2. 下载证书（full_chain.pem公钥、private.key私钥）\n 3. 配置中间件（示例如下）：\n\n// app.js\nconst https = require('https');\nconst fs = require('fs');\nconst options = {\ncert: fs.readfilesync('./full_chain.pem'),\nkey: fs.readfilesync('./private.key')\n}\nhttps.createserver(options, app).listen(443);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 5.使用 pm2 管理应用\n\n作用：批量管理后台应用，不用多开命令行界面。\n\n使用步骤：\n\n 1. 在服务器安装pm2：npm i pm2 -g\n 2. 启动项目：pm2 start 脚本 --name 自定义名称\n 3. 查看运行项目：pm2 ls",charsets:{cjk:!0}},{title:"vuepress搭建博客",frontmatter:{title:"vuepress搭建博客",date:"2022-07-28T00:28:53.000Z",permalink:"/pages/38a877/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/04.Vue/04.vuepress%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2.html",relativePath:"04.前端框架/04.Vue/04.vuepress搭建博客.md",key:"v-90869c28",path:"/pages/38a877/",headers:[{level:2,title:"部署",slug:"部署",normalizedTitle:"部署",charIndex:416},{level:2,title:"GitHub Actions",slug:"github-actions",normalizedTitle:"github actions",charIndex:1198}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"部署 GitHub Actions",content:"工具\n\nvuepress\n\n> vuepress 是 Vue 官方提供的一个静态网站生成工具库，通过一些配置即可完成一个精美的博客网站。\n\n主题\n\nvuepress-theme-vdoing\n\n> 由于 vuepress 原生的配置可能过于复杂，vuepress-theme-vdoing在此基础上进异步封装， 使得真正能够达到开箱即用的程度。 此外，vdoing 提供了更加精美的 Markdown 容器。\n\nhttps://markmap.js.org/ - 创建可插入的思维导图\n\nhttps://shields.io/ - 创建可插入的图标\n\nbluebird graphgl graphgl-tag promise-limit\n\nnpm-check-updates vuepress-plugin-feed\n\ncodemirror diff-match-patch sortablejs vuedraggable\n\n\n# 部署\n\n后续说一下，如何将博客部署到 github pages 上，并使用 github actions 自动更新网站。\n\n真的是搞得头皮发麻。还有些流程不会，不过好在想要的效果实现了。\n\n在本地编写完博客后，直接运行脚本即可，网站过一会就同步了。\n\n# \nname: Build And Deploy\non: [push]\njobs: \n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@master\n        \n      - name: vuepress-deploy\n        uses: jenkey2011/vuepress-deploy@master\n        env: \n          # github 的 token\n          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}\n          # 目标仓库，默认是当前仓库\n          TARGET_REPO: username/repo\n          # 目标分支，默认是 gh-pages\n          TARGET_BRANCH: master\n          # 构建脚本\n          BUILD_SRCIPT: yarn && yarn build\n          # 构建产物的目录\n          BUILD_DIR: blog/.vuepress/dist/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# GitHub Actions\n\n * https://blog.csdn.net/xixihahalelehehe/article/details/120178280\n * https://github.com/actions\n * https://github.com/jenkey2011/vuepress-deploy",normalizedContent:"工具\n\nvuepress\n\n> vuepress 是 vue 官方提供的一个静态网站生成工具库，通过一些配置即可完成一个精美的博客网站。\n\n主题\n\nvuepress-theme-vdoing\n\n> 由于 vuepress 原生的配置可能过于复杂，vuepress-theme-vdoing在此基础上进异步封装， 使得真正能够达到开箱即用的程度。 此外，vdoing 提供了更加精美的 markdown 容器。\n\nhttps://markmap.js.org/ - 创建可插入的思维导图\n\nhttps://shields.io/ - 创建可插入的图标\n\nbluebird graphgl graphgl-tag promise-limit\n\nnpm-check-updates vuepress-plugin-feed\n\ncodemirror diff-match-patch sortablejs vuedraggable\n\n\n# 部署\n\n后续说一下，如何将博客部署到 github pages 上，并使用 github actions 自动更新网站。\n\n真的是搞得头皮发麻。还有些流程不会，不过好在想要的效果实现了。\n\n在本地编写完博客后，直接运行脚本即可，网站过一会就同步了。\n\n# \nname: build and deploy\non: [push]\njobs: \n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: checkout\n        uses: actions/checkout@master\n        \n      - name: vuepress-deploy\n        uses: jenkey2011/vuepress-deploy@master\n        env: \n          # github 的 token\n          access_token: ${{ secrets.access_token }}\n          # 目标仓库，默认是当前仓库\n          target_repo: username/repo\n          # 目标分支，默认是 gh-pages\n          target_branch: master\n          # 构建脚本\n          build_srcipt: yarn && yarn build\n          # 构建产物的目录\n          build_dir: blog/.vuepress/dist/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# github actions\n\n * https://blog.csdn.net/xixihahalelehehe/article/details/120178280\n * https://github.com/actions\n * https://github.com/jenkey2011/vuepress-deploy",charsets:{cjk:!0}},{title:"NG基础",frontmatter:{title:"NG基础",date:"2022-07-28T00:29:15.000Z",permalink:"/pages/9b2b82/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/06.Angular/02.NG%E5%9F%BA%E7%A1%80.html",relativePath:"04.前端框架/06.Angular/02.NG基础.md",key:"v-1eb5c8ce",path:"/pages/9b2b82/",headers:[{level:2,title:"知识点",slug:"知识点",normalizedTitle:"知识点",charIndex:2},{level:3,title:"基础语法",slug:"基础语法",normalizedTitle:"基础语法",charIndex:10},{level:3,title:"属性、类、样式相关",slug:"属性、类、样式相关",normalizedTitle:"属性、类、样式相关",charIndex:94},{level:3,title:"DI相关",slug:"di相关",normalizedTitle:"di相关",charIndex:477},{level:3,title:"APP_INITIALIZER",slug:"app-initializer",normalizedTitle:"app_initializer",charIndex:524},{level:2,title:"使用@ViewChild、@ContentChild访问DOM、组件和指令",slug:"使用-viewchild、-contentchild访问dom、组件和指令",normalizedTitle:"使用@viewchild、@contentchild访问dom、组件和指令",charIndex:1033},{level:3,title:"selector",slug:"selector",normalizedTitle:"selector",charIndex:1144},{level:3,title:"read",slug:"read",normalizedTitle:"read",charIndex:1537},{level:2,title:"表单相关",slug:"表单相关",normalizedTitle:"表单相关",charIndex:1834},{level:2,title:"NG动画",slug:"ng动画",normalizedTitle:"ng动画",charIndex:2364},{level:3,title:"动画相关API",slug:"动画相关api",normalizedTitle:"动画相关api",charIndex:2427},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:2931}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"知识点 基础语法 属性、类、样式相关 DI相关 APP_INITIALIZER 使用@ViewChild、@ContentChild访问DOM、组件和指令 selector read 表单相关 NG动画 动画相关API 参考文档",content:"# 知识点\n\n\n# 基础语法\n\n * Attribute 绑定、类绑定和样式绑定\n * $any()\n * 结构型指令简写形式\n * 动态组件加载\n * TypeScript配置\n\n\n# 属性、类、样式相关\n\n# :host / :host-content 参考\n\n语法： :host(标识符)\n\n:host 一个组件可能被多调用，这时我们如果需要设置不同样式怎么办呢？好，我们可以为宿主添加一些标识符。\n\n语法：:host-content(标识符)\n\n:host-content这个与 :host 功能类似，这个是依据宿主元素的父级元素的一些限制条件来设置样式。\n\n# ViewEncapsulation 参考\n\n * ViewEncapsulation.Emulated：只进不出，全局样式能进来，组件样式出不去。\n * ViewEncapsulation.None：能进能出，此时组件的样式是全局生效的，注意与其它组件发生样式冲突。\n * ViewEncapsulation.ShadowDom：不进不出，组件样式出不去，全局样式进不来。\n\n\n# DI相关\n\n依赖注入\n\n多级注入器\n\nModuleInjector 是采用单例模式。\n\n\n# APP_INITIALIZER\n\n有时我们希望在应用程序启动后立即运行某些代码，例如：加载一些设置以确定应用程序的各个部分的显示方式。\n\n假设这额外设置是异步加载的，这可能会有问题，因为在异步请求还没有响应回来的时候，应用程序继续引导过程。\n\nAngular 为我们提供了一个简单的解决方案。我们可以访问一个 APP_INITIALIZER 令牌，\n\n我们可以用它来添加作为应用初始化过程的一部分调用的函数。\n\n这些函数可以返回一个 Promise，因此我们也可以将它们用于异步事件。\n\nfunction onInit(settingService: SettingService) {\n\treturn () => settingservice.getSetting();\n}\n\n@NgModule({\n\tprovides: [\n  \tSettingService,\n    { provide: APP_INITIALIZER, useFactory: onInit, deps: [SettingService], multi: true }\n  ]\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 使用@ViewChild、@ContentChild访问DOM、组件和指令\n\n> 1、 官网相关参数说明 2、 Angular 正确使用 @ViewChild、@ViewChildren 访问 DOM、组件、指令\n\n\n# selector\n\n用于查询的指令类型或名字。\n\n支持的选择器有：\n\n * 任何带有 @Component 或 @Directive 装饰器的类\n * 字符串形式的模板引用变量（比如可以使用 @ViewChild('cmp') 来查询 <my-component #cmp></my-component>）\n * 组件树中任何当前组件的子组件所定义的提供者（比如 @ViewChild(SomeService) someService: SomeService）\n * 【模糊】任何通过字符串令牌定义的提供者（比如 @ViewChild('someToken') someTokenVal: any）\n * TemplateRef（比如可以用 @ViewChild(TemplateRef) template; 来查询 <ng-template></ng-template>）\n\n\n# read\n\n从查询到的元素中读取另一个令牌。\n\nread 支持的类型有：\n\n * 任何带有 @Component 或 @Directive 装饰器的类\n * 被 selector 匹配的组件内的所有 provider\n * 【模糊】任何通过 string token 注入的 provider\n * TemplateRef、ElementRef 和 ViewContainerRef（这里非常主要，与动态组件有很大关联）\n\n说明\n\n上述两个【模糊】地方的内容，经测试，也就是子组件内的 provider，只不过是通过 string token 提供的。\n\n暂时不知道是否还有其它情况。\n\n\n# 表单相关\n\n下面是 FormControl 继承 AbstractControl 后，重写的 setValue：\n\nsetValue(value, {\n    onltSelf: true,  // 当前操作只会影响空间本身的验证状态，不会影响父节点。默认为false\n    emitEvent: true,  // 当前操作会发送一个valuesChanges事件。默认为true（它受updateValueAndValidity影响）。\n    emitModelToViewChange: true, // 当前操作会发送onChange事件通知视图。默认为true。\n    emitViewToModel: true, // 会触发ngModelChange事件更新模型。默认为true。\n});\n\n\n1\n2\n3\n4\n5\n6\n\n\nFormBuilder.group() 的一种写法\n\nconst formGroup = new Formbuilder.group({\n    formControlName: [null, validators, asyncValidators], // 一种写法，我在官网没找到\n})\n\n\n1\n2\n3\n\n\n\n# NG动画\n\n动画：是从一个状态到另一个状态的过渡效果。\n\n这个过渡效果和CSS动画属性差不多。\n\n官网动画部分：动画\n\n\n# 动画相关API\n\ntrigger()  // 定义一个动画\nstate()  // 定义一种状态\nstyle()  // 设置一种样式\ntransition()  // 定义两个状态之间的过渡效果\nanimate()  // 设置过渡效果属性\n\nkeyframes()  // 关键帧动画\ngroup()  // 用于并行执行多个动画步骤\nquery()  // 匹配CSS选择器，只为匹配到的元素使用动画\nsequence()  // 用于逐个顺序执行多个动画步骤（不使用这个，就直接按顺序写动画，好像效果一样）\nstagger()  // 用于为多元素动画应用级联延迟\nanimation()  // 定义一个可复用的动画（可传参去变更属性的动画）\nuseAnimation()  // 使用一个可复用的动画\nanimateChild()  // 允许\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n转场中几种特殊状态：\n\n * :enter | void => *\n * :leave | * => void\n * :increment\n * :decrement\n\n\n# 参考文档\n\n 1. 了解Angular Ivy: Incremental DOM 和 Virtual DOM",normalizedContent:"# 知识点\n\n\n# 基础语法\n\n * attribute 绑定、类绑定和样式绑定\n * $any()\n * 结构型指令简写形式\n * 动态组件加载\n * typescript配置\n\n\n# 属性、类、样式相关\n\n# :host / :host-content 参考\n\n语法： :host(标识符)\n\n:host 一个组件可能被多调用，这时我们如果需要设置不同样式怎么办呢？好，我们可以为宿主添加一些标识符。\n\n语法：:host-content(标识符)\n\n:host-content这个与 :host 功能类似，这个是依据宿主元素的父级元素的一些限制条件来设置样式。\n\n# viewencapsulation 参考\n\n * viewencapsulation.emulated：只进不出，全局样式能进来，组件样式出不去。\n * viewencapsulation.none：能进能出，此时组件的样式是全局生效的，注意与其它组件发生样式冲突。\n * viewencapsulation.shadowdom：不进不出，组件样式出不去，全局样式进不来。\n\n\n# di相关\n\n依赖注入\n\n多级注入器\n\nmoduleinjector 是采用单例模式。\n\n\n# app_initializer\n\n有时我们希望在应用程序启动后立即运行某些代码，例如：加载一些设置以确定应用程序的各个部分的显示方式。\n\n假设这额外设置是异步加载的，这可能会有问题，因为在异步请求还没有响应回来的时候，应用程序继续引导过程。\n\nangular 为我们提供了一个简单的解决方案。我们可以访问一个 app_initializer 令牌，\n\n我们可以用它来添加作为应用初始化过程的一部分调用的函数。\n\n这些函数可以返回一个 promise，因此我们也可以将它们用于异步事件。\n\nfunction oninit(settingservice: settingservice) {\n\treturn () => settingservice.getsetting();\n}\n\n@ngmodule({\n\tprovides: [\n  \tsettingservice,\n    { provide: app_initializer, usefactory: oninit, deps: [settingservice], multi: true }\n  ]\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 使用@viewchild、@contentchild访问dom、组件和指令\n\n> 1、 官网相关参数说明 2、 angular 正确使用 @viewchild、@viewchildren 访问 dom、组件、指令\n\n\n# selector\n\n用于查询的指令类型或名字。\n\n支持的选择器有：\n\n * 任何带有 @component 或 @directive 装饰器的类\n * 字符串形式的模板引用变量（比如可以使用 @viewchild('cmp') 来查询 <my-component #cmp></my-component>）\n * 组件树中任何当前组件的子组件所定义的提供者（比如 @viewchild(someservice) someservice: someservice）\n * 【模糊】任何通过字符串令牌定义的提供者（比如 @viewchild('sometoken') sometokenval: any）\n * templateref（比如可以用 @viewchild(templateref) template; 来查询 <ng-template></ng-template>）\n\n\n# read\n\n从查询到的元素中读取另一个令牌。\n\nread 支持的类型有：\n\n * 任何带有 @component 或 @directive 装饰器的类\n * 被 selector 匹配的组件内的所有 provider\n * 【模糊】任何通过 string token 注入的 provider\n * templateref、elementref 和 viewcontainerref（这里非常主要，与动态组件有很大关联）\n\n说明\n\n上述两个【模糊】地方的内容，经测试，也就是子组件内的 provider，只不过是通过 string token 提供的。\n\n暂时不知道是否还有其它情况。\n\n\n# 表单相关\n\n下面是 formcontrol 继承 abstractcontrol 后，重写的 setvalue：\n\nsetvalue(value, {\n    onltself: true,  // 当前操作只会影响空间本身的验证状态，不会影响父节点。默认为false\n    emitevent: true,  // 当前操作会发送一个valueschanges事件。默认为true（它受updatevalueandvalidity影响）。\n    emitmodeltoviewchange: true, // 当前操作会发送onchange事件通知视图。默认为true。\n    emitviewtomodel: true, // 会触发ngmodelchange事件更新模型。默认为true。\n});\n\n\n1\n2\n3\n4\n5\n6\n\n\nformbuilder.group() 的一种写法\n\nconst formgroup = new formbuilder.group({\n    formcontrolname: [null, validators, asyncvalidators], // 一种写法，我在官网没找到\n})\n\n\n1\n2\n3\n\n\n\n# ng动画\n\n动画：是从一个状态到另一个状态的过渡效果。\n\n这个过渡效果和css动画属性差不多。\n\n官网动画部分：动画\n\n\n# 动画相关api\n\ntrigger()  // 定义一个动画\nstate()  // 定义一种状态\nstyle()  // 设置一种样式\ntransition()  // 定义两个状态之间的过渡效果\nanimate()  // 设置过渡效果属性\n\nkeyframes()  // 关键帧动画\ngroup()  // 用于并行执行多个动画步骤\nquery()  // 匹配css选择器，只为匹配到的元素使用动画\nsequence()  // 用于逐个顺序执行多个动画步骤（不使用这个，就直接按顺序写动画，好像效果一样）\nstagger()  // 用于为多元素动画应用级联延迟\nanimation()  // 定义一个可复用的动画（可传参去变更属性的动画）\nuseanimation()  // 使用一个可复用的动画\nanimatechild()  // 允许\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n转场中几种特殊状态：\n\n * :enter | void => *\n * :leave | * => void\n * :increment\n * :decrement\n\n\n# 参考文档\n\n 1. 了解angular ivy: incremental dom 和 virtual dom",charsets:{cjk:!0}},{title:"方法执行顺序",frontmatter:{title:"方法执行顺序",date:"2022-07-28T00:29:33.000Z",permalink:"/pages/8b348e/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/06.Angular/04.%E6%96%B9%E6%B3%95%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.html",relativePath:"04.前端框架/06.Angular/04.方法执行顺序.md",key:"v-738f4df7",path:"/pages/8b348e/",headers:[{level:2,title:"搭建环境",slug:"搭建环境",normalizedTitle:"搭建环境",charIndex:54},{level:2,title:"生命周期",slug:"生命周期",normalizedTitle:"生命周期",charIndex:22},{level:2,title:"三种特殊属性的setter",slug:"三种特殊属性的setter",normalizedTitle:"三种特殊属性的setter",charIndex:3849},{level:2,title:"[()]和XxChange",slug:"和xxchange",normalizedTitle:"[()]和xxchange",charIndex:4389}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"搭建环境 生命周期 三种特殊属性的setter [()]和XxChange",content:"说明\n\n理解在一个组件自创建到销毁的过程中，生命周期钩子和一些特殊属性 setter 的执行顺序。\n\n\n# 搭建环境\n\n在开始之前，我们先搭建一个测试项目\n\n现在有四个组件，分别为 A、B、C 和 D 组件，其中C为B的内容投影，D 为 B 的内嵌视图，B 为 A 的内嵌视图。\n\n@Component({\n  selector: 'a-comp',\n  template: `\n    <h1>a-comp</h1>\n    \x3c!-- 注意这里属性绑定方式 --\x3e\n    <b-comp name=\"简单方式传入值\">\n      <c-comp></c-comp>\n    </b-comp>\n    <b-comp [name]=\"'变量值绑定方式传入值'\">\n      <c-comp></c-comp>\n    </b-comp>\n    `,\n  })\nexport class AComponent { }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n@Component({\n  selector: 'b-comp',\n  template: `\n    <h2>b-comp</h2>\n    <p>目标值：{{ targetValue }}</p>\n    <d-comp></d-comp>\n    <ng-content></ng-content>\n  `,\n})\nexport class BComponent implements OnChanges, OnInit, AfterContentInit, AfterViewInit {\n  @Input()\n  set name(value: string) {\n    console.log('@Input属性setter');\n    this.targetValue = value;\n  }\n  targetValue: string = initValue;\n  /** 注意这里static为true */\n  @ContentChild(XComponent, { static: true })\n  set xxxComp(value: XComponent) {\n    console.log('ContentChild{static:true}属性setter');\n  }\n  /** 注意这里static为true */\n  @ViewChild(DComponent, { static:true })\n  set dComp(value: DComponent)  {\n    console.log('ViewChild{static:true}属性setter');\n  }\n  constructor() {\n    console.log('constructor');\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('ngOnChanges');\n  }\n  ngOnInit(): void {\n    console.log('ngOnInit');\n  }\n  ngAfterContentInit(): void {\n    console.log('ngAfterContentInit');\n  }\n  ngAfterViewInit(): void {\n    console.log('ngAfterViewInit');\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n@Component({\n  selector: 'c-comp',\n  template: `<h2>c-comp</h2>`,\n})\nexport class CComponent {}\n\n\n1\n2\n3\n4\n5\n\n\n@Component({\n  selector: 'd-comp',\n  template: `<h2>d-comp</h2>`,\n})\nexport class DComponent {}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 生命周期\n\n官网文档\n\n当一个组件被加载时，其生命周期钩子执行顺序如下：\n\n 1. constructor\n 2. ngOnChanges(存在@Input属性值传入时触发)\n 3. ngOnInit\n 4. ngDoCheck\n 5. ngAfterContentInit\n 6. ngAfterContentCheck\n 7. ngAfterViewInit\n 8. ngAfterViewCheck\n 9. ngDoDestroy\n\n说明：\n\n * 其中 constructor、ngOnInit、ngAfterContentInit、ngAfterViewInit、ngDoDestroy，这些自创建到销毁，过程中只会执行一次。\n * 而 ngOnChanges，只要 @Input 属性值发生( default 策略下)，就会触发。\n * 至于 ngDoCheck、ngAfterContentCheck、ngAfterViewCheck 这三个，它们在每次 CD 时，都会触发，我们几乎不会监听它们。所以知道即可。\n\n拓展：\n\n上述环境中组件 B，C，D 的钩子（ngOnInit、ngAfterContentInit、ngAfterViewInit）的执行顺序\n\nB (主视角)                   C(CONTENTCHILD)      D (VIEWCHILD)\nconstructor -> *                               \n                          constructor -> *     \n                                               constructor -> *\n* -> ngOnChanges                               \nngOnInit                                       \n                          * -> ngOnChanges     \n                          ngOnInit             \n                          ngAfterContentInit   \n* -> ngAfterContentInit                        \n                                               * -> ngOnChanges\n                                               ngOnInit\n                                               ngAfterContentInit\n                                               ngAfterViewInit\n                          ngAfterViewInit      \n* -> ngAfterViewInit                           \n                                               ngOnDestroy\n                          ngOnDestroy          \nngOnDestroy                                    \n\n其中*代表 组件b 中@Input、@ContentChild、@ContentChildren、@ViewChild、@ViewChildren 属性 setter 方法的可能出现位置。\n\n详情如下\n * @Input属性以简单方式绑定时，setter 在 constructor 后；\n * @Input属性以插值方式绑定时，setter 在 ngOnChanges 前；\n * @ContentChild属性是{static: true}时，setter 出现在所获取组件的 constructor 后；\n * @ContentChild属性是{static: false}时，setter 出现在 ngAfterContentInit 前；\n * @ViewChild属性是{static: true}时，setter 出现在所获取组件的 constructor 后；\n * @ViewChild属性是{static: false}时，setter 出现在 ngAfterContentInit 前；\n\n\n# 三种特殊属性的setter\n\n1、当@Input属性以简单方式传入时（即：<xx prop=\"abc\"></xx>）\n\n执行顺序如下：\n\n 1. constructor\n 2. @Input setter\n 3. @ContentChild setter\n 4. @ViewChild setter\n 5. ngOnChanges\n 6. ...\n\n2、当@Input属性以变量绑定方式传入时（即：<xx [prop]=\"'abc'\"></xx>）\n\n 1. constructor\n 2. @ContentChild setter\n 3. @ViewChild setter\n 4. @Input setter\n 5. ngOnChanges\n 6. ...\n\n3、其它\n\n * @ContentChild({ static: false }) -> @ContentChildren 始终在 ngAfterContentInit 之前执行。\n * @ViewChild({ static: false }) -> @ViewChildren 始终在 ngAfterViewInit 之前执行。\n * @Input属性以相同方式绑定时，先绑定的属性setter先执行。\n\n\n# [()]和XxChange\n\n在Ng中，我们知道当子组件child-comp存在@Input() xx和@Output() xxChange时， 我们在宿主上绑定时可以使用[()]来写，即<child-comp [(xx)]=\"xx\"></child-comp>。\n\n但我们可能还会这样<child-comp [(xx)]=\"xx\" (xxChange)=\"xxChange()\"></child-comp>。\n\n此时，是宿主组件中属性xx setter先执行，还是方法xxChange()先执行呢？\n\n经测试是，setter 先执行。",normalizedContent:"说明\n\n理解在一个组件自创建到销毁的过程中，生命周期钩子和一些特殊属性 setter 的执行顺序。\n\n\n# 搭建环境\n\n在开始之前，我们先搭建一个测试项目\n\n现在有四个组件，分别为 a、b、c 和 d 组件，其中c为b的内容投影，d 为 b 的内嵌视图，b 为 a 的内嵌视图。\n\n@component({\n  selector: 'a-comp',\n  template: `\n    <h1>a-comp</h1>\n    \x3c!-- 注意这里属性绑定方式 --\x3e\n    <b-comp name=\"简单方式传入值\">\n      <c-comp></c-comp>\n    </b-comp>\n    <b-comp [name]=\"'变量值绑定方式传入值'\">\n      <c-comp></c-comp>\n    </b-comp>\n    `,\n  })\nexport class acomponent { }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n@component({\n  selector: 'b-comp',\n  template: `\n    <h2>b-comp</h2>\n    <p>目标值：{{ targetvalue }}</p>\n    <d-comp></d-comp>\n    <ng-content></ng-content>\n  `,\n})\nexport class bcomponent implements onchanges, oninit, aftercontentinit, afterviewinit {\n  @input()\n  set name(value: string) {\n    console.log('@input属性setter');\n    this.targetvalue = value;\n  }\n  targetvalue: string = initvalue;\n  /** 注意这里static为true */\n  @contentchild(xcomponent, { static: true })\n  set xxxcomp(value: xcomponent) {\n    console.log('contentchild{static:true}属性setter');\n  }\n  /** 注意这里static为true */\n  @viewchild(dcomponent, { static:true })\n  set dcomp(value: dcomponent)  {\n    console.log('viewchild{static:true}属性setter');\n  }\n  constructor() {\n    console.log('constructor');\n  }\n  ngonchanges(changes: simplechanges): void {\n    console.log('ngonchanges');\n  }\n  ngoninit(): void {\n    console.log('ngoninit');\n  }\n  ngaftercontentinit(): void {\n    console.log('ngaftercontentinit');\n  }\n  ngafterviewinit(): void {\n    console.log('ngafterviewinit');\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n@component({\n  selector: 'c-comp',\n  template: `<h2>c-comp</h2>`,\n})\nexport class ccomponent {}\n\n\n1\n2\n3\n4\n5\n\n\n@component({\n  selector: 'd-comp',\n  template: `<h2>d-comp</h2>`,\n})\nexport class dcomponent {}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 生命周期\n\n官网文档\n\n当一个组件被加载时，其生命周期钩子执行顺序如下：\n\n 1. constructor\n 2. ngonchanges(存在@input属性值传入时触发)\n 3. ngoninit\n 4. ngdocheck\n 5. ngaftercontentinit\n 6. ngaftercontentcheck\n 7. ngafterviewinit\n 8. ngafterviewcheck\n 9. ngdodestroy\n\n说明：\n\n * 其中 constructor、ngoninit、ngaftercontentinit、ngafterviewinit、ngdodestroy，这些自创建到销毁，过程中只会执行一次。\n * 而 ngonchanges，只要 @input 属性值发生( default 策略下)，就会触发。\n * 至于 ngdocheck、ngaftercontentcheck、ngafterviewcheck 这三个，它们在每次 cd 时，都会触发，我们几乎不会监听它们。所以知道即可。\n\n拓展：\n\n上述环境中组件 b，c，d 的钩子（ngoninit、ngaftercontentinit、ngafterviewinit）的执行顺序\n\nb (主视角)                   c(contentchild)      d (viewchild)\nconstructor -> *                               \n                          constructor -> *     \n                                               constructor -> *\n* -> ngonchanges                               \nngoninit                                       \n                          * -> ngonchanges     \n                          ngoninit             \n                          ngaftercontentinit   \n* -> ngaftercontentinit                        \n                                               * -> ngonchanges\n                                               ngoninit\n                                               ngaftercontentinit\n                                               ngafterviewinit\n                          ngafterviewinit      \n* -> ngafterviewinit                           \n                                               ngondestroy\n                          ngondestroy          \nngondestroy                                    \n\n其中*代表 组件b 中@input、@contentchild、@contentchildren、@viewchild、@viewchildren 属性 setter 方法的可能出现位置。\n\n详情如下\n * @input属性以简单方式绑定时，setter 在 constructor 后；\n * @input属性以插值方式绑定时，setter 在 ngonchanges 前；\n * @contentchild属性是{static: true}时，setter 出现在所获取组件的 constructor 后；\n * @contentchild属性是{static: false}时，setter 出现在 ngaftercontentinit 前；\n * @viewchild属性是{static: true}时，setter 出现在所获取组件的 constructor 后；\n * @viewchild属性是{static: false}时，setter 出现在 ngaftercontentinit 前；\n\n\n# 三种特殊属性的setter\n\n1、当@input属性以简单方式传入时（即：<xx prop=\"abc\"></xx>）\n\n执行顺序如下：\n\n 1. constructor\n 2. @input setter\n 3. @contentchild setter\n 4. @viewchild setter\n 5. ngonchanges\n 6. ...\n\n2、当@input属性以变量绑定方式传入时（即：<xx [prop]=\"'abc'\"></xx>）\n\n 1. constructor\n 2. @contentchild setter\n 3. @viewchild setter\n 4. @input setter\n 5. ngonchanges\n 6. ...\n\n3、其它\n\n * @contentchild({ static: false }) -> @contentchildren 始终在 ngaftercontentinit 之前执行。\n * @viewchild({ static: false }) -> @viewchildren 始终在 ngafterviewinit 之前执行。\n * @input属性以相同方式绑定时，先绑定的属性setter先执行。\n\n\n# [()]和xxchange\n\n在ng中，我们知道当子组件child-comp存在@input() xx和@output() xxchange时， 我们在宿主上绑定时可以使用[()]来写，即<child-comp [(xx)]=\"xx\"></child-comp>。\n\n但我们可能还会这样<child-comp [(xx)]=\"xx\" (xxchange)=\"xxchange()\"></child-comp>。\n\n此时，是宿主组件中属性xx setter先执行，还是方法xxchange()先执行呢？\n\n经测试是，setter 先执行。",charsets:{cjk:!0}},{title:"NG变更检测",frontmatter:{title:"NG变更检测",date:"2022-07-28T00:30:23.000Z",permalink:"/pages/91efda/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/06.Angular/06.NG%E5%8F%98%E6%9B%B4%E6%A3%80%E6%B5%8B.html",relativePath:"04.前端框架/06.Angular/06.NG变更检测.md",key:"v-7fa2f8c3",path:"/pages/91efda/",headers:[{level:2,title:"触发CD",slug:"触发cd",normalizedTitle:"触发cd",charIndex:2},{level:2,title:"Detection Sequence",slug:"detection-sequence",normalizedTitle:"detection sequence",charIndex:215},{level:2,title:"ChangeDetectionStrategy.OnPush",slug:"changedetectionstrategy-onpush",normalizedTitle:"changedetectionstrategy.onpush",charIndex:401},{level:2,title:"ChangeDetectionRef",slug:"changedetectionref",normalizedTitle:"changedetectionref",charIndex:608},{level:2,title:"ApplicationRef",slug:"applicationref",normalizedTitle:"applicationref",charIndex:1168},{level:2,title:"NgZone",slug:"ngzone",normalizedTitle:"ngzone",charIndex:1288},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:1948}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"触发CD Detection Sequence ChangeDetectionStrategy.OnPush ChangeDetectionRef ApplicationRef NgZone 参考文档",content:"# 触发CD\n\nDefault 策略下，会触发变更检测的情况\n\n 1. 原生DOM事件；\n 2. setTimeout()、setInterval()；\n 3. Observable、async；\n\nOnPush策略下，会触发变更检测的情况\n\n 1. @Input属性值发生改变；\n 2. 组件内部或者子组件触发事件（原生DOM事件）；\n 3. 显示调用函数触发；\n 4. async管道发出一个新值时，会触发变更检测；\n\n\n# Detection Sequence\n\nCD时，一个组件执行检测的顺序\n\n 1. 更新所有子组件的绑定属性；\n 2. 调用所有子组件的OnChanges, DoCheck, AfterContentChecked生命周期钩子；\n 3. 更新当前组件的DOM；\n 4. 子组件触发变更检测；\n 5. 调用所有子组件的AfterViewChecked的生命周期钩子；\n\n\n# ChangeDetectionStrategy.OnPush\n\nChangeDetectionStrategy 默认为 Default，也就是父组件的 CD 会触发子组件的 CD，\n\n但是很显然有些情况下我们我们可以自行判断出某些子组件在父组件 CD 时并不用触发，\n\n而 OnPush 则是 Angular 为开发者提供的一便捷操作方式。\n\n其次，OnPush 策略下，组件的 CD 触发条件也会变化。\n\n\n# ChangeDetectionRef\n\nAngular 给每个组件都关联了一份组件视图，通过 ChangeDetectionRef 可以拿到相关联的视图，在官网可以看到：\n\nabstract class ChangeDetectorRef {\n  abstract markForCheck(): void\n  abstract detach(): void\n  abstract detectChanges(): void\n  abstract checkNoChanges(): void\n  abstract reattach(): void\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 1. detach 和 reattach\n\n被 detach 的组件将不会被检测变更；而 reattach 则可以让被 detach 的组件重新可以被检测到变更。 （具体可以到 CD 可视化工具体验其变化）\n\n 2. markForCheck\n\nreattch 只会重新启用当前组件的变更检测，但是如果父组件没有触发变更检测， 那么 reattch 并不会起作用，而 markForCheck 可以很好地解决这个问题。\n\n 3. detectChanges\n\n检查该视图以及其子视图。与detach结合可实现局部变更检测\n\n\n# ApplicationRef\n\n在 Angular 官网可以看到：\n\nclass ApplicationRef {\n  tick(): void\n  // ……\n}\n\n\n1\n2\n3\n4\n\n\ntick() 也可以显示地触发变更检测。\n\n\n# NgZone\n\n在 Angular 官网可以看到：\n\nclass NgZone {\n\t  run(fn, applyThis?, applyArgs?){}\n\t  runOutsideAngular<T>(fn: (...args: any[]) => T) {}\n    // ……\n}\n\n\n1\n2\n3\n4\n5\n\n 1. run\n\n在 Angular Zone 内同步执行的 fn 函数，并返回该函数返回的值。\n\n 2. runOutsideAngular\n\n在 Angular 的父 Zone 中同步执行 fn 函数，并返回该函数返回的值。\n\n注意： 这个方法可以优化系统，但目前不是很理解。现在就记住一点：\n\n在执行一些跟画面无关的程式时（例如某个数字加一、复杂的运算、或是呼叫一个API等，但不会影响画面），\n\n可以把程式放在runOutsideAngular()中，来避免发生编程检测造成的效能耗损。\n\n 3. 在项目的入口文件中，我们可以配置是否启用CD\n\n// angualr 项目 main.ts\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule, { ngZone: 'noop' }) // 是否启用zone.js\n  .catch(err => console.error(err));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参考文档\n\n 1. CD可视化工具",normalizedContent:"# 触发cd\n\ndefault 策略下，会触发变更检测的情况\n\n 1. 原生dom事件；\n 2. settimeout()、setinterval()；\n 3. observable、async；\n\nonpush策略下，会触发变更检测的情况\n\n 1. @input属性值发生改变；\n 2. 组件内部或者子组件触发事件（原生dom事件）；\n 3. 显示调用函数触发；\n 4. async管道发出一个新值时，会触发变更检测；\n\n\n# detection sequence\n\ncd时，一个组件执行检测的顺序\n\n 1. 更新所有子组件的绑定属性；\n 2. 调用所有子组件的onchanges, docheck, aftercontentchecked生命周期钩子；\n 3. 更新当前组件的dom；\n 4. 子组件触发变更检测；\n 5. 调用所有子组件的afterviewchecked的生命周期钩子；\n\n\n# changedetectionstrategy.onpush\n\nchangedetectionstrategy 默认为 default，也就是父组件的 cd 会触发子组件的 cd，\n\n但是很显然有些情况下我们我们可以自行判断出某些子组件在父组件 cd 时并不用触发，\n\n而 onpush 则是 angular 为开发者提供的一便捷操作方式。\n\n其次，onpush 策略下，组件的 cd 触发条件也会变化。\n\n\n# changedetectionref\n\nangular 给每个组件都关联了一份组件视图，通过 changedetectionref 可以拿到相关联的视图，在官网可以看到：\n\nabstract class changedetectorref {\n  abstract markforcheck(): void\n  abstract detach(): void\n  abstract detectchanges(): void\n  abstract checknochanges(): void\n  abstract reattach(): void\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 1. detach 和 reattach\n\n被 detach 的组件将不会被检测变更；而 reattach 则可以让被 detach 的组件重新可以被检测到变更。 （具体可以到 cd 可视化工具体验其变化）\n\n 2. markforcheck\n\nreattch 只会重新启用当前组件的变更检测，但是如果父组件没有触发变更检测， 那么 reattch 并不会起作用，而 markforcheck 可以很好地解决这个问题。\n\n 3. detectchanges\n\n检查该视图以及其子视图。与detach结合可实现局部变更检测\n\n\n# applicationref\n\n在 angular 官网可以看到：\n\nclass applicationref {\n  tick(): void\n  // ……\n}\n\n\n1\n2\n3\n4\n\n\ntick() 也可以显示地触发变更检测。\n\n\n# ngzone\n\n在 angular 官网可以看到：\n\nclass ngzone {\n\t  run(fn, applythis?, applyargs?){}\n\t  runoutsideangular<t>(fn: (...args: any[]) => t) {}\n    // ……\n}\n\n\n1\n2\n3\n4\n5\n\n 1. run\n\n在 angular zone 内同步执行的 fn 函数，并返回该函数返回的值。\n\n 2. runoutsideangular\n\n在 angular 的父 zone 中同步执行 fn 函数，并返回该函数返回的值。\n\n注意： 这个方法可以优化系统，但目前不是很理解。现在就记住一点：\n\n在执行一些跟画面无关的程式时（例如某个数字加一、复杂的运算、或是呼叫一个api等，但不会影响画面），\n\n可以把程式放在runoutsideangular()中，来避免发生编程检测造成的效能耗损。\n\n 3. 在项目的入口文件中，我们可以配置是否启用cd\n\n// angualr 项目 main.ts\nif (environment.production) {\n  enableprodmode();\n}\n\nplatformbrowserdynamic()\n  .bootstrapmodule(appmodule, { ngzone: 'noop' }) // 是否启用zone.js\n  .catch(err => console.error(err));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参考文档\n\n 1. cd可视化工具",charsets:{cjk:!0}},{title:"RxJS基础",frontmatter:{title:"RxJS基础",date:"2022-07-28T00:30:40.000Z",permalink:"/pages/d644ee/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/06.Angular/08.RxJS%E5%9F%BA%E7%A1%80.html",relativePath:"04.前端框架/06.Angular/08.RxJS基础.md",key:"v-48127d6e",path:"/pages/d644ee/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"官网：Rxjs\n\n入门教程：30天精通 Rxjs\n\n",normalizedContent:"官网：rxjs\n\n入门教程：30天精通 rxjs\n\n",charsets:{cjk:!0}},{title:"NgRx基础",frontmatter:{title:"NgRx基础",date:"2022-07-28T00:30:53.000Z",permalink:"/pages/370feb/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/06.Angular/10.NgRx%E5%9F%BA%E7%A1%80.html",relativePath:"04.前端框架/06.Angular/10.NgRx基础.md",key:"v-4d233e08",path:"/pages/370feb/",headers:[{level:2,title:"流程图",slug:"流程图",normalizedTitle:"流程图",charIndex:12},{level:2,title:"核心概念及使用",slug:"核心概念及使用",normalizedTitle:"核心概念及使用",charIndex:22},{level:3,title:"Actions",slug:"actions",normalizedTitle:"actions",charIndex:831},{level:3,title:"Reducers + Entity",slug:"reducers-entity",normalizedTitle:"reducers + entity",charIndex:2540},{level:3,title:"Selectors",slug:"selectors",normalizedTitle:"selectors",charIndex:4709},{level:3,title:"Effects",slug:"effects",normalizedTitle:"effects",charIndex:177},{level:2,title:"Devtools",slug:"devtools",normalizedTitle:"devtools",charIndex:7281}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"流程图 核心概念及使用 Actions Reducers + Entity Selectors Effects Devtools",content:"官网：Ngrx\n\n\n# 流程图\n\n\n\n\n# 核心概念及使用\n\n文件 app.module.ts\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    EffectsModule.forRoot([\n      UserEffects\n    ]),\n    StoreModule.forRoot({\n      users: userReducer, // 记住这里注册使用的key值\n    }),\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n点击查看\n\nNG 的子模块，StoreModule.forFeature、EffectsModule.forFeature 类似于RouterModule.forChild的意味。\n\n@NgModule({\n  declarations: [],\n  imports: [\n      CommonModule,\n      EffectsModule.forFeature([\n          UserEffects\n      ]),\n      StoreModule.forFeature({\n          users: userReducer,\n      }), \n      RouterModule.forChild(routes)\n  ],\n})\nexport class ChildrenModule {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# Actions\n\nexport interface User {\n  id: string;\n  name: string;\n}\n// 这里可以将下述抽出来\nexport enum UserActionType {\n    loadUsersType = '[User/API] Load Users',\n    // ...type: string\n}\n\nconst loadUsers = createAction(UserActionType.loadUsersType, props<{ users: User[] }>());\nconst setUsers = createAction('[User/API] Set Users', props<{ users: User[] }>());\nconst addUser = createAction('[User/API] Add User', props<{ user: User }>());\nconst setUser = createAction('[User/API] Set User', props<{ user: User }>());\nconst upsertUser = createAction('[User/API] Upsert User', props<{ user: User }>());\nconst addUsers = createAction('[User/API] Add Users', props<{ users: User[] }>());\nconst upsertUsers = createAction('[User/API] Upsert Users', props<{ users: User[] }>());\nconst updateUser = createAction('[User/API] Update User', props<{ update: Update<User> }>());\nconst updateUsers = createAction('[User/API] Update Users', props<{ updates: Update<User>[] }>());\nconst mapUser = createAction('[User/API] Map User', props<{ entityMap: EntityMapOne<User> }>());\nconst mapUsers = createAction('[User/API] Map Users', props<{ entityMap: EntityMap<User> }>());\nconst deleteUser = createAction('[User/API] Delete User', props<{ id: string }>());\nconst deleteUsers = createAction('[User/API] Delete Users', props<{ ids: string[] }>());\nconst deleteUsersByPredicate = createAction('[User/API] Delete Users By Predicate', props<{ predicate: Predicate<User> }>());\nconst clearUsers = createAction('[User/API] Clear Users');\n\n// 统一对外暴露\nexport const UserActions = {\n    loadUsers,\n    // ... \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n提示\n\n注意 props<{ users: User[] }>() 中的泛型。\n\n\n# Reducers + Entity\n\n// 这里使用了entity，理解了这个过程，不使用entity时，也可以很容易的编写\nexport interface State extends EntityState<User> {\n  selectedUserId: string | null;\n}\n// 生成一个 adapter\nexport const adapter: EntityAdapter<User> = createEntityAdapter<User>({\n    selectId: (a: User) => a.id,\n    sortComparer: (a: User, b: User) => a.name.localeCompare(b.name),\n});\n// 保存一个初始状态【很关键，全局状态都操作这个变量，所以是全局状态管理】\nexport const initialState = adapter.getInitialState({\n    selectedUserId: null,\n});\n// 对外暴露【用于在NgModule中进行注册】\nexport const userReducer = createReducer(\n    initialState,\n    on(UserActions.addUser, (state, { user }) => adapter.addOne(user, state)),\n    on(UserActions.setUser, (state, { user }) => adapter.setOne(user, state)),\n    on(UserActions.upsertUser, (state, { user }) => adapter.upsertOne(user, state)),\n    on(UserActions.addUsers, (state, { users }) => adapter.addMany(users, state)),\n    on(UserActions.upsertUsers, (state, { users }) => adapter.upsertMany(users, state)),\n    on(UserActions.updateUser, (state, { update }) => adapter.updateOne(update, state)),\n    on(UserActions.updateUsers, (state, { updates }) => adapter.updateMany(updates, state)),\n    on(UserActions.mapUser, (state, { entityMap }) => adapter.mapOne(entityMap, state)),\n    on(UserActions.mapUsers, (state, { entityMap }) => adapter.map(entityMap, state)),\n    on(UserActions.deleteUser, (state, { id }) => adapter.removeOne(id, state)),\n    on(UserActions.deleteUsers, (state, { ids }) => adapter.removeMany(ids, state)),\n    on(UserActions.deleteUsersByPredicate, (state, { predicate }) => adapter.removeMany(predicate, state)),\n    on(UserActions.loadUsers, (state, { users }) => adapter.setAll(users, state)),\n    on(UserActions.setUsers, (state, { users }) => adapter.setMany(users, state)),\n    on(UserActions.clearUsers, state => adapter.removeAll({ ...state, selectedUserId: null }))\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n提示\n\non(UserActions.loadUsers, (state, { users }) => adapter.setAll(users, state))\n\n解析：\n\n 1. UserActions.loadUsers：是我们之前定以的action\n 2. (state, { users })：state是默认参数；{ users } 就是 props<{ users: User[] }>() 中泛型指定的\n\n\n# Selectors\n\n// State是reducer文件中定义的类型；'users'是featureName，也就是在StoreModule.forRoot/forFeature中注册的featureName\nexport const userFeatureSelector = createFeatureSelector<State>('users');\n\n// adapter是reducer文件中定义的adapter，adapter原生提供了四个方法\nconst {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n\nconst getSelectIds = createSelector(userFeatureSelector, selectIds);\nconst getSelectEntities = createSelector(userFeatureSelector, selectEntities);\nconst getSelectAll = createSelector(userFeatureSelector, selectAll);\nconst getSelectTotal = createSelector(userFeatureSelector, selectTotal);\n\n/**\n * 后续拓展Using selectors for multiple pieces of state\n * 及函数形参值类型\n */\n\nexport const userSelectors = {\n    getSelectIds,\n    // ...\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\nNG的Component：users.component.ts\n\n@Component({\n    selector: 'app-users',\n    template: ``,\n    styles: []\n})\nexport class UsersComponent {\n    \n    constructor(\n        store$: Store<{ users: State }>,\n    ) {\n        // 获取该全局值\n        // store$.select('users') 返回一个多播Observable，当状态值变化时，就会发出最新值。\n        // 'users'：就是我们在StoreModule中注册key值\n        store$.select('users').subscribe(console.log)\n        \n        // 触发action\n        store$.dispatch(UserActions.loadUsers({ users: [] })); \n        // 注意这里传的参数要求与上述一致\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n提示\n\n这里说一下 store$.dispatch(UserActions.loadUsers({ users: [] })) 的执行流程\n\n流程：触发action -> reducer中on()该action的方法 -> 触发on中的方法来改变状态值 -> 发出最新值（也就是store$.select('users')接收的值）\n\n当涉及到 Effects 时，流程如下：\n\n触发action\n\n-> Effects 中 ofType() 观察到 action 被触发，继而执行后续逻辑（其中也就类似 UserActions.loadUsers({ users: [] }) 这种）\n\n-> reducer 中 on() 该 action 的方法 -> 触发on中的方法来改变状态值 -> 发出最新值（也就是 store$.select('users') 接收的值）\n\n\n# Effects\n\n@Injectable()\nexport class UserEffects {\n    /**\n     * 逻辑：\n     * 通过注入Actions能够感应到action的执行，继而通过operators-ofType来过滤到目标action，\n     * 然后执行接下来的逻辑，比如这里的UserActions.addUsers({ users: [] })\n     * 接下来Reducer机会改变全局状态值。\n     * （与上述 store$.dispatch(UserActions.loadUsers({ users: [] })); 作用一致，只不过effect是通过Ng-srevice来请求数据的）\n     */\n    addUsers$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(UserActions.xxx), // 这里userActions，也可以写userActionsType\n            switchMap(() => {\n                return of(list).pipe(\n                    map(list => UserActions.addUsers({ users: [] })),\n                )\n            })\n        ),\n    );\n    \n    constructor(private actions$: Actions) {\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# Devtools\n\n 1. 浏览器安装 Redux DevTools 插件\n 2. 项目中安装 @ngrx/store-dev-tools，具体步骤参考官网",normalizedContent:"官网：ngrx\n\n\n# 流程图\n\n\n\n\n# 核心概念及使用\n\n文件 app.module.ts\n\n@ngmodule({\n  declarations: [\n    appcomponent\n  ],\n  imports: [\n    commonmodule,\n    browsermodule,\n    approutingmodule,\n    effectsmodule.forroot([\n      usereffects\n    ]),\n    storemodule.forroot({\n      users: userreducer, // 记住这里注册使用的key值\n    }),\n  ],\n  bootstrap: [appcomponent]\n})\nexport class appmodule {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n点击查看\n\nng 的子模块，storemodule.forfeature、effectsmodule.forfeature 类似于routermodule.forchild的意味。\n\n@ngmodule({\n  declarations: [],\n  imports: [\n      commonmodule,\n      effectsmodule.forfeature([\n          usereffects\n      ]),\n      storemodule.forfeature({\n          users: userreducer,\n      }), \n      routermodule.forchild(routes)\n  ],\n})\nexport class childrenmodule {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# actions\n\nexport interface user {\n  id: string;\n  name: string;\n}\n// 这里可以将下述抽出来\nexport enum useractiontype {\n    loaduserstype = '[user/api] load users',\n    // ...type: string\n}\n\nconst loadusers = createaction(useractiontype.loaduserstype, props<{ users: user[] }>());\nconst setusers = createaction('[user/api] set users', props<{ users: user[] }>());\nconst adduser = createaction('[user/api] add user', props<{ user: user }>());\nconst setuser = createaction('[user/api] set user', props<{ user: user }>());\nconst upsertuser = createaction('[user/api] upsert user', props<{ user: user }>());\nconst addusers = createaction('[user/api] add users', props<{ users: user[] }>());\nconst upsertusers = createaction('[user/api] upsert users', props<{ users: user[] }>());\nconst updateuser = createaction('[user/api] update user', props<{ update: update<user> }>());\nconst updateusers = createaction('[user/api] update users', props<{ updates: update<user>[] }>());\nconst mapuser = createaction('[user/api] map user', props<{ entitymap: entitymapone<user> }>());\nconst mapusers = createaction('[user/api] map users', props<{ entitymap: entitymap<user> }>());\nconst deleteuser = createaction('[user/api] delete user', props<{ id: string }>());\nconst deleteusers = createaction('[user/api] delete users', props<{ ids: string[] }>());\nconst deleteusersbypredicate = createaction('[user/api] delete users by predicate', props<{ predicate: predicate<user> }>());\nconst clearusers = createaction('[user/api] clear users');\n\n// 统一对外暴露\nexport const useractions = {\n    loadusers,\n    // ... \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n提示\n\n注意 props<{ users: user[] }>() 中的泛型。\n\n\n# reducers + entity\n\n// 这里使用了entity，理解了这个过程，不使用entity时，也可以很容易的编写\nexport interface state extends entitystate<user> {\n  selecteduserid: string | null;\n}\n// 生成一个 adapter\nexport const adapter: entityadapter<user> = createentityadapter<user>({\n    selectid: (a: user) => a.id,\n    sortcomparer: (a: user, b: user) => a.name.localecompare(b.name),\n});\n// 保存一个初始状态【很关键，全局状态都操作这个变量，所以是全局状态管理】\nexport const initialstate = adapter.getinitialstate({\n    selecteduserid: null,\n});\n// 对外暴露【用于在ngmodule中进行注册】\nexport const userreducer = createreducer(\n    initialstate,\n    on(useractions.adduser, (state, { user }) => adapter.addone(user, state)),\n    on(useractions.setuser, (state, { user }) => adapter.setone(user, state)),\n    on(useractions.upsertuser, (state, { user }) => adapter.upsertone(user, state)),\n    on(useractions.addusers, (state, { users }) => adapter.addmany(users, state)),\n    on(useractions.upsertusers, (state, { users }) => adapter.upsertmany(users, state)),\n    on(useractions.updateuser, (state, { update }) => adapter.updateone(update, state)),\n    on(useractions.updateusers, (state, { updates }) => adapter.updatemany(updates, state)),\n    on(useractions.mapuser, (state, { entitymap }) => adapter.mapone(entitymap, state)),\n    on(useractions.mapusers, (state, { entitymap }) => adapter.map(entitymap, state)),\n    on(useractions.deleteuser, (state, { id }) => adapter.removeone(id, state)),\n    on(useractions.deleteusers, (state, { ids }) => adapter.removemany(ids, state)),\n    on(useractions.deleteusersbypredicate, (state, { predicate }) => adapter.removemany(predicate, state)),\n    on(useractions.loadusers, (state, { users }) => adapter.setall(users, state)),\n    on(useractions.setusers, (state, { users }) => adapter.setmany(users, state)),\n    on(useractions.clearusers, state => adapter.removeall({ ...state, selecteduserid: null }))\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n提示\n\non(useractions.loadusers, (state, { users }) => adapter.setall(users, state))\n\n解析：\n\n 1. useractions.loadusers：是我们之前定以的action\n 2. (state, { users })：state是默认参数；{ users } 就是 props<{ users: user[] }>() 中泛型指定的\n\n\n# selectors\n\n// state是reducer文件中定义的类型；'users'是featurename，也就是在storemodule.forroot/forfeature中注册的featurename\nexport const userfeatureselector = createfeatureselector<state>('users');\n\n// adapter是reducer文件中定义的adapter，adapter原生提供了四个方法\nconst {\n  selectids,\n  selectentities,\n  selectall,\n  selecttotal,\n} = adapter.getselectors();\n\nconst getselectids = createselector(userfeatureselector, selectids);\nconst getselectentities = createselector(userfeatureselector, selectentities);\nconst getselectall = createselector(userfeatureselector, selectall);\nconst getselecttotal = createselector(userfeatureselector, selecttotal);\n\n/**\n * 后续拓展using selectors for multiple pieces of state\n * 及函数形参值类型\n */\n\nexport const userselectors = {\n    getselectids,\n    // ...\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\nng的component：users.component.ts\n\n@component({\n    selector: 'app-users',\n    template: ``,\n    styles: []\n})\nexport class userscomponent {\n    \n    constructor(\n        store$: store<{ users: state }>,\n    ) {\n        // 获取该全局值\n        // store$.select('users') 返回一个多播observable，当状态值变化时，就会发出最新值。\n        // 'users'：就是我们在storemodule中注册key值\n        store$.select('users').subscribe(console.log)\n        \n        // 触发action\n        store$.dispatch(useractions.loadusers({ users: [] })); \n        // 注意这里传的参数要求与上述一致\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n提示\n\n这里说一下 store$.dispatch(useractions.loadusers({ users: [] })) 的执行流程\n\n流程：触发action -> reducer中on()该action的方法 -> 触发on中的方法来改变状态值 -> 发出最新值（也就是store$.select('users')接收的值）\n\n当涉及到 effects 时，流程如下：\n\n触发action\n\n-> effects 中 oftype() 观察到 action 被触发，继而执行后续逻辑（其中也就类似 useractions.loadusers({ users: [] }) 这种）\n\n-> reducer 中 on() 该 action 的方法 -> 触发on中的方法来改变状态值 -> 发出最新值（也就是 store$.select('users') 接收的值）\n\n\n# effects\n\n@injectable()\nexport class usereffects {\n    /**\n     * 逻辑：\n     * 通过注入actions能够感应到action的执行，继而通过operators-oftype来过滤到目标action，\n     * 然后执行接下来的逻辑，比如这里的useractions.addusers({ users: [] })\n     * 接下来reducer机会改变全局状态值。\n     * （与上述 store$.dispatch(useractions.loadusers({ users: [] })); 作用一致，只不过effect是通过ng-srevice来请求数据的）\n     */\n    addusers$ = createeffect(() =>\n        this.actions$.pipe(\n            oftype(useractions.xxx), // 这里useractions，也可以写useractionstype\n            switchmap(() => {\n                return of(list).pipe(\n                    map(list => useractions.addusers({ users: [] })),\n                )\n            })\n        ),\n    );\n    \n    constructor(private actions$: actions) {\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# devtools\n\n 1. 浏览器安装 redux devtools 插件\n 2. 项目中安装 @ngrx/store-dev-tools，具体步骤参考官网",charsets:{cjk:!0}},{title:"移动端框架",frontmatter:{title:"移动端框架",date:"2022-11-13T02:02:59.000Z",permalink:"/pages/151484/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/10.%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%A1%86%E6%9E%B6.html",relativePath:"04.前端框架/10.移动端框架.md",key:"v-1ba04538",path:"/pages/151484/",headersStr:null,content:" * React Native\n * Flutter",normalizedContent:" * react native\n * flutter",charsets:{}},{title:"Nginx",frontmatter:{title:"Nginx",date:"2022-07-28T00:53:36.000Z",permalink:"/pages/5bfd77/"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/14.Nginx.html",relativePath:"04.前端框架/14.Nginx.md",key:"v-96ee807e",path:"/pages/5bfd77/",headers:[{level:2,title:"nginx安装",slug:"nginx安装",normalizedTitle:"nginx安装",charIndex:56},{level:2,title:"nginx常用功能及配件文件",slug:"nginx常用功能及配件文件",normalizedTitle:"nginx常用功能及配件文件",charIndex:92},{level:3,title:"1.反向代理",slug:"_1-反向代理",normalizedTitle:"1.反向代理",charIndex:203},{level:3,title:"2.负载均衡",slug:"_2-负载均衡",normalizedTitle:"2.负载均衡",charIndex:641},{level:3,title:"3.动静分离",slug:"_3-动静分离",normalizedTitle:"3.动静分离",charIndex:1465},{level:3,title:"4.高可用集群",slug:"_4-高可用集群",normalizedTitle:"4.高可用集群",charIndex:1793},{level:2,title:"location字段详解",slug:"location字段详解",normalizedTitle:"location字段详解",charIndex:3124},{level:2,title:"操作命令",slug:"操作命令",normalizedTitle:"操作命令",charIndex:3931}],headersStr:"nginx安装 nginx常用功能及配件文件 1.反向代理 2.负载均衡 3.动静分离 4.高可用集群 location字段详解 操作命令",content:'> 说明：这是常规安装nginx方式的教程，了解其基本使用即可。后续是在Docker内安装Nginx。\n\n\n# nginx安装\n\n主要参考该教程安装即可：Nginx安装配置。\n\n\n# nginx常用功能及配件文件\n\nnginx配置文件结构请到页面 Nginx配置文件结构 查看。\n\n配置文件目录：/usr/local/nginx/conf/nginx.conf（前提是nginx是默认安装目录）。\n\n\n# 1.反向代理\n\nnginx 负责将对 192.168.0.107:80 的请求，转给 http://127.0.0.1:8080，而这个操作，浏览器并不知道，这就是反向代理。\n\nserver {\n    listen       80; // 监听port\n    server_name  192.168.0.107;  // 主机IP\n  \n    location / {\n        root   html;\n        proxy_pass  http://127.0.0.1:8080;\n        index  index.html index.htm;\n    }\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   html;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 2.负载均衡\n\n 1. 轮询方式（默认）\n\nupstream myserver { // myserver 可以自己命名\n\t\tserver 192.168.0.107:8080;\n  \tserver 192.168.0.107:8081;\n}\n\nserver {·\n\t\tlisten \t\t\t80;\n    server_name\t192.168.0.107;\n    \n    location / {\n        root html;\n        proxy_pass http://myserver;\n        index index.html index.htm;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n 2. weight\n\nupstream myserver {\n    server 192.168.0.107:8080 weight=5;\n    server 192.168.0.107:8081 weight=10; //weight值越大，权重越高，被分配的请求越多。\n}\n\n\n1\n2\n3\n4\n\n 3. ip_hash 每个请求按访问ip的hash结果分配，这样每个访客固定一个后端服务器。可以解决 session 的问题。\n\nupstream myserver {\n    ip_hash;\n    server 192.168.0.107:8080;\n    server 192.168.0.107:8081;\n}\n\n\n1\n2\n3\n4\n5\n\n 4. fair（第三方） 按后端服务器的响应时间来分配请求，响应时间短的优先分配。\n\nupstream myserver {\n    fair;\n    server 192.168.0.107:8080;\n    server 192.168.0.107:8081;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 3.动静分离\n\n严格意思上说应该是动态请求跟静态请求分开，可以理解成使用 Nginx 处理静态页面，Tomcat 处理动态页面。动静分离从目前实现角度来讲大致分为两种。 一种是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。另外一种方法就是动态跟静态文件混合在一起发布，通过 Nginx 来分开。\n\nlocation /www/ {\n    root  /data/;\n    index  index.html index.htm;\n}\n\nlocation /image/ {\n    root  /data/;\n    autoindex  on; // 显示目录索引\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 4.高可用集群\n\n教程：详解 Keepalived+Nginx实现高可用（HA） keepalived 配置文件，\n\n目录：/etc/keepalived/keepalived.conf\n\nglobal_defs {\n    lvs_id string\n\t\trouter_id nginx_01 # 标识本节点的名称，通常为hostname\n}\n\nvrrp_script chk_nginx {\n  \tscript "/etc/keepalived/nginx_check.sh" # 执行脚本\n  \tinterval 2 \t# 每2秒检测一次nginx的运行状态\n  \tweight -20 \t# 失败一次，将自己的优先级-20\n}\n\nvrrp_instance VI_1 {\n \t\tstate MASTER     # 状态，主节点为MASTER，备份节点为BACKUP\n\t\tinterface ens33    # 绑定VIP的网络接口，通过ifconfig查看自己的网络接口\n    # 虚拟路由的ID号,两个节点设置必须一样,可选IP最后一段使用,相同的VRID为一个组,\n    # 他将决定多播的MAC地址\n \t\tvirtual_router_id 51 \n\t\tmcast_src_ip 192.168.0.107 # 本机IP地址\n \t\tpriority 100     # 节点优先级，值范围0～254，MASTER要比BACKUP高\n \t\tadvert_int 1     # 组播信息发送时间间隔，两个节点必须设置一样，默认为1秒\n \t\tauthentication {\t# 设置验证信息，两个节点必须一致\n    \t\tauth_type PASS\n    \t\tauth_pass 1111\n \t\t}\n \t\tvirtual_ipaddress { # 虚拟IP，两个节点设置必须一样。可以设置多个，一行写一个\n  \t\t\t192.168.0.50\n \t\t}\n \n \t\ttrack_script {\n  \t\t\tchk_nginx # nginx存活状态检测脚本\n\t \t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\nnginx 服务检测脚本\n\n#!/bin/bash\nA=`ps -C nginx --no-header | wc -l`\nif [ $A -eq 0 ];then\n\t/opt/nginx/sbin/nginx \t# 尝试重新启动nginx\n \tsleep 2 \t# 睡眠2秒\n \tif [ `ps -C nginx --no-header | wc -l` -eq 0 ];then\n  \tkillall keepalived \t# 启动失败，将keepalived服务杀死。将vip漂移到其它备份节点\n \tfi\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n启动keepalived服务：$ systemctl start keepalived.service\n\n\n# location字段详解\n\n参考文档：nginx location指令详解 。 通过指定模式来与客户端请求的URL相匹配，基本语法如下：location [=|~|~*|^~|@] pattern {……}\n\n 1. 没有修饰符，表示：必须以指定模式开始；\n 2. = 表示：必须与指定的模式精确匹配；\n 3. ~ 表示：指定的正则表达式要区分大小写；\n 4. ~* 表示：指定的正则表达式不区分大小写；\n 5. ^~ 类似于无修饰的行为，也是以指定模式开始，不同的是，如果匹配成功，那么就停止搜索其他模式了；\n 6. @ ：定义命名location区段，这些区段客户不能访问，只可以由内部产生的请求来访问，如try_files或error_page等。\n\n查找顺序和优先级\n\n 1. 带有"="的精确匹配优先\n 2. 没有修饰符的精确匹配\n 3. 正则表达式按照他们在配置文件中定义的顺序\n 4. 带有"^~"修饰符的，开头匹配\n 5. 带有"~"或"~*"修饰符的，如果正则表达式与URL匹配\n 6. 没有修饰符的，如果指定字符串与URL开头匹配\n\nroot、alias指令区别\n\nlocation /img/ {\n\talias\t/var/www/image/;\n}\n#若按照上述配置的话，则访问/img/目录里面的文件时，nginx会自动去/var/www/image/目录找文件\n\n\n1\n2\n3\n4\n\n\nlocation /img/ {\n\troot\t/var/www/image/;\n}\n#若按照这种配置的话，则访问/img/目录下文件时，nginx会去/var/www/image/img/目录下找文件。\n\n\n1\n2\n3\n4\n\n\nalias 是一个目录别名的定义，root则是最上层目录的定义。 还有一个重要的区别是alias后面必须要用“/”结束， 否则会找不到文件的，而root则可有可无。\n\n\n# 操作命令\n\n问题： XShell可以访问内容，但是浏览器却访问不到内容，这时可能是防火墙的原因，请注意！ 下面命令可以解决问题。\n\n# 查看nginx服务是否已经启动\nps -ef | grep nginx\n\n# 然后查看80-端口是否被分配给了nginx\nnetstat -ntlp\n\n# 对80端口进行防火墙配置\nfirewall-cmd --zone=public --add-port=80/tcp --permanent\n\n# 重启防火墙服务\nsystemctl restart firewalld.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nnginx 服务相关命令：\n\n进入目录 /usr/local/nginx/sbin\n\n# 启动nginx\n./nginx\n\n# 查看状态\nps -ef | grep nginx\n\n# 停止nginx\n./nginx -s stop\n\n# 重新加载\n./nginx -s reload\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',normalizedContent:'> 说明：这是常规安装nginx方式的教程，了解其基本使用即可。后续是在docker内安装nginx。\n\n\n# nginx安装\n\n主要参考该教程安装即可：nginx安装配置。\n\n\n# nginx常用功能及配件文件\n\nnginx配置文件结构请到页面 nginx配置文件结构 查看。\n\n配置文件目录：/usr/local/nginx/conf/nginx.conf（前提是nginx是默认安装目录）。\n\n\n# 1.反向代理\n\nnginx 负责将对 192.168.0.107:80 的请求，转给 http://127.0.0.1:8080，而这个操作，浏览器并不知道，这就是反向代理。\n\nserver {\n    listen       80; // 监听port\n    server_name  192.168.0.107;  // 主机ip\n  \n    location / {\n        root   html;\n        proxy_pass  http://127.0.0.1:8080;\n        index  index.html index.htm;\n    }\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   html;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 2.负载均衡\n\n 1. 轮询方式（默认）\n\nupstream myserver { // myserver 可以自己命名\n\t\tserver 192.168.0.107:8080;\n  \tserver 192.168.0.107:8081;\n}\n\nserver {·\n\t\tlisten \t\t\t80;\n    server_name\t192.168.0.107;\n    \n    location / {\n        root html;\n        proxy_pass http://myserver;\n        index index.html index.htm;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n 2. weight\n\nupstream myserver {\n    server 192.168.0.107:8080 weight=5;\n    server 192.168.0.107:8081 weight=10; //weight值越大，权重越高，被分配的请求越多。\n}\n\n\n1\n2\n3\n4\n\n 3. ip_hash 每个请求按访问ip的hash结果分配，这样每个访客固定一个后端服务器。可以解决 session 的问题。\n\nupstream myserver {\n    ip_hash;\n    server 192.168.0.107:8080;\n    server 192.168.0.107:8081;\n}\n\n\n1\n2\n3\n4\n5\n\n 4. fair（第三方） 按后端服务器的响应时间来分配请求，响应时间短的优先分配。\n\nupstream myserver {\n    fair;\n    server 192.168.0.107:8080;\n    server 192.168.0.107:8081;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 3.动静分离\n\n严格意思上说应该是动态请求跟静态请求分开，可以理解成使用 nginx 处理静态页面，tomcat 处理动态页面。动静分离从目前实现角度来讲大致分为两种。 一种是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。另外一种方法就是动态跟静态文件混合在一起发布，通过 nginx 来分开。\n\nlocation /www/ {\n    root  /data/;\n    index  index.html index.htm;\n}\n\nlocation /image/ {\n    root  /data/;\n    autoindex  on; // 显示目录索引\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 4.高可用集群\n\n教程：详解 keepalived+nginx实现高可用（ha） keepalived 配置文件，\n\n目录：/etc/keepalived/keepalived.conf\n\nglobal_defs {\n    lvs_id string\n\t\trouter_id nginx_01 # 标识本节点的名称，通常为hostname\n}\n\nvrrp_script chk_nginx {\n  \tscript "/etc/keepalived/nginx_check.sh" # 执行脚本\n  \tinterval 2 \t# 每2秒检测一次nginx的运行状态\n  \tweight -20 \t# 失败一次，将自己的优先级-20\n}\n\nvrrp_instance vi_1 {\n \t\tstate master     # 状态，主节点为master，备份节点为backup\n\t\tinterface ens33    # 绑定vip的网络接口，通过ifconfig查看自己的网络接口\n    # 虚拟路由的id号,两个节点设置必须一样,可选ip最后一段使用,相同的vrid为一个组,\n    # 他将决定多播的mac地址\n \t\tvirtual_router_id 51 \n\t\tmcast_src_ip 192.168.0.107 # 本机ip地址\n \t\tpriority 100     # 节点优先级，值范围0～254，master要比backup高\n \t\tadvert_int 1     # 组播信息发送时间间隔，两个节点必须设置一样，默认为1秒\n \t\tauthentication {\t# 设置验证信息，两个节点必须一致\n    \t\tauth_type pass\n    \t\tauth_pass 1111\n \t\t}\n \t\tvirtual_ipaddress { # 虚拟ip，两个节点设置必须一样。可以设置多个，一行写一个\n  \t\t\t192.168.0.50\n \t\t}\n \n \t\ttrack_script {\n  \t\t\tchk_nginx # nginx存活状态检测脚本\n\t \t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\nnginx 服务检测脚本\n\n#!/bin/bash\na=`ps -c nginx --no-header | wc -l`\nif [ $a -eq 0 ];then\n\t/opt/nginx/sbin/nginx \t# 尝试重新启动nginx\n \tsleep 2 \t# 睡眠2秒\n \tif [ `ps -c nginx --no-header | wc -l` -eq 0 ];then\n  \tkillall keepalived \t# 启动失败，将keepalived服务杀死。将vip漂移到其它备份节点\n \tfi\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n启动keepalived服务：$ systemctl start keepalived.service\n\n\n# location字段详解\n\n参考文档：nginx location指令详解 。 通过指定模式来与客户端请求的url相匹配，基本语法如下：location [=|~|~*|^~|@] pattern {……}\n\n 1. 没有修饰符，表示：必须以指定模式开始；\n 2. = 表示：必须与指定的模式精确匹配；\n 3. ~ 表示：指定的正则表达式要区分大小写；\n 4. ~* 表示：指定的正则表达式不区分大小写；\n 5. ^~ 类似于无修饰的行为，也是以指定模式开始，不同的是，如果匹配成功，那么就停止搜索其他模式了；\n 6. @ ：定义命名location区段，这些区段客户不能访问，只可以由内部产生的请求来访问，如try_files或error_page等。\n\n查找顺序和优先级\n\n 1. 带有"="的精确匹配优先\n 2. 没有修饰符的精确匹配\n 3. 正则表达式按照他们在配置文件中定义的顺序\n 4. 带有"^~"修饰符的，开头匹配\n 5. 带有"~"或"~*"修饰符的，如果正则表达式与url匹配\n 6. 没有修饰符的，如果指定字符串与url开头匹配\n\nroot、alias指令区别\n\nlocation /img/ {\n\talias\t/var/www/image/;\n}\n#若按照上述配置的话，则访问/img/目录里面的文件时，nginx会自动去/var/www/image/目录找文件\n\n\n1\n2\n3\n4\n\n\nlocation /img/ {\n\troot\t/var/www/image/;\n}\n#若按照这种配置的话，则访问/img/目录下文件时，nginx会去/var/www/image/img/目录下找文件。\n\n\n1\n2\n3\n4\n\n\nalias 是一个目录别名的定义，root则是最上层目录的定义。 还有一个重要的区别是alias后面必须要用“/”结束， 否则会找不到文件的，而root则可有可无。\n\n\n# 操作命令\n\n问题： xshell可以访问内容，但是浏览器却访问不到内容，这时可能是防火墙的原因，请注意！ 下面命令可以解决问题。\n\n# 查看nginx服务是否已经启动\nps -ef | grep nginx\n\n# 然后查看80-端口是否被分配给了nginx\nnetstat -ntlp\n\n# 对80端口进行防火墙配置\nfirewall-cmd --zone=public --add-port=80/tcp --permanent\n\n# 重启防火墙服务\nsystemctl restart firewalld.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nnginx 服务相关命令：\n\n进入目录 /usr/local/nginx/sbin\n\n# 启动nginx\n./nginx\n\n# 查看状态\nps -ef | grep nginx\n\n# 停止nginx\n./nginx -s stop\n\n# 重新加载\n./nginx -s reload\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',charsets:{cjk:!0}},{title:"Web开发",frontmatter:{title:"Web开发",date:"2022-07-28T00:32:50.000Z",permalink:"/pages/ac114b/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/02.SpringBoot2%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/02.Web%E5%BC%80%E5%8F%91.html",relativePath:"06.Java后端/02.SpringBoot2核心技术/02.Web开发.md",key:"v-7809cc13",path:"/pages/ac114b/",headers:[{level:2,title:"SpringBoot 四大核心",slug:"springboot-四大核心",normalizedTitle:"springboot 四大核心",charIndex:2},{level:2,title:"1、SpringMVC自动配置",slug:"_1、springmvc自动配置",normalizedTitle:"1、springmvc自动配置",charIndex:132},{level:2,title:"2、【静态资源映射】",slug:"_2、【静态资源映射】",normalizedTitle:"2、【静态资源映射】",charIndex:187},{level:3,title:"WebJars映射",slug:"webjars映射",normalizedTitle:"webjars映射",charIndex:202},{level:3,title:"默认资源映射",slug:"默认资源映射",normalizedTitle:"默认资源映射",charIndex:216},{level:3,title:"首页映射",slug:"首页映射",normalizedTitle:"首页映射",charIndex:360},{level:3,title:"自定义favicon",slug:"自定义favicon",normalizedTitle:"自定义favicon",charIndex:464},{level:2,title:"3、请求参数处理",slug:"_3、请求参数处理",normalizedTitle:"3、请求参数处理",charIndex:479},{level:2,title:"4、响应原理与【内容协商】",slug:"_4、响应原理与【内容协商】",normalizedTitle:"4、响应原理与【内容协商】",charIndex:631},{level:2,title:"5、视图解析与模板引擎",slug:"_5、视图解析与模板引擎",normalizedTitle:"5、视图解析与模板引擎",charIndex:649},{level:2,title:"6、拦截器",slug:"_6、拦截器",normalizedTitle:"6、拦截器",charIndex:665},{level:2,title:"7、文件上传",slug:"_7、文件上传",normalizedTitle:"7、文件上传",charIndex:675},{level:2,title:"8、【异常处理】",slug:"_8、【异常处理】",normalizedTitle:"8、【异常处理】",charIndex:706},{level:3,title:"默认规则",slug:"默认规则",normalizedTitle:"默认规则",charIndex:719},{level:3,title:"定制错误处理逻辑",slug:"定制错误处理逻辑",normalizedTitle:"定制错误处理逻辑",charIndex:728},{level:3,title:"异常处理、异常配置原理",slug:"异常处理、异常配置原理",normalizedTitle:"异常处理、异常配置原理",charIndex:741},{level:3,title:"异常处理步骤流程",slug:"异常处理步骤流程",normalizedTitle:"异常处理步骤流程",charIndex:757},{level:2,title:"9、原生组件注入",slug:"_9、原生组件注入",normalizedTitle:"9、原生组件注入",charIndex:995},{level:2,title:"10、嵌入式Web容器",slug:"_10、嵌入式web容器",normalizedTitle:"10、嵌入式web容器",charIndex:1034},{level:2,title:"11、定制化原理",slug:"_11、定制化原理",normalizedTitle:"11、定制化原理",charIndex:1063}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"SpringBoot 四大核心 1、SpringMVC自动配置 2、【静态资源映射】 WebJars映射 默认资源映射 首页映射 自定义favicon 3、请求参数处理 4、响应原理与【内容协商】 5、视图解析与模板引擎 6、拦截器 7、文件上传 8、【异常处理】 默认规则 定制错误处理逻辑 异常处理、异常配置原理 异常处理步骤流程 9、原生组件注入 10、嵌入式Web容器 11、定制化原理",content:'# SpringBoot 四大核心\n\n * 自动配置\n * 起步依赖\n * Actuator：让你能够深入运行中的SpringBoot应用程序，可以查看程序的内部信息；\n * 命令行界面：这是SpringBoot的可选特性，主要针对Groovy语言使用；\n\n\n# 1、SpringMVC自动配置\n\ninterface WebMvcConfigurator\n\n\n1\n\n\n\n# 2、【静态资源映射】\n\n\n# WebJars映射\n\n\n# 默认资源映射\n\n 1. classpath:/META-INF/resources\n 2. classpath:/resources\n 3. classpath:/static\n 4. classpath:/public\n\n这些路径又被称为静态资源文件夹，它们的优先级依次降低。\n\n\n# 首页映射\n\n静态资源文件夹下的所有index.html被称为静态首页或者欢迎页，它们会被被/**映射， 换句话说就是，当我们访问"/"或者"/index.html"时，都会跳转到静态首页（欢迎页）。\n\n\n# 自定义favicon\n\n\n# 3、请求参数处理\n\n@RequestParam\n@RequestBody\n@PathVariable\n@CookieValue\n@RequestHeader\n@RequestAttribute\n@MatrixVariable\n@ModelAttribute\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 4、响应原理与【内容协商】\n\n\n# 5、视图解析与模板引擎\n\n\n# 6、拦截器\n\n\n# 7、文件上传\n\n拓展\n\naliyun-服务端签名直传\n\n\n# 8、【异常处理】\n\n\n# 默认规则\n\n\n# 定制错误处理逻辑\n\n\n# 异常处理、异常配置原理\n\n\n# 异常处理步骤流程\n\n * 自定义错误页 error/404.html、error/5xx.html（在静态资源文件夹下）\n * @ControllerAdvice + @ExceptionHandler\n * @ResponseStatus + 自定义异常\n * Spring 底层的异常，如：参数类型转换异常\n * 实现 HandlerExceptionResolver 处理异常\n * ErrorViewResolver 实现自定义处理异常（一般不去自定义这个）\n\n\n# 9、原生组件注入\n\nServlet、Filter和Listener。\n\n\n# 10、嵌入式Web容器\n\n更换tomcat服务器\n\n\n# 11、定制化原理',normalizedContent:'# springboot 四大核心\n\n * 自动配置\n * 起步依赖\n * actuator：让你能够深入运行中的springboot应用程序，可以查看程序的内部信息；\n * 命令行界面：这是springboot的可选特性，主要针对groovy语言使用；\n\n\n# 1、springmvc自动配置\n\ninterface webmvcconfigurator\n\n\n1\n\n\n\n# 2、【静态资源映射】\n\n\n# webjars映射\n\n\n# 默认资源映射\n\n 1. classpath:/meta-inf/resources\n 2. classpath:/resources\n 3. classpath:/static\n 4. classpath:/public\n\n这些路径又被称为静态资源文件夹，它们的优先级依次降低。\n\n\n# 首页映射\n\n静态资源文件夹下的所有index.html被称为静态首页或者欢迎页，它们会被被/**映射， 换句话说就是，当我们访问"/"或者"/index.html"时，都会跳转到静态首页（欢迎页）。\n\n\n# 自定义favicon\n\n\n# 3、请求参数处理\n\n@requestparam\n@requestbody\n@pathvariable\n@cookievalue\n@requestheader\n@requestattribute\n@matrixvariable\n@modelattribute\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 4、响应原理与【内容协商】\n\n\n# 5、视图解析与模板引擎\n\n\n# 6、拦截器\n\n\n# 7、文件上传\n\n拓展\n\naliyun-服务端签名直传\n\n\n# 8、【异常处理】\n\n\n# 默认规则\n\n\n# 定制错误处理逻辑\n\n\n# 异常处理、异常配置原理\n\n\n# 异常处理步骤流程\n\n * 自定义错误页 error/404.html、error/5xx.html（在静态资源文件夹下）\n * @controlleradvice + @exceptionhandler\n * @responsestatus + 自定义异常\n * spring 底层的异常，如：参数类型转换异常\n * 实现 handlerexceptionresolver 处理异常\n * errorviewresolver 实现自定义处理异常（一般不去自定义这个）\n\n\n# 9、原生组件注入\n\nservlet、filter和listener。\n\n\n# 10、嵌入式web容器\n\n更换tomcat服务器\n\n\n# 11、定制化原理',charsets:{cjk:!0}},{title:"数据访问",frontmatter:{title:"数据访问",date:"2022-07-28T00:33:01.000Z",permalink:"/pages/445c60/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/02.SpringBoot2%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/04.%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE.html",relativePath:"06.Java后端/02.SpringBoot2核心技术/04.数据访问.md",key:"v-72c9cbe3",path:"/pages/445c60/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"指标监控",frontmatter:{title:"指标监控",date:"2022-07-28T00:33:24.000Z",permalink:"/pages/391d50/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/02.SpringBoot2%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/08.%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7.html",relativePath:"06.Java后端/02.SpringBoot2核心技术/08.指标监控.md",key:"v-58da78da",path:"/pages/391d50/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"单元测试",frontmatter:{title:"单元测试",date:"2022-07-28T00:33:12.000Z",permalink:"/pages/ab5029/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/02.SpringBoot2%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/06.%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html",relativePath:"06.Java后端/02.SpringBoot2核心技术/06.单元测试.md",key:"v-339c9639",path:"/pages/ab5029/",headers:[{level:2,title:"JUnit5的变化",slug:"junit5的变化",normalizedTitle:"junit5的变化",charIndex:2},{level:3,title:"使用方式",slug:"使用方式",normalizedTitle:"使用方式",charIndex:491},{level:2,title:"JUnit5常用注解",slug:"junit5常用注解",normalizedTitle:"junit5常用注解",charIndex:716},{level:2,title:"断言",slug:"断言",normalizedTitle:"断言",charIndex:1192},{level:2,title:"前置条件",slug:"前置条件",normalizedTitle:"前置条件",charIndex:1231},{level:2,title:"嵌套测试",slug:"嵌套测试",normalizedTitle:"嵌套测试",charIndex:1240},{level:2,title:"参数化测试",slug:"参数化测试",normalizedTitle:"参数化测试",charIndex:1249},{level:2,title:"迁移指南",slug:"迁移指南",normalizedTitle:"迁移指南",charIndex:1259}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"JUnit5的变化 使用方式 JUnit5常用注解 断言 前置条件 嵌套测试 参数化测试 迁移指南",content:"# JUnit5的变化\n\nSpringBoot2.2.0版本开始引入Junit5作为单元测试默认库。\n\n作为最新版本的Junit框架，Junit5与之间版本的Junit框架有很大的不同。 Junit5由三个不同子项的模块组成。 JUnit5 = JUnit Platform + JUnit Jupiter + JUnit Vintage\n\n * JUnit Platform：JUnit Platform是在JVM上启动测试框架的基础，不仅支持JUnit自己的测试引擎，其它测试引擎也都可以接入。\n * JUnit Jupiter：JUnit Jupiter提供了JUnit5新的编程模型，是JUnit5新特性的核心，内部包含了一个测试引擎，用于在JUnit Platform上运行。\n * JUnit Vintage：由于JUnit已经发展多年，为了照顾老的项目，JUnit Vintage提供了兼容JUnit4.x，JUnit3.x的测试引擎。\n\n注意\n\nSpringBoot 2.4 以上版本移除了默认对Vintage的依赖，如果想要兼容JUnit4，需自行引入。\n\n\n# 使用方式\n\n以前使用方式\n\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class TestClass {\n}\n\n\n1\n2\n3\n4\n\n\nSpringBoot整合JUnit以后\n\n * 编写测试方法：@Test标注（注意：需要使用JUnit5版本注解）\n * JUnit类具有Spring的功能，@Autowired、比如@Transactional标注测试方法，测试完成后自动回滚\n\n\n# JUnit5常用注解\n\nJUnit5的注解与JUnit4的注解有所变化\n\n * @Test：表示方法是测试方法，但是与JUnit4的@Test不同，它的职责非常单一不能声明任何属性，拓展的测试将会由Jupiter提供额外测试\n * @DisplayName：为测试类或者测试方法设置展示名称\n * @BeforeEach：表示在每个单元测试之前执行\n * @AfterEach：表示在每个单元测试之后执行\n * @BeforeAll：表示在所有单元测试之前执行\n * @AfterAll：表示在所有单元测试之后执行\n * @Tag：表示单元测试类别，类似于JUnit4中的@Categories\n * @Disbaled：表示测试类或测试方法不执行，类似于JUnit4中的@Ignore\n * @Timeout：表示测试方法运行如果超过了指定时间将会返回错误结果\n * @ExtendWith：为测试类或测试方法提供扩展类引用\n * @RepeatedTest：重复测试次数\n * @ParameterizedTest：下面会有详细讲解 ->\n\n\n# 断言\n\n简单断言、数组断言、组合断言、异常断言、超时断言和快速失败。\n\n\n# 前置条件\n\n\n# 嵌套测试\n\n\n# 参数化测试\n\n\n# 迁移指南",normalizedContent:"# junit5的变化\n\nspringboot2.2.0版本开始引入junit5作为单元测试默认库。\n\n作为最新版本的junit框架，junit5与之间版本的junit框架有很大的不同。 junit5由三个不同子项的模块组成。 junit5 = junit platform + junit jupiter + junit vintage\n\n * junit platform：junit platform是在jvm上启动测试框架的基础，不仅支持junit自己的测试引擎，其它测试引擎也都可以接入。\n * junit jupiter：junit jupiter提供了junit5新的编程模型，是junit5新特性的核心，内部包含了一个测试引擎，用于在junit platform上运行。\n * junit vintage：由于junit已经发展多年，为了照顾老的项目，junit vintage提供了兼容junit4.x，junit3.x的测试引擎。\n\n注意\n\nspringboot 2.4 以上版本移除了默认对vintage的依赖，如果想要兼容junit4，需自行引入。\n\n\n# 使用方式\n\n以前使用方式\n\n@runwith(springrunner.class)\n@springboottest\npublic class testclass {\n}\n\n\n1\n2\n3\n4\n\n\nspringboot整合junit以后\n\n * 编写测试方法：@test标注（注意：需要使用junit5版本注解）\n * junit类具有spring的功能，@autowired、比如@transactional标注测试方法，测试完成后自动回滚\n\n\n# junit5常用注解\n\njunit5的注解与junit4的注解有所变化\n\n * @test：表示方法是测试方法，但是与junit4的@test不同，它的职责非常单一不能声明任何属性，拓展的测试将会由jupiter提供额外测试\n * @displayname：为测试类或者测试方法设置展示名称\n * @beforeeach：表示在每个单元测试之前执行\n * @aftereach：表示在每个单元测试之后执行\n * @beforeall：表示在所有单元测试之前执行\n * @afterall：表示在所有单元测试之后执行\n * @tag：表示单元测试类别，类似于junit4中的@categories\n * @disbaled：表示测试类或测试方法不执行，类似于junit4中的@ignore\n * @timeout：表示测试方法运行如果超过了指定时间将会返回错误结果\n * @extendwith：为测试类或测试方法提供扩展类引用\n * @repeatedtest：重复测试次数\n * @parameterizedtest：下面会有详细讲解 ->\n\n\n# 断言\n\n简单断言、数组断言、组合断言、异常断言、超时断言和快速失败。\n\n\n# 前置条件\n\n\n# 嵌套测试\n\n\n# 参数化测试\n\n\n# 迁移指南",charsets:{cjk:!0}},{title:"原理解析",frontmatter:{title:"原理解析",date:"2022-07-28T00:33:43.000Z",permalink:"/pages/2ced34/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/02.SpringBoot2%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/10.%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90.html",relativePath:"06.Java后端/02.SpringBoot2核心技术/10.原理解析.md",key:"v-13d7552e",path:"/pages/2ced34/",headers:[{level:2,title:"1、Profile功能",slug:"_1、profile功能",normalizedTitle:"1、profile功能",charIndex:2},{level:3,title:"1.1 application-profile功能",slug:"_1-1-application-profile功能",normalizedTitle:"1.1 application-profile功能",charIndex:18},{level:3,title:"1.2 @Profile条件装配功能",slug:"_1-2-profile条件装配功能",normalizedTitle:"1.2 @profile条件装配功能",charIndex:268},{level:3,title:"1.3 profile分组",slug:"_1-3-profile分组",normalizedTitle:"1.3 profile分组",charIndex:339},{level:2,title:"2、外部化配置",slug:"_2、外部化配置",normalizedTitle:"2、外部化配置",charIndex:493},{level:3,title:"2.1 外部配置源",slug:"_2-1-外部配置源",normalizedTitle:"2.1 外部配置源",charIndex:505},{level:3,title:"2.2 配置优先级",slug:"_2-2-配置优先级",normalizedTitle:"2.2 配置优先级",charIndex:551},{level:2,title:"3、自定义 starter",slug:"_3、自定义-starter",normalizedTitle:"3、自定义 starter",charIndex:820},{level:3,title:"3.1 starter启动原理",slug:"_3-1-starter启动原理",normalizedTitle:"3.1 starter启动原理",charIndex:838},{level:3,title:"3.2 自定义starter",slug:"_3-2-自定义starter",normalizedTitle:"3.2 自定义starter",charIndex:1271},{level:2,title:"4、SpringBoot原理",slug:"_4、springboot原理",normalizedTitle:"4、springboot原理",charIndex:1594},{level:3,title:"4.1 SpringBoot启动过程",slug:"_4-1-springboot启动过程",normalizedTitle:"4.1 springboot启动过程",charIndex:1666},{level:3,title:"4.2 Application Events and Listeners",slug:"_4-2-application-events-and-listeners",normalizedTitle:"4.2 application events and listeners",charIndex:1689},{level:3,title:"4.3 ApplicationRunner 与 CommandLineRunner",slug:"_4-3-applicationrunner-与-commandlinerunner",normalizedTitle:"4.3 applicationrunner 与 commandlinerunner",charIndex:1730}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"1、Profile功能 1.1 application-profile功能 1.2 @Profile条件装配功能 1.3 profile分组 2、外部化配置 2.1 外部配置源 2.2 配置优先级 3、自定义 starter 3.1 starter启动原理 3.2 自定义starter 4、SpringBoot原理 4.1 SpringBoot启动过程 4.2 Application Events and Listeners 4.3 ApplicationRunner 与 CommandLineRunner",content:'# 1、Profile功能\n\n\n# 1.1 application-profile功能\n\n * 默认配置文件 application.properties，任何时候都会加载；\n * 指定环境配置文件：application-(dev).properties；\n * 激活指定环境\n   * 配置文件激活\n   * 命令行激活：java -jar xxx.jar --spring.profiles.active=prod（修改配置文件的任意值，命令行优先）\n * 默认配置与环境配置同时生效，同名配置项，profile配置优先\n\n\n# 1.2 @Profile条件装配功能\n\n// 指定在哪种环境下，该配置会在容器内创建\n@Profile("prod")\n\n\n1\n2\n\n\n\n# 1.3 profile分组\n\nspring.profiles.group.production[0]=prod\nspring.profiles.group.production[1]=dev\n# 激活指定分组\nspring.profiles.active=production\n\n\n1\n2\n3\n4\n\n\n\n# 2、外部化配置\n\n\n# 2.1 外部配置源\n\n常用：Java属性文件、YAML文件、环境变量、命令行参数。\n\n\n# 2.2 配置优先级\n\n * From the classpath\n   * The classpath root\n   * The classpath /config package\n * From the current directory\n   * The current directory\n   * The /config subdirectory in the current directory\n   * Immediate child directories of the /config subdirectory\n\n\n# 3、自定义 starter\n\n\n# 3.1 starter启动原理\n\n * starter-pom 引入 autoconfiguration 包，starter -> autoconfiguration -> springboot-starter\n * autoconfiguration 包中配置使用 META-INF/spring.factories 中 EnableAutoConfiguration 的值，使得项目启动加载指定的自动配置类\n * 编写自动配置类 xxxAutoConfiguration -> xxxProperties\n   * @Configuration\n   * @Conditional\n   * @EnableConfigurationProperties()\n   * @Bean\n\n提示\n\n加载过程：\n\n引入starter --- xxxAutoConfiguration --- 容器中放入组件 --- 绑定xxxProperties --- 配置项\n\n\n# 3.2 自定义starter\n\n<dependencies>\n  <dependency>\n    <groupId>groupId</groupId>\n    <artifactId>xxx-spring-boot-starter</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>groupId</groupId>\n    <artifactId>xxx-spring-boot-starter-autoconfiguration</artifactId>\n  </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 4、SpringBoot原理\n\nSpring原理【Spring注解】、SpringMVC原理、自动配置原理、SpringBoot原理。\n\n\n# 4.1 SpringBoot启动过程\n\n\n# 4.2 Application Events and Listeners\n\n\n# 4.3 ApplicationRunner 与 CommandLineRunner',normalizedContent:'# 1、profile功能\n\n\n# 1.1 application-profile功能\n\n * 默认配置文件 application.properties，任何时候都会加载；\n * 指定环境配置文件：application-(dev).properties；\n * 激活指定环境\n   * 配置文件激活\n   * 命令行激活：java -jar xxx.jar --spring.profiles.active=prod（修改配置文件的任意值，命令行优先）\n * 默认配置与环境配置同时生效，同名配置项，profile配置优先\n\n\n# 1.2 @profile条件装配功能\n\n// 指定在哪种环境下，该配置会在容器内创建\n@profile("prod")\n\n\n1\n2\n\n\n\n# 1.3 profile分组\n\nspring.profiles.group.production[0]=prod\nspring.profiles.group.production[1]=dev\n# 激活指定分组\nspring.profiles.active=production\n\n\n1\n2\n3\n4\n\n\n\n# 2、外部化配置\n\n\n# 2.1 外部配置源\n\n常用：java属性文件、yaml文件、环境变量、命令行参数。\n\n\n# 2.2 配置优先级\n\n * from the classpath\n   * the classpath root\n   * the classpath /config package\n * from the current directory\n   * the current directory\n   * the /config subdirectory in the current directory\n   * immediate child directories of the /config subdirectory\n\n\n# 3、自定义 starter\n\n\n# 3.1 starter启动原理\n\n * starter-pom 引入 autoconfiguration 包，starter -> autoconfiguration -> springboot-starter\n * autoconfiguration 包中配置使用 meta-inf/spring.factories 中 enableautoconfiguration 的值，使得项目启动加载指定的自动配置类\n * 编写自动配置类 xxxautoconfiguration -> xxxproperties\n   * @configuration\n   * @conditional\n   * @enableconfigurationproperties()\n   * @bean\n\n提示\n\n加载过程：\n\n引入starter --- xxxautoconfiguration --- 容器中放入组件 --- 绑定xxxproperties --- 配置项\n\n\n# 3.2 自定义starter\n\n<dependencies>\n  <dependency>\n    <groupid>groupid</groupid>\n    <artifactid>xxx-spring-boot-starter</artifactid>\n  </dependency>\n  <dependency>\n    <groupid>groupid</groupid>\n    <artifactid>xxx-spring-boot-starter-autoconfiguration</artifactid>\n  </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 4、springboot原理\n\nspring原理【spring注解】、springmvc原理、自动配置原理、springboot原理。\n\n\n# 4.1 springboot启动过程\n\n\n# 4.2 application events and listeners\n\n\n# 4.3 applicationrunner 与 commandlinerunner',charsets:{cjk:!0}},{title:"微服务简介",frontmatter:{title:"微服务简介",date:"2022-07-28T00:33:55.000Z",permalink:"/pages/74f9dc/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/04.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/02.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%AE%80%E4%BB%8B.html",relativePath:"06.Java后端/04.微服务之谷粒商城/02.微服务简介.md",key:"v-26553830",path:"/pages/74f9dc/",headers:[{level:2,title:"进阶之路",slug:"进阶之路",normalizedTitle:"进阶之路",charIndex:161},{level:3,title:"1. 内功基础",slug:"_1-内功基础",normalizedTitle:"1. 内功基础",charIndex:170},{level:3,title:"2. 核心框架源码",slug:"_2-核心框架源码",normalizedTitle:"2. 核心框架源码",charIndex:182},{level:3,title:"3. 常用中间件",slug:"_3-常用中间件",normalizedTitle:"3. 常用中间件",charIndex:196},{level:3,title:"4. 分布式系统原理与技术",slug:"_4-分布式系统原理与技术",normalizedTitle:"4. 分布式系统原理与技术",charIndex:300},{level:3,title:"5. 架构师增强技能包【云原生 Cloud Native】",slug:"_5-架构师增强技能包【云原生-cloud-native】",normalizedTitle:"5. 架构师增强技能包【云原生 cloud native】",charIndex:465}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"进阶之路 1. 内功基础 2. 核心框架源码 3. 常用中间件 4. 分布式系统原理与技术 5. 架构师增强技能包【云原生 Cloud Native】",content:"#微服务架构的演进过程\n\n * 单一应用架构 ORM Object Relational Mapping\n * 垂直应用架构 MVC\n * 分布式服务架构 RPC Remote Prodedure Call\n * 流动计算架构 SOA Service-Oriented Architecture\n * 微服务架构\n\n\n# 进阶之路\n\n\n# 1. 内功基础\n\n\n# 2. 核心框架源码\n\n\n# 3. 常用中间件\n\n * 数据库\n * 消息队列MQ\n * 检索ElasticSearch\n * 缓存redis\n * 存储minio\n * 调度\n * 新生代技术（Etcd、PostgreSQL）\n\n\n# 4. 分布式系统原理与技术\n\n 1.  服务注册\n 2.  服务发现\n 3.  远程调用\n 4.  负载均衡\n 5.  服务熔断\n 6.  配置管理\n 7.  链路追踪\n 8.  认证授权\n 9.  “三高问题”：高并发、高性能和高可用\n 10. 分布式计算\n 11. 分布式事务\n 12. 服务代理\n 13. 监控告警\n\n\n# 5. 架构师增强技能包【云原生 Cloud Native】\n\n 1. 容器化（Docker）\n 2. 服务编排（K8s）\n 3. CI / CD\n 4. 云平台应用架构与设计\n    1. 弹性实例\n    2. 对象存储\n    3. 负载均衡\n    4. 内容分发网络 CDN\n    5. 中间件集群\n    6. 安全系统\n 5. 边缘计算",normalizedContent:"#微服务架构的演进过程\n\n * 单一应用架构 orm object relational mapping\n * 垂直应用架构 mvc\n * 分布式服务架构 rpc remote prodedure call\n * 流动计算架构 soa service-oriented architecture\n * 微服务架构\n\n\n# 进阶之路\n\n\n# 1. 内功基础\n\n\n# 2. 核心框架源码\n\n\n# 3. 常用中间件\n\n * 数据库\n * 消息队列mq\n * 检索elasticsearch\n * 缓存redis\n * 存储minio\n * 调度\n * 新生代技术（etcd、postgresql）\n\n\n# 4. 分布式系统原理与技术\n\n 1.  服务注册\n 2.  服务发现\n 3.  远程调用\n 4.  负载均衡\n 5.  服务熔断\n 6.  配置管理\n 7.  链路追踪\n 8.  认证授权\n 9.  “三高问题”：高并发、高性能和高可用\n 10. 分布式计算\n 11. 分布式事务\n 12. 服务代理\n 13. 监控告警\n\n\n# 5. 架构师增强技能包【云原生 cloud native】\n\n 1. 容器化（docker）\n 2. 服务编排（k8s）\n 3. ci / cd\n 4. 云平台应用架构与设计\n    1. 弹性实例\n    2. 对象存储\n    3. 负载均衡\n    4. 内容分发网络 cdn\n    5. 中间件集群\n    6. 安全系统\n 5. 边缘计算",charsets:{cjk:!0}},{title:"服务端环境搭建",frontmatter:{title:"服务端环境搭建",date:"2022-07-28T00:34:09.000Z",permalink:"/pages/ef266f/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/04.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/04.%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",relativePath:"06.Java后端/04.微服务之谷粒商城/04.服务端环境搭建.md",key:"v-a0918bee",path:"/pages/ef266f/",headers:[{level:2,title:"安装虚拟机",slug:"安装虚拟机",normalizedTitle:"安装虚拟机",charIndex:281},{level:3,title:"1、VMWare",slug:"_1、vmware",normalizedTitle:"1、vmware",charIndex:291},{level:3,title:"2、Virtualbox + Vagrant",slug:"_2、virtualbox-vagrant",normalizedTitle:"2、virtualbox + vagrant",charIndex:400},{level:3,title:"3、密码登录",slug:"_3、密码登录",normalizedTitle:"3、密码登录",charIndex:580},{level:3,title:"4. 虚拟机网络连接模式",slug:"_4-虚拟机网络连接模式",normalizedTitle:"4. 虚拟机网络连接模式",charIndex:706},{level:2,title:"Docker 安装及容器创建",slug:"docker-安装及容器创建",normalizedTitle:"docker 安装及容器创建",charIndex:966},{level:3,title:"1、安装Docker",slug:"_1、安装docker",normalizedTitle:"1、安装docker",charIndex:985},{level:3,title:"2、安装MySQL",slug:"_2、安装mysql",normalizedTitle:"2、安装mysql",charIndex:1192},{level:3,title:"3、安装Redis",slug:"_3、安装redis",normalizedTitle:"3、安装redis",charIndex:1961},{level:3,title:"4、安装ElasticSearch和Kibana",slug:"_4、安装elasticsearch和kibana",normalizedTitle:"4、安装elasticsearch和kibana",charIndex:2208},{level:3,title:"5、安装Nginx",slug:"_5、安装nginx",normalizedTitle:"5、安装nginx",charIndex:3147},{level:3,title:"6、安装RabbitMQ",slug:"_6、安装rabbitmq",normalizedTitle:"6、安装rabbitmq",charIndex:3670},{level:3,title:"7、安装Zipkin",slug:"_7、安装zipkin",normalizedTitle:"7、安装zipkin",charIndex:3999},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:4065}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"安装虚拟机 1、VMWare 2、Virtualbox + Vagrant 3、密码登录 4. 虚拟机网络连接模式 Docker 安装及容器创建 1、安装Docker 2、安装MySQL 3、安装Redis 4、安装ElasticSearch和Kibana 5、安装Nginx 6、安装RabbitMQ 7、安装Zipkin 参考文档",content:'LINUX                                            \n系列            Redhat 系列                          Debian 系列\n版本            RHEL、Fedora Core、CentOS、OpenSUSE   Debian、Ubuntu\n包管理器（类比npm）   yum                                apt-get\n\n> 注： 由于目前服务器大多使用CentOS，所以我们就使用CentOS系统来学习配置环境。\n\n\n# 安装虚拟机\n\n\n# 1、VMWare\n\n 1. 下载VMware\n 2. 下载CentOS镜像（下载这种系统镜像特别慢，文件大小一般都在10G左右）\n 3. 创建虚拟机\n\n安装指导：VMware 安装 Centos7 超详细过程\n\n\n# 2、Virtualbox + Vagrant\n\n 1. 安装Virtualbox\n 2. 安装Vagrant\n 3. 安装CentOS镜像\n\n// 由于被墙了，下载镜像时特别慢，又不会设置代理\nvagrant box add centos/7 CentOS-7-x86_64-Vagrant-2004_01.VirtualBox.box\n\n\n1\n2\n\n\n\n# 3、密码登录\n\nvi /etc/ssh/sshd_config\n\n修改 PasswordAuthentication no=>yes\n重启服务 service sshd restart\n然后就可以使用ssh工具连接了\n\n\n1\n2\n3\n4\n5\n\n\n\n# 4. 虚拟机网络连接模式\n\n桥接模式\n\n此模式下，虚拟机的操作系统就像和物理机同一段网络中的物理机一样，它可以访问网络中的任何机器，同时只要物理机可以访问网络，虚拟机也可以实现上网。\n\nNAT模式\n\n使用NAT模式，就是让虚拟机借助NAT（网络地址转换）功能，通过物理机来访问网络。\n\nHost-only模式\n\n将虚拟机和真实的物理环境隔离开来，那么此模式是首选。此模式下的所有虚拟机可以相互访问， 但和真实的物理网络环境是隔离开的，此模式下的IP信息，是由host-only虚拟网络的DHCP服务器来分配的。\n\n\n# Docker 安装及容器创建\n\n\n# 1、安装Docker\n\n 1. 安装教程见官网：Install Docker Engine on CentOS\n 2. 设置Docker开机自启\n\nsudo systemctl enable docker\n\n\n1\n\n 3. 基于Docker安装软件 （常用命令讲解） --name：给容器起一个名 -p：端口映射，宿主机 : 容器 -v：挂载自定义配置；自定义配置 : 容器内部配置 -d：后台运行的镜像\n\n\n# 2、安装MySQL\n\n 1. 下载MySQL镜像\n\ndocker pull mysql:5.7\n\n\n1\n\n 2. Docker启动MySQL\n\ndocker run -p 3306:3306 --name mysql \\\n-v /mtdata/mysql/log:/var/log/mysql \\\n-v /mtdata/mysql/data:/var/lib/mysql \\\n-v /mydata/mysql/conf:/etc/mysql \\\n-e MYSQL_ROOT_PASSWORD=root \\\n-d mysql:5.7\n\n\n1\n2\n3\n4\n5\n6\n\n 3. 配置MySQL\n\n[client]\ndefault-character-set=utf-8\n\n[mysql]\ndefault-character-set=utf-8\n\n[mysql]\ninit-connect=\'SET collation_connection = utf8_unicode_ci\'\ninit-connect=\'SET NAMES utf8\'\ncharacter-set-server=utf8\ncollation-server=utf8_unicode_ci\nskip-character-set-client-handshake\nskip-name-resolve\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n 4. 进入MySQL容器\n\ndocker exec -it mysql /bin/bash\n\n\n1\n\n 5. 设置MySQL开机自启\n\ndocker update mysql --restart=always\n\n\n1\n\n 6. Docker重启容器\n\ndockers restart mysql\n\n\n1\n\n\n\n# 3、安装Redis\n\n相似步骤参考上述教程 Docker启动Redis docker run -p 6379:6379 --name redis -v /mydata/redis/data:/data\n-v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf\n-d redis redis-server /etc/redis/redis.conf 容器内部连接进行测试 docker exec -it redis redis-cli\n\n\n# 4、安装ElasticSearch和Kibana\n\n 1. 相似步骤参考上述教程\n 2. 创建并编辑配置文件\n\nmkdir -p /mydata/elasticsearch/config\nmkdir -p /mydata/elasticsearch/data\necho "http.host: 0.0.0.0">>/mydata/elasticsearch/config/elasticsearch.yml\n\n\n1\n2\n3\n\n 3. Docker启动ElasticSearch\n\ndocker run --name elasticsearch -p 9200:9200 -p 9300:9300 \\\n-e "discovery.type=single-node" \\\n-e ES_JAVA_OPTS="-Xms64m -Xmx512m" \\\n-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \\\n-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data \\\n-v /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins \\\n-d elasticsearch:7.4.2\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 4. 安装过程遇到的问题\n\n * 修改文件夹权限：chmod -R 777\n * 查看当前文件夹的权限情况：ll\n * 查看耨个容器的运行日志：docker logs elasticsearch\n * 查看容器：docker ps -a\n\n 5. Docker启动Kibana\n\ndocker run --name kibana -e ELASTICSEARCH_HOSTS=http://192.168.56.10:9200 -p 5601:5601 \\\n- d kibana:7.4.2\n\n\n1\n2\n\n\n提示\n\n注意：192.168.56.10:9200是当前ES运行的端口。\n\n\n# 5、安装Nginx\n\n 1. 随便启动一个Nginx实例，拷贝出配置\n\ndocker run -p 80:80 --name nginx -d nginx:1.10\n\n\n1\n\n 2. 将容器内的配置文件拷贝到当前目录\n\ndocker container cp nginx:/etc/nginx .\n\n\n1\n\n 3. 修改文件名称：mv nginx conf，把这个文件夹移到/mydata/nginx下\n 4. 终止原容器：docker stop nginx\n 5. 删除原容器：docker rm nginx\n 6. Docker启动新的Nginx\n\ndocker run -p 80:80 --name nginx \\\n-v /mydata/nginx/html:/usr/share/nginx/html \\\n-v /mydata/nginx/logs:/var/log/nginx \\\n-v /mydata/nginx/conf:/etc/nginx \\\n-d nginx:1.10\n\n\n1\n2\n3\n4\n5\n\n\n> 这里需要注意，nginx 容器内存在的 default.cong 文件，该文件会被 nginx.conf 读取。\n\n\n# 6、安装RabbitMQ\n\n 1. 相似步骤参考上述教程\n 2. Docker启动RabbitMQ\n\ndocker run -d --name rabbitmq -p 5671:5671 -p 5672:5672 \\\n-p 4369:4369 -p 25672:25672 -p 15671:15671 -p 15672:15672 \\\nrabbitmq:management\n\n\n1\n2\n3\n\n\n端口说明：\n\n * 4369，25672：Erlang 发现&集群端口\n * 5672，5671：AMOP 端口\n * 15672：web 管理后台端口\n * 61613，61614：STOMP 协议端口\n * 1883，8883：MQTT 协议端口\n\n\n# 7、安装Zipkin\n\ndocker run -d -p 9411:9411 openzipkin/zipkin\n\n\n1\n\n\n\n# 参考文档\n\n 1. Linux文件目录结构一览表\n 2. Linux 命令大全\n 3. VirtualBox中的虚拟网络环境设置\n 4. VMware虚拟机三种网络模式详解',normalizedContent:'linux                                            \n系列            redhat 系列                          debian 系列\n版本            rhel、fedora core、centos、opensuse   debian、ubuntu\n包管理器（类比npm）   yum                                apt-get\n\n> 注： 由于目前服务器大多使用centos，所以我们就使用centos系统来学习配置环境。\n\n\n# 安装虚拟机\n\n\n# 1、vmware\n\n 1. 下载vmware\n 2. 下载centos镜像（下载这种系统镜像特别慢，文件大小一般都在10g左右）\n 3. 创建虚拟机\n\n安装指导：vmware 安装 centos7 超详细过程\n\n\n# 2、virtualbox + vagrant\n\n 1. 安装virtualbox\n 2. 安装vagrant\n 3. 安装centos镜像\n\n// 由于被墙了，下载镜像时特别慢，又不会设置代理\nvagrant box add centos/7 centos-7-x86_64-vagrant-2004_01.virtualbox.box\n\n\n1\n2\n\n\n\n# 3、密码登录\n\nvi /etc/ssh/sshd_config\n\n修改 passwordauthentication no=>yes\n重启服务 service sshd restart\n然后就可以使用ssh工具连接了\n\n\n1\n2\n3\n4\n5\n\n\n\n# 4. 虚拟机网络连接模式\n\n桥接模式\n\n此模式下，虚拟机的操作系统就像和物理机同一段网络中的物理机一样，它可以访问网络中的任何机器，同时只要物理机可以访问网络，虚拟机也可以实现上网。\n\nnat模式\n\n使用nat模式，就是让虚拟机借助nat（网络地址转换）功能，通过物理机来访问网络。\n\nhost-only模式\n\n将虚拟机和真实的物理环境隔离开来，那么此模式是首选。此模式下的所有虚拟机可以相互访问， 但和真实的物理网络环境是隔离开的，此模式下的ip信息，是由host-only虚拟网络的dhcp服务器来分配的。\n\n\n# docker 安装及容器创建\n\n\n# 1、安装docker\n\n 1. 安装教程见官网：install docker engine on centos\n 2. 设置docker开机自启\n\nsudo systemctl enable docker\n\n\n1\n\n 3. 基于docker安装软件 （常用命令讲解） --name：给容器起一个名 -p：端口映射，宿主机 : 容器 -v：挂载自定义配置；自定义配置 : 容器内部配置 -d：后台运行的镜像\n\n\n# 2、安装mysql\n\n 1. 下载mysql镜像\n\ndocker pull mysql:5.7\n\n\n1\n\n 2. docker启动mysql\n\ndocker run -p 3306:3306 --name mysql \\\n-v /mtdata/mysql/log:/var/log/mysql \\\n-v /mtdata/mysql/data:/var/lib/mysql \\\n-v /mydata/mysql/conf:/etc/mysql \\\n-e mysql_root_password=root \\\n-d mysql:5.7\n\n\n1\n2\n3\n4\n5\n6\n\n 3. 配置mysql\n\n[client]\ndefault-character-set=utf-8\n\n[mysql]\ndefault-character-set=utf-8\n\n[mysql]\ninit-connect=\'set collation_connection = utf8_unicode_ci\'\ninit-connect=\'set names utf8\'\ncharacter-set-server=utf8\ncollation-server=utf8_unicode_ci\nskip-character-set-client-handshake\nskip-name-resolve\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n 4. 进入mysql容器\n\ndocker exec -it mysql /bin/bash\n\n\n1\n\n 5. 设置mysql开机自启\n\ndocker update mysql --restart=always\n\n\n1\n\n 6. docker重启容器\n\ndockers restart mysql\n\n\n1\n\n\n\n# 3、安装redis\n\n相似步骤参考上述教程 docker启动redis docker run -p 6379:6379 --name redis -v /mydata/redis/data:/data\n-v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf\n-d redis redis-server /etc/redis/redis.conf 容器内部连接进行测试 docker exec -it redis redis-cli\n\n\n# 4、安装elasticsearch和kibana\n\n 1. 相似步骤参考上述教程\n 2. 创建并编辑配置文件\n\nmkdir -p /mydata/elasticsearch/config\nmkdir -p /mydata/elasticsearch/data\necho "http.host: 0.0.0.0">>/mydata/elasticsearch/config/elasticsearch.yml\n\n\n1\n2\n3\n\n 3. docker启动elasticsearch\n\ndocker run --name elasticsearch -p 9200:9200 -p 9300:9300 \\\n-e "discovery.type=single-node" \\\n-e es_java_opts="-xms64m -xmx512m" \\\n-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \\\n-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data \\\n-v /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins \\\n-d elasticsearch:7.4.2\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 4. 安装过程遇到的问题\n\n * 修改文件夹权限：chmod -r 777\n * 查看当前文件夹的权限情况：ll\n * 查看耨个容器的运行日志：docker logs elasticsearch\n * 查看容器：docker ps -a\n\n 5. docker启动kibana\n\ndocker run --name kibana -e elasticsearch_hosts=http://192.168.56.10:9200 -p 5601:5601 \\\n- d kibana:7.4.2\n\n\n1\n2\n\n\n提示\n\n注意：192.168.56.10:9200是当前es运行的端口。\n\n\n# 5、安装nginx\n\n 1. 随便启动一个nginx实例，拷贝出配置\n\ndocker run -p 80:80 --name nginx -d nginx:1.10\n\n\n1\n\n 2. 将容器内的配置文件拷贝到当前目录\n\ndocker container cp nginx:/etc/nginx .\n\n\n1\n\n 3. 修改文件名称：mv nginx conf，把这个文件夹移到/mydata/nginx下\n 4. 终止原容器：docker stop nginx\n 5. 删除原容器：docker rm nginx\n 6. docker启动新的nginx\n\ndocker run -p 80:80 --name nginx \\\n-v /mydata/nginx/html:/usr/share/nginx/html \\\n-v /mydata/nginx/logs:/var/log/nginx \\\n-v /mydata/nginx/conf:/etc/nginx \\\n-d nginx:1.10\n\n\n1\n2\n3\n4\n5\n\n\n> 这里需要注意，nginx 容器内存在的 default.cong 文件，该文件会被 nginx.conf 读取。\n\n\n# 6、安装rabbitmq\n\n 1. 相似步骤参考上述教程\n 2. docker启动rabbitmq\n\ndocker run -d --name rabbitmq -p 5671:5671 -p 5672:5672 \\\n-p 4369:4369 -p 25672:25672 -p 15671:15671 -p 15672:15672 \\\nrabbitmq:management\n\n\n1\n2\n3\n\n\n端口说明：\n\n * 4369，25672：erlang 发现&集群端口\n * 5672，5671：amop 端口\n * 15672：web 管理后台端口\n * 61613，61614：stomp 协议端口\n * 1883，8883：mqtt 协议端口\n\n\n# 7、安装zipkin\n\ndocker run -d -p 9411:9411 openzipkin/zipkin\n\n\n1\n\n\n\n# 参考文档\n\n 1. linux文件目录结构一览表\n 2. linux 命令大全\n 3. virtualbox中的虚拟网络环境设置\n 4. vmware虚拟机三种网络模式详解',charsets:{cjk:!0}},{title:"视频教程目录",frontmatter:{title:"视频教程目录",date:"2022-07-28T00:34:23.000Z",permalink:"/pages/017f58/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/04.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/06.%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95.html",relativePath:"06.Java后端/04.微服务之谷粒商城/06.视频教程目录.md",key:"v-6af311b1",path:"/pages/017f58/",headers:[{level:2,title:"分布式基础篇【101p】",slug:"分布式基础篇【101p】",normalizedTitle:"分布式基础篇【101p】",charIndex:8},{level:3,title:"章节内容",slug:"章节内容",normalizedTitle:"章节内容",charIndex:25},{level:3,title:"分布式基础篇总结",slug:"分布式基础篇总结",normalizedTitle:"分布式基础篇总结",charIndex:441},{level:2,title:"分布式高级篇【238p】",slug:"分布式高级篇【238p】",normalizedTitle:"分布式高级篇【238p】",charIndex:592},{level:3,title:"章节内容",slug:"章节内容-2",normalizedTitle:"章节内容",charIndex:25},{level:3,title:"分布式高级篇总结",slug:"分布式高级篇总结",normalizedTitle:"分布式高级篇总结",charIndex:2269},{level:2,title:"集群部署篇【69p】",slug:"集群部署篇【69p】",normalizedTitle:"集群部署篇【69p】",charIndex:2461},{level:3,title:"章节内容",slug:"章节内容-3",normalizedTitle:"章节内容",charIndex:25}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"分布式基础篇【101p】 章节内容 分布式基础篇总结 分布式高级篇【238p】 章节内容 分布式高级篇总结 集群部署篇【69p】 章节内容",content:"架构图\n\n\n# 分布式基础篇【101p】\n\n\n# 章节内容\n\n 1. 001-019：架构图简介，虚拟机、Docker、MySQL、Redis环境搭建\n 2. 020-027：SpringCloud Alibaba使用, 服务中心nacos使用, 配置中心nacos使用, 网关SpringCloud Gateway使用\n 3. 028-044：前端介绍: ES、Vue基础语法讲解等（学习Vue就是为了编写后台系统管理产品的）\n 4. 045-100：API编写【第1阶段】\n    1. 045-058：三级菜单前后端联调加前端效果实现\n    2. 059-069：品牌管理【涉及的内容：OSS开通和使用、数据校验、统一处理异常和JSR303校验】\n    3. 070-082：属性分组、平台属性【涉及到电商网站的两个基本概念】\n    4. 083-092：新增商品\n    5. 093-100：仓库管理（增加的几节商品管理）\n 5. 101：分布式基础篇完结\n\n\n# 分布式基础篇总结\n\n到这里，分布式基础篇就完结了。那么学完这篇内容，掌握了哪些内容了呢！\n\n首先能够搭建服务端基础环境（按照教程可以搭建，明白相关指令的意思）；\n\n能够搭建微服务项目目录结构；\n\n集成微服务所必须的三部分（服务中心、配置中心和网关）；\n\n掌握前后端属性校验、自定义属性校验器；\n\n\n# 分布式高级篇【238p】\n\n\n# 章节内容\n\n 6.  02-127：全文检索 ElasticSearch讲解, 入门到进阶再到整合【第2阶段】\n     \n     > ElasticSearch 和可视化界面 Kibana，关于ES的原理及其使用和 Kibana 的使用，后续再转向学习。\n\n 7.  128-140：商城业务【第1阶段】（gulimall.com）【第1阶段】\n     \n     > 商品上架、首页以及Nginx搭建域名访问环境。 该段课程结束后，也就伴随着后端商品管理系统开发完毕，后面就需要开发商城前台页面了。\n\n 8.  141-150：性能压测【至关重要的一点】【第2阶段】\n     \n     > 指标：吞吐量、响应时间和错误率。JMeter的使用。\n\n 9.  151-172：缓存、分布式锁【理论部分】【第1阶段】\n     \n     > 151-158：本地缓存； 159-166：分布式锁、redisson； 167-172：SpringCache；\n\n 10. 173-325[153p]：商城业务【SpringBoot、业务集群】【第1阶段】\n\n 11. 173-192[20p]：商城业务，检索服务（search.gulimall.com）【第2阶段】\n     \n     > 主要依赖于前面的ElasticSearch的知识\n\n 12. 193-202[10p]：商城业务，异步JUC\n     \n     > 商品详情部分需要使用。\n\n 13. 203-210[8p]：商城业务，商品详情（item.gulimall.com）\n\n 14. 211-235[25p]：商城业务，认证服务（auth.gulimall.com | login.gulimall.com | reg.gulimall.com）\n     \n     1. 注册阶段（手机验证码校验问题、密码加密问题）\n     2. OAuth2.0 登录问题\n     3. 分布式session使用问题、SpringSession\n     4. 单点登录流程（实现思路讲解及效果演示）\n\n 15. 236-247[12p]：商城业务，购物车（cart.gulimall.com）\n\n 16. 248-261[14p]：商城业务，消息队列 【RabbitMQ】\n     \n     > 简单介绍一下MQ以及初步了解RabbirMQ的相关概念。后续订单服务模块需要使用MQ。\n\n 17. 262-283[22p]：商城业务，订单服务1（order.gulimall.com）\n     \n     > Feign远程调用请求头丢失问题、幂等性问题、\n\n 18. 284-291[8p]：商城业务，分布式事务\n     \n     > CAP定理、BASE理论\n     > \n     > 分布式几种事务：\n     > \n     > 两阶段提交（2PC）XA协议\n     > \n     > 补偿事务（TCC）\n     > \n     > 本地消息表（异步确保）\n     > \n     > MQ 事务消息\n\n 19. 292-300[9p]：商城业务，订单服务2\n     \n     > 引入RabbitMQ，库存锁相关操作、定时关单功能。\n\n 20. 301-303[3p]：商城业务，支付（接入支付宝）\n\n 21. 304-310[7p]：商城业务，订单服务3\n     \n     > 订单最后的支付功能实现，收单\n\n 22. 311-325[15p]：商城业务，秒杀服务\n     \n     > 秒杀商品上架涉及定时任务\n     > \n     > 秒杀业务涉及幂等性保证\n\n 23. 326-335[10p]：Sentinel 使用（熔断、降级、限流）【第1阶段】\n\n 24. 336-338：Sleuth + Zipkin 使用（服务追踪）【第1阶段】\n\n 25. 339：分布式高级篇完结\n\n\n# 分布式高级篇总结\n\n 1.  Reactive&webFlux\n 2.  接口幂等性\n 3.  本地事务&分布式事务\n 4.  性能与压力测试\n 5.  缓存&分布式锁\n 6.  ElasticSearch\n 7.  异步&线程池\n 8.  单点登录与社交登录\n 9.  RabbitMQ\n 10. 支付\n 11. 定时任务与分布式调度\n 12. SpringCloud组件\n\n\n# 集群部署篇【69p】\n\n提示\n\n第3部分开始，就不敲代码了哦。这部分概念性内容很多，要理解、要会实际操作，解决问题能力要强。\n\n集群学习可能需要两台电脑，目前如果想学的话，可能有些困难，暂时就不看这些了。\n\n\n# 章节内容\n\n 26. 340-360：k8s(kubernetes) 和 kubesphere 使用【可直接学习】\n 27. 361-370：集群 cluster【集群，经常出现的一个单词】\n 28. 371-407：部署、流水线\n     1. k8s部署 MySQL、部署 Redis、部署 ElasticSearch & Kibana、部署 RabbitMQ、部署 Nacos、部署 Zipkin、部署 Sentinel、部署应用\n     2. 微服务打包成 Docker 镜像\n     3. Sonar 代码质量分析\n     4. Jenkins 流水线部署\n     5. 线上预警和监控\n 29. 408：集群部署篇完结",normalizedContent:"架构图\n\n\n# 分布式基础篇【101p】\n\n\n# 章节内容\n\n 1. 001-019：架构图简介，虚拟机、docker、mysql、redis环境搭建\n 2. 020-027：springcloud alibaba使用, 服务中心nacos使用, 配置中心nacos使用, 网关springcloud gateway使用\n 3. 028-044：前端介绍: es、vue基础语法讲解等（学习vue就是为了编写后台系统管理产品的）\n 4. 045-100：api编写【第1阶段】\n    1. 045-058：三级菜单前后端联调加前端效果实现\n    2. 059-069：品牌管理【涉及的内容：oss开通和使用、数据校验、统一处理异常和jsr303校验】\n    3. 070-082：属性分组、平台属性【涉及到电商网站的两个基本概念】\n    4. 083-092：新增商品\n    5. 093-100：仓库管理（增加的几节商品管理）\n 5. 101：分布式基础篇完结\n\n\n# 分布式基础篇总结\n\n到这里，分布式基础篇就完结了。那么学完这篇内容，掌握了哪些内容了呢！\n\n首先能够搭建服务端基础环境（按照教程可以搭建，明白相关指令的意思）；\n\n能够搭建微服务项目目录结构；\n\n集成微服务所必须的三部分（服务中心、配置中心和网关）；\n\n掌握前后端属性校验、自定义属性校验器；\n\n\n# 分布式高级篇【238p】\n\n\n# 章节内容\n\n 6.  02-127：全文检索 elasticsearch讲解, 入门到进阶再到整合【第2阶段】\n     \n     > elasticsearch 和可视化界面 kibana，关于es的原理及其使用和 kibana 的使用，后续再转向学习。\n\n 7.  128-140：商城业务【第1阶段】（gulimall.com）【第1阶段】\n     \n     > 商品上架、首页以及nginx搭建域名访问环境。 该段课程结束后，也就伴随着后端商品管理系统开发完毕，后面就需要开发商城前台页面了。\n\n 8.  141-150：性能压测【至关重要的一点】【第2阶段】\n     \n     > 指标：吞吐量、响应时间和错误率。jmeter的使用。\n\n 9.  151-172：缓存、分布式锁【理论部分】【第1阶段】\n     \n     > 151-158：本地缓存； 159-166：分布式锁、redisson； 167-172：springcache；\n\n 10. 173-325[153p]：商城业务【springboot、业务集群】【第1阶段】\n\n 11. 173-192[20p]：商城业务，检索服务（search.gulimall.com）【第2阶段】\n     \n     > 主要依赖于前面的elasticsearch的知识\n\n 12. 193-202[10p]：商城业务，异步juc\n     \n     > 商品详情部分需要使用。\n\n 13. 203-210[8p]：商城业务，商品详情（item.gulimall.com）\n\n 14. 211-235[25p]：商城业务，认证服务（auth.gulimall.com | login.gulimall.com | reg.gulimall.com）\n     \n     1. 注册阶段（手机验证码校验问题、密码加密问题）\n     2. oauth2.0 登录问题\n     3. 分布式session使用问题、springsession\n     4. 单点登录流程（实现思路讲解及效果演示）\n\n 15. 236-247[12p]：商城业务，购物车（cart.gulimall.com）\n\n 16. 248-261[14p]：商城业务，消息队列 【rabbitmq】\n     \n     > 简单介绍一下mq以及初步了解rabbirmq的相关概念。后续订单服务模块需要使用mq。\n\n 17. 262-283[22p]：商城业务，订单服务1（order.gulimall.com）\n     \n     > feign远程调用请求头丢失问题、幂等性问题、\n\n 18. 284-291[8p]：商城业务，分布式事务\n     \n     > cap定理、base理论\n     > \n     > 分布式几种事务：\n     > \n     > 两阶段提交（2pc）xa协议\n     > \n     > 补偿事务（tcc）\n     > \n     > 本地消息表（异步确保）\n     > \n     > mq 事务消息\n\n 19. 292-300[9p]：商城业务，订单服务2\n     \n     > 引入rabbitmq，库存锁相关操作、定时关单功能。\n\n 20. 301-303[3p]：商城业务，支付（接入支付宝）\n\n 21. 304-310[7p]：商城业务，订单服务3\n     \n     > 订单最后的支付功能实现，收单\n\n 22. 311-325[15p]：商城业务，秒杀服务\n     \n     > 秒杀商品上架涉及定时任务\n     > \n     > 秒杀业务涉及幂等性保证\n\n 23. 326-335[10p]：sentinel 使用（熔断、降级、限流）【第1阶段】\n\n 24. 336-338：sleuth + zipkin 使用（服务追踪）【第1阶段】\n\n 25. 339：分布式高级篇完结\n\n\n# 分布式高级篇总结\n\n 1.  reactive&webflux\n 2.  接口幂等性\n 3.  本地事务&分布式事务\n 4.  性能与压力测试\n 5.  缓存&分布式锁\n 6.  elasticsearch\n 7.  异步&线程池\n 8.  单点登录与社交登录\n 9.  rabbitmq\n 10. 支付\n 11. 定时任务与分布式调度\n 12. springcloud组件\n\n\n# 集群部署篇【69p】\n\n提示\n\n第3部分开始，就不敲代码了哦。这部分概念性内容很多，要理解、要会实际操作，解决问题能力要强。\n\n集群学习可能需要两台电脑，目前如果想学的话，可能有些困难，暂时就不看这些了。\n\n\n# 章节内容\n\n 26. 340-360：k8s(kubernetes) 和 kubesphere 使用【可直接学习】\n 27. 361-370：集群 cluster【集群，经常出现的一个单词】\n 28. 371-407：部署、流水线\n     1. k8s部署 mysql、部署 redis、部署 elasticsearch & kibana、部署 rabbitmq、部署 nacos、部署 zipkin、部署 sentinel、部署应用\n     2. 微服务打包成 docker 镜像\n     3. sonar 代码质量分析\n     4. jenkins 流水线部署\n     5. 线上预警和监控\n 29. 408：集群部署篇完结",charsets:{cjk:!0}},{title:"知识点详解",frontmatter:{title:"知识点详解",date:"2022-07-28T00:34:35.000Z",permalink:"/pages/47e1e1/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/04.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/08.%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AF%A6%E8%A7%A3.html",relativePath:"06.Java后端/04.微服务之谷粒商城/08.知识点详解.md",key:"v-38855b18",path:"/pages/47e1e1/",headers:[{level:2,title:"SpringBoot日志",slug:"springboot日志",normalizedTitle:"springboot日志",charIndex:2},{level:2,title:"Servlet、Filter、Listener和Interceptor",slug:"servlet、filter、listener和interceptor",normalizedTitle:"servlet、filter、listener和interceptor",charIndex:157},{level:2,title:"缓存穿透、击穿和雪崩",slug:"缓存穿透、击穿和雪崩",normalizedTitle:"缓存穿透、击穿和雪崩",charIndex:612},{level:2,title:"JSR303 校验规则",slug:"jsr303-校验规则",normalizedTitle:"jsr303 校验规则",charIndex:1203},{level:2,title:"锁",slug:"锁",normalizedTitle:"锁",charIndex:985},{level:3,title:"悲观锁、乐观锁",slug:"悲观锁、乐观锁",normalizedTitle:"悲观锁、乐观锁",charIndex:2973},{level:3,title:"自旋锁",slug:"自旋锁",normalizedTitle:"自旋锁",charIndex:3215},{level:3,title:"偏向锁 -> 轻量级锁 -> 重量级锁",slug:"偏向锁-轻量级锁-重量级锁",normalizedTitle:"偏向锁 -&gt; 轻量级锁 -&gt; 重量级锁",charIndex:null},{level:3,title:"可重入锁（递归锁）",slug:"可重入锁-递归锁",normalizedTitle:"可重入锁（递归锁）",charIndex:3277},{level:3,title:"公平锁、非公平锁",slug:"公平锁、非公平锁",normalizedTitle:"公平锁、非公平锁",charIndex:3398},{level:3,title:"可中断锁",slug:"可中断锁",normalizedTitle:"可中断锁",charIndex:3411},{level:3,title:"读写锁、共享锁、互斥锁",slug:"读写锁、共享锁、互斥锁",normalizedTitle:"读写锁、共享锁、互斥锁",charIndex:3420},{level:2,title:"事务 transactional",slug:"事务-transactional",normalizedTitle:"事务 transactional",charIndex:3472},{level:3,title:"数据库事务特性",slug:"数据库事务特性",normalizedTitle:"数据库事务特性",charIndex:3493},{level:3,title:"事务的隔离级别（事务并发能力）",slug:"事务的隔离级别-事务并发能力",normalizedTitle:"事务的隔离级别（事务并发能力）",charIndex:3574},{level:3,title:"传播行为",slug:"传播行为",normalizedTitle:"传播行为",charIndex:3643}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"SpringBoot日志 Servlet、Filter、Listener和Interceptor 缓存穿透、击穿和雪崩 JSR303 校验规则 锁 悲观锁、乐观锁 自旋锁 偏向锁 -> 轻量级锁 -> 重量级锁 可重入锁（递归锁） 公平锁、非公平锁 可中断锁 读写锁、共享锁、互斥锁 事务 transactional 数据库事务特性 事务的隔离级别（事务并发能力） 传播行为",content:'# SpringBoot日志\n\n 1. 日志级别\n\ntrace < debug < info < warn < error < fatal\n\n\n1\n\n 2. 配置\n\nlogging: \n  level: \n    # 项目的groupId\n    com.xxx.xx: debug\n\n\n1\n2\n3\n4\n\n\n\n# Servlet、Filter、Listener和Interceptor\n\nservlet\n\nservlet是一种运行服务器端的java应用程序，具有独立于平台和协议的特性，并且可以动态的生成web页面， 它工作在客户端请求与服务器响应的中间层。\n\nfilter\n\nfilter是一个可以复用的代码片段，可以用来转换http请求、响应和头信息。filter不像servlet， 它不能产生一个请求或者响应，它只是修改对某一资源的请求，或者修改从某一的响应。\n\n通俗的语言说就是在application，session，request三个对象创建消亡或者往其中添加修改删除属性时自动执行代码的功能组件。\n\nlistener\n\n监听器，从字面上可以看出listener主要用来监听只用。通过listener可以监听web服务器中某一个执行动作， 并根据其要求作出相应的响应。\n\ninterceptor\n\n是在面向切面编程的，就是在你的service或者一个方法前调用一个方法，或者在方法后调用一个方法。\n\n\n\n\n# 缓存穿透、击穿和雪崩\n\n穿透\n\n描述：缓存穿透是指缓存和数据库中都没有的数据，而用户不断发起请求，如发起id不存在的数据。这时的用户很可能是攻击者，攻击会导致数据库压力过大。\n\n解决方案：\n\n 1. 接口层增加校验，如用户鉴权校验，id做基础校验，id<=0的直接拦截；\n 2. 从缓存取不到的数据，在数据库中也没有找到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况无法使用）。这样可以防止攻击用户反复用同一个id暴力攻击。\n\n击穿\n\n描述：缓存击穿是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时用于并发用户特别多，\n\n同时读缓存没督导数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力\n\n解决方案：\n\n 1. 设置热点数据永不过期\n 2. 加互斥锁，\n 3. 雪崩\n\n描述：缓存雪崩是指缓存中数据大批量到过期时间，而查询数据量巨大，引起数据库压力过大甚至down机。\n\n和缓存击穿不同的是，缓存击穿指并发查同一条数据，缓存雪崩式不同数据都过期了，很多数据库都查不到从而查数据库。\n\n解决方案：\n\n 1. 缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。\n 2. 如果缓存数据是分布式部署，将热点数据均匀分布到不同缓存数据库中。\n 3. 设置热点数据永不过期。\n\n\n# JSR303 校验规则\n\n空检查\n\n * @Null 验证对象是否为null\n * @NotNull 验证对象是否不为null, 无法检查长度为0的字符串\n * @NotBlank 检查约束字符串是不是Null，还有被trim的长度是否大于0，只对字符串，且会去掉前后空格\n * @NotEmpty 检查约束元素是否为Null，或者是EMPTY\n\n区别\n\n * @NotNull // CharSequence, Collection, Map 和 Array 对象不能是 null, 但可以是空集（size = 0）。\n * @NotEmpty // CharSequence, Collection, Map 和 Array 对象不能是 null 并且相关对象的 size 大于 0。\n * @NotBlank // String 不是 null 且去除两端空白字符后的长度（trim length）大于 0。\n\nBoolean检查\n\n * @AssertTrue 验证 Boolean 对象是否为 true\n * @AssertFalse 验证 Boolean 对象是否为 false\n\n长度检查\n\n * @Size(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内\n * @Length(min=, max=) Validates that the annotated string is between min and max included.\n\n日期检查\n\n * @Past 验证 Date 和 Calendar 对象是否在当前时间之前，验证成立的话被注释的元素一定是一个过去的日期\n * @Future 验证 Date 和 Calendar 对象是否在当前时间之后 ，验证成立的话被注释的元素一定是一个将来的日期\n * @Pattern 验证 String 对象是否符合正则表达式的规则，被注释的元素符合制定的正则表达式，regexp:正则表达式 flags: 指定 Pattern.Flag 的数组，表示正则表达式的相关选项。\n\n数值检查\n\n建议使用在String,Integer类型，不建议使用在int类型上，因为表单值为“”时无法转换为int，但可以转换为String为"",Integer为null。\n\n * @Min 验证 Number 和 String 对象是否大等于指定的值\n * @Max 验证 Number 和 String 对象是否小等于指定的值\n * @DecimalMax 被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.小数存在精度\n * @DecimalMin 被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.小数存在精度\n * @Digits 验证 Number 和 String 的构成是否合法\n * @Digits(integer=,fraction=) 验证字符串是否是符合指定格式的数字，integer指定整数精度，fraction指定小数精度。\n * @Range(min=, max=) 被指定的元素必须在合适的范围内\n * @Range(min=10000,max=50000,message=”range.bean.wage”)\n * @Valid 递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.(是否进行递归验证)\n * @CreditCardNumber信用卡验证\n * @Email 验证是否是邮件地址，如果为null,不进行验证，算通过验证。\n * @ScriptAssert(lang= ,script=, alias=)\n * @URL(protocol=,host=, port=,regexp=, flags=)\n\n\n# 锁\n\nsynchronized 和 Lock\n\n> Java中有两种加锁方式：一种是用synchronized关键字，另一种是用Lock接口的实现类。\n\n\n# 悲观锁、乐观锁\n\n悲观锁与乐观锁并不是特指某个锁，而是在并发情况下的两种不同策略。\n\n悲观锁： 就是很悲观，每次去拿数据都认为别人会修改。所以每次在拿数据的时候都会上锁。这样别人想拿数据就被挡住，知道悲观锁被释放。\n\n乐观锁： 就是很乐观，每次去拿数据的时候都认为别人会修改。所以不会上锁！但是如果想要更新数据，则会在更新前检查在读取至更新这段时间别人有没有修改过这个数据。如果修改过，则虫棍读取，再次尝试更新，循环上述步骤直到更新成功。\n\n悲观锁阻塞事务，乐观锁回滚重试。\n\n\n# 自旋锁\n\n所谓自旋，说白了就是一个while(true)无限循环。\n\n\n# 偏向锁 -> 轻量级锁 -> 重量级锁\n\n\n# 可重入锁（递归锁）\n\n可重入锁的字面意思是“可以重新进入的锁”，即允许同一个线程多次获取同一把锁。\n\n比如一个递归函数理由加锁操作，递归过程中这个锁会阻塞自己吗？如果不会，那么这个锁就是可重入锁（因为这个原因可重入锁也叫做递归锁）。\n\n\n# 公平锁、非公平锁\n\n\n# 可中断锁\n\n\n# 读写锁、共享锁、互斥锁\n\n读写锁其实是一对锁，一个读锁（共享锁）和一个写锁（互斥锁、排他锁）。\n\n\n# 事务 transactional\n\n\n# 数据库事务特性\n\n原子性（Atomicity）、一致性（Consistency）、隔离性或独立性（Isolation）和持久性（Durability）。\n\n\n# 事务的隔离级别（事务并发能力）\n\n * READ_UNCOMMITED（读未提交）\n * 读已提交\n * 可重复读\n * 序列化\n\n\n# 传播行为\n\nPROPAGATION_REQUIRED\n\n如果当前没有事务，就创建一个事务；如果当前存在事务，就加入该事务；该设置是最常用的设置。\n\nPROPAGATION_SUPPORT\n\n支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就以非事务执行。\n\nPROPAGATION_MANDATORY\n\n支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就抛出异常。\n\nPROPAGATION_REQUIRED_NEW\n\n创建新事务，无论当前存不存在事务，都创建新事务。\n\nPROPAGATION_NOT_SUPPORTED\n\n以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。\n\nPROPAGATION_NEVER\n\n以非事务方式执行，如果当前存在事务，则抛出异常。\n\nPROPAGATION_NESTED\n\n如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。\n\n本地事务的坑\n\n在同一个类里面，编写两个方法，内部调用的时候，会导致事务设置失效。原因是没有用到代理对象的缘故。\n\n一致性：强一致性、弱一致性和最终一致性。\n\n分布式事务几种常见的解决方案：\n\n * 2PC\n * 柔性事务 - TCC事务补偿方案\n * 柔性事务 - 最大努力通知方案\n * 柔性事务 - 可靠消息 + 最终一致性方案（异步确保型）',normalizedContent:'# springboot日志\n\n 1. 日志级别\n\ntrace < debug < info < warn < error < fatal\n\n\n1\n\n 2. 配置\n\nlogging: \n  level: \n    # 项目的groupid\n    com.xxx.xx: debug\n\n\n1\n2\n3\n4\n\n\n\n# servlet、filter、listener和interceptor\n\nservlet\n\nservlet是一种运行服务器端的java应用程序，具有独立于平台和协议的特性，并且可以动态的生成web页面， 它工作在客户端请求与服务器响应的中间层。\n\nfilter\n\nfilter是一个可以复用的代码片段，可以用来转换http请求、响应和头信息。filter不像servlet， 它不能产生一个请求或者响应，它只是修改对某一资源的请求，或者修改从某一的响应。\n\n通俗的语言说就是在application，session，request三个对象创建消亡或者往其中添加修改删除属性时自动执行代码的功能组件。\n\nlistener\n\n监听器，从字面上可以看出listener主要用来监听只用。通过listener可以监听web服务器中某一个执行动作， 并根据其要求作出相应的响应。\n\ninterceptor\n\n是在面向切面编程的，就是在你的service或者一个方法前调用一个方法，或者在方法后调用一个方法。\n\n\n\n\n# 缓存穿透、击穿和雪崩\n\n穿透\n\n描述：缓存穿透是指缓存和数据库中都没有的数据，而用户不断发起请求，如发起id不存在的数据。这时的用户很可能是攻击者，攻击会导致数据库压力过大。\n\n解决方案：\n\n 1. 接口层增加校验，如用户鉴权校验，id做基础校验，id<=0的直接拦截；\n 2. 从缓存取不到的数据，在数据库中也没有找到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况无法使用）。这样可以防止攻击用户反复用同一个id暴力攻击。\n\n击穿\n\n描述：缓存击穿是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时用于并发用户特别多，\n\n同时读缓存没督导数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力\n\n解决方案：\n\n 1. 设置热点数据永不过期\n 2. 加互斥锁，\n 3. 雪崩\n\n描述：缓存雪崩是指缓存中数据大批量到过期时间，而查询数据量巨大，引起数据库压力过大甚至down机。\n\n和缓存击穿不同的是，缓存击穿指并发查同一条数据，缓存雪崩式不同数据都过期了，很多数据库都查不到从而查数据库。\n\n解决方案：\n\n 1. 缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。\n 2. 如果缓存数据是分布式部署，将热点数据均匀分布到不同缓存数据库中。\n 3. 设置热点数据永不过期。\n\n\n# jsr303 校验规则\n\n空检查\n\n * @null 验证对象是否为null\n * @notnull 验证对象是否不为null, 无法检查长度为0的字符串\n * @notblank 检查约束字符串是不是null，还有被trim的长度是否大于0，只对字符串，且会去掉前后空格\n * @notempty 检查约束元素是否为null，或者是empty\n\n区别\n\n * @notnull // charsequence, collection, map 和 array 对象不能是 null, 但可以是空集（size = 0）。\n * @notempty // charsequence, collection, map 和 array 对象不能是 null 并且相关对象的 size 大于 0。\n * @notblank // string 不是 null 且去除两端空白字符后的长度（trim length）大于 0。\n\nboolean检查\n\n * @asserttrue 验证 boolean 对象是否为 true\n * @assertfalse 验证 boolean 对象是否为 false\n\n长度检查\n\n * @size(min=, max=) 验证对象（array,collection,map,string）长度是否在给定的范围之内\n * @length(min=, max=) validates that the annotated string is between min and max included.\n\n日期检查\n\n * @past 验证 date 和 calendar 对象是否在当前时间之前，验证成立的话被注释的元素一定是一个过去的日期\n * @future 验证 date 和 calendar 对象是否在当前时间之后 ，验证成立的话被注释的元素一定是一个将来的日期\n * @pattern 验证 string 对象是否符合正则表达式的规则，被注释的元素符合制定的正则表达式，regexp:正则表达式 flags: 指定 pattern.flag 的数组，表示正则表达式的相关选项。\n\n数值检查\n\n建议使用在string,integer类型，不建议使用在int类型上，因为表单值为“”时无法转换为int，但可以转换为string为"",integer为null。\n\n * @min 验证 number 和 string 对象是否大等于指定的值\n * @max 验证 number 和 string 对象是否小等于指定的值\n * @decimalmax 被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过bigdecimal定义的最大值的字符串表示.小数存在精度\n * @decimalmin 被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过bigdecimal定义的最小值的字符串表示.小数存在精度\n * @digits 验证 number 和 string 的构成是否合法\n * @digits(integer=,fraction=) 验证字符串是否是符合指定格式的数字，integer指定整数精度，fraction指定小数精度。\n * @range(min=, max=) 被指定的元素必须在合适的范围内\n * @range(min=10000,max=50000,message=”range.bean.wage”)\n * @valid 递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.(是否进行递归验证)\n * @creditcardnumber信用卡验证\n * @email 验证是否是邮件地址，如果为null,不进行验证，算通过验证。\n * @scriptassert(lang= ,script=, alias=)\n * @url(protocol=,host=, port=,regexp=, flags=)\n\n\n# 锁\n\nsynchronized 和 lock\n\n> java中有两种加锁方式：一种是用synchronized关键字，另一种是用lock接口的实现类。\n\n\n# 悲观锁、乐观锁\n\n悲观锁与乐观锁并不是特指某个锁，而是在并发情况下的两种不同策略。\n\n悲观锁： 就是很悲观，每次去拿数据都认为别人会修改。所以每次在拿数据的时候都会上锁。这样别人想拿数据就被挡住，知道悲观锁被释放。\n\n乐观锁： 就是很乐观，每次去拿数据的时候都认为别人会修改。所以不会上锁！但是如果想要更新数据，则会在更新前检查在读取至更新这段时间别人有没有修改过这个数据。如果修改过，则虫棍读取，再次尝试更新，循环上述步骤直到更新成功。\n\n悲观锁阻塞事务，乐观锁回滚重试。\n\n\n# 自旋锁\n\n所谓自旋，说白了就是一个while(true)无限循环。\n\n\n# 偏向锁 -> 轻量级锁 -> 重量级锁\n\n\n# 可重入锁（递归锁）\n\n可重入锁的字面意思是“可以重新进入的锁”，即允许同一个线程多次获取同一把锁。\n\n比如一个递归函数理由加锁操作，递归过程中这个锁会阻塞自己吗？如果不会，那么这个锁就是可重入锁（因为这个原因可重入锁也叫做递归锁）。\n\n\n# 公平锁、非公平锁\n\n\n# 可中断锁\n\n\n# 读写锁、共享锁、互斥锁\n\n读写锁其实是一对锁，一个读锁（共享锁）和一个写锁（互斥锁、排他锁）。\n\n\n# 事务 transactional\n\n\n# 数据库事务特性\n\n原子性（atomicity）、一致性（consistency）、隔离性或独立性（isolation）和持久性（durability）。\n\n\n# 事务的隔离级别（事务并发能力）\n\n * read_uncommited（读未提交）\n * 读已提交\n * 可重复读\n * 序列化\n\n\n# 传播行为\n\npropagation_required\n\n如果当前没有事务，就创建一个事务；如果当前存在事务，就加入该事务；该设置是最常用的设置。\n\npropagation_support\n\n支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就以非事务执行。\n\npropagation_mandatory\n\n支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就抛出异常。\n\npropagation_required_new\n\n创建新事务，无论当前存不存在事务，都创建新事务。\n\npropagation_not_supported\n\n以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。\n\npropagation_never\n\n以非事务方式执行，如果当前存在事务，则抛出异常。\n\npropagation_nested\n\n如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与propagation_required类似的操作。\n\n本地事务的坑\n\n在同一个类里面，编写两个方法，内部调用的时候，会导致事务设置失效。原因是没有用到代理对象的缘故。\n\n一致性：强一致性、弱一致性和最终一致性。\n\n分布式事务几种常见的解决方案：\n\n * 2pc\n * 柔性事务 - tcc事务补偿方案\n * 柔性事务 - 最大努力通知方案\n * 柔性事务 - 可靠消息 + 最终一致性方案（异步确保型）',charsets:{cjk:!0}},{title:"数据结构",frontmatter:{title:"数据结构",date:"2022-07-28T00:36:10.000Z",permalink:"/pages/67419f/"},regularPath:"/08.%E7%AE%97%E6%B3%95/02.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",relativePath:"08.算法/02.数据结构.md",key:"v-3c7a4958",path:"/pages/67419f/",headers:[{level:2,title:"数据结构类型",slug:"数据结构类型",normalizedTitle:"数据结构类型",charIndex:2},{level:2,title:"逻辑结构",slug:"逻辑结构",normalizedTitle:"逻辑结构",charIndex:150},{level:2,title:"存储结构",slug:"存储结构",normalizedTitle:"存储结构",charIndex:377}],headersStr:"数据结构类型 逻辑结构 存储结构",content:"# 数据结构类型\n\n 1. 数组 （Array）\n 2. 栈 （Stack）\n 3. 队列 （Queue）\n 4. 链表 （Linked List）\n 5. 树 (Tree)（二叉树、森林）\n 6. 散列表 (Hash)\n 7. 堆 (Heap) (完全二叉树)\n 8. 图 (Graph)\n\n\n# 逻辑结构\n\n简单来说逻辑结构就是数据之间的关系，逻辑结构大概统一的可以分成两种：线性结构、非线性结构。\n\n * 线性结构：是一个有序数据元素的集合。其中数据元素之间的关系是一对一的关系，即除了第一个和最后一个数据元素之外，其它数据元素都是首尾相接的。 常用的线性结构优：栈、队列、链表、线性表。\n * 非线性结构：各个数据元素不在保持在一个线性序列中，每个数据元素可能与零个或者多个其它数据元素发生联系。\n\n常见的非线性结构有：二维数组、树等。\n\n\n# 存储结构\n\n逻辑结构指的是数据间的关系，而存储结构是逻辑结构用计算机语言的实现。常见的存储结构有：顺序存储、链式存储、索引存储以及散列存储。\n\n例如：数组在内存中的位置是连续的，它就是顺序存储；\n\n链表是主动建立数据间的关联关系的，在内存中却不一定是连续的，它就是链式存储；\n\n还有顺序和逻辑上都不存在顺序关系，但是你可以通过一定的方式去访问它的哈希表，数据散列存储。",normalizedContent:"# 数据结构类型\n\n 1. 数组 （array）\n 2. 栈 （stack）\n 3. 队列 （queue）\n 4. 链表 （linked list）\n 5. 树 (tree)（二叉树、森林）\n 6. 散列表 (hash)\n 7. 堆 (heap) (完全二叉树)\n 8. 图 (graph)\n\n\n# 逻辑结构\n\n简单来说逻辑结构就是数据之间的关系，逻辑结构大概统一的可以分成两种：线性结构、非线性结构。\n\n * 线性结构：是一个有序数据元素的集合。其中数据元素之间的关系是一对一的关系，即除了第一个和最后一个数据元素之外，其它数据元素都是首尾相接的。 常用的线性结构优：栈、队列、链表、线性表。\n * 非线性结构：各个数据元素不在保持在一个线性序列中，每个数据元素可能与零个或者多个其它数据元素发生联系。\n\n常见的非线性结构有：二维数组、树等。\n\n\n# 存储结构\n\n逻辑结构指的是数据间的关系，而存储结构是逻辑结构用计算机语言的实现。常见的存储结构有：顺序存储、链式存储、索引存储以及散列存储。\n\n例如：数组在内存中的位置是连续的，它就是顺序存储；\n\n链表是主动建立数据间的关联关系的，在内存中却不一定是连续的，它就是链式存储；\n\n还有顺序和逻辑上都不存在顺序关系，但是你可以通过一定的方式去访问它的哈希表，数据散列存储。",charsets:{cjk:!0}},{title:"中间价使用",frontmatter:{title:"中间价使用",date:"2022-07-28T00:34:46.000Z",permalink:"/pages/93a4e4/"},regularPath:"/06.Java%E5%90%8E%E7%AB%AF/04.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/10.%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%BD%BF%E7%94%A8.html",relativePath:"06.Java后端/04.微服务之谷粒商城/10.中间件使用.md",key:"v-53bf4cd7",path:"/pages/93a4e4/",headers:[{level:2,title:"整合Mysql",slug:"整合mysql",normalizedTitle:"整合mysql",charIndex:2},{level:2,title:"整合MyBatis-Plus",slug:"整合mybatis-plus",normalizedTitle:"整合mybatis-plus",charIndex:582},{level:2,title:"JSR303数据校验",slug:"jsr303数据校验",normalizedTitle:"jsr303数据校验",charIndex:1034},{level:2,title:"整合nacos",slug:"整合nacos",normalizedTitle:"整合nacos",charIndex:4830},{level:2,title:"整合OpenFeign",slug:"整合openfeign",normalizedTitle:"整合openfeign",charIndex:5922},{level:2,title:"整合redis",slug:"整合redis",normalizedTitle:"整合redis",charIndex:6455},{level:2,title:"整合redisson",slug:"整合redisson",normalizedTitle:"整合redisson",charIndex:7096},{level:2,title:"整合SpringSession",slug:"整合springsession",normalizedTitle:"整合springsession",charIndex:7861},{level:2,title:"整合SpringCache",slug:"整合springcache",normalizedTitle:"整合springcache",charIndex:8682},{level:2,title:"整合ElasticSearch",slug:"整合elasticsearch",normalizedTitle:"整合elasticsearch",charIndex:10072},{level:2,title:"整合Seata",slug:"整合seata",normalizedTitle:"整合seata",charIndex:11580},{level:2,title:"整合RabbitMQ",slug:"整合rabbitmq",normalizedTitle:"整合rabbitmq",charIndex:11887},{level:2,title:"整合Sentinel",slug:"整合sentinel",normalizedTitle:"整合sentinel",charIndex:12507},{level:2,title:"整合Sleuth + Zipkin",slug:"整合sleuth-zipkin",normalizedTitle:"整合sleuth + zipkin",charIndex:14993},{level:2,title:"Others",slug:"others",normalizedTitle:"others",charIndex:15812}],lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:"整合Mysql 整合MyBatis-Plus JSR303数据校验 整合nacos 整合OpenFeign 整合redis 整合redisson 整合SpringSession 整合SpringCache 整合ElasticSearch 整合Seata 整合RabbitMQ 整合Sentinel 整合Sleuth + Zipkin Others",content:'# 整合Mysql\n\n 1. 导入依赖\n\n<dependencies>\n    \x3c!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --\x3e\n    <dependency>\n        <groupId>mysql</groupId>\n        <artifactId>mysql-connector-java</artifactId>\n        <version>8.0.17</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 2. 配置\n\nspring:\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://192.168.56.10:3306/表名?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 整合MyBatis-Plus\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>com.baomidou</groupId>\n        <artifactId>mybatis-plus-boot-starter</artifactId>\n        <version>3.2.0</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 配置\n\nmybatis-plus:\n  mapper-locations: classpath:/mapper/**/*.xml\n  global-config:\n    db-config:\n      id-type: auto\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 3. 逆向工程\n\n\n# JSR303数据校验\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>javax.validation</groupId>\n        <artifactId>validation-api</artifactId>\n        <version>2.0.1.Final</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 规范化错误内容\n\n@RestController\npublic class HomeController {\n    @PostMapping("/xxx")\n    public R save(@Valid @RequestBody Entity entity, BindingResult result) {\n        if (result.hasErrors()) {\n            Map<String, String> errorMap = new HashMap<>();\n            \n            result.getFieldErrors.forEach(item -> {\n                // 错误提示\n                String message = item.getDefaultMessage();\n                // 错误属性\n                String field = item.getField();\n                errorMap.put(field, message);\n            })\n        \n            return R.error(400, \'提交的数据不合法\', errorMap);\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n 3. 集中处理所有异常\n\n//@ControllerAdvice(basePackages = "com.xxx.controller")\n@RestControllerAdvice(basePackages = "com.xxx.controller")\npublic class ExceptionControllerAdvice {\n\n    @ExceptionHandler(value = MethodArgumentNotValidException.class)\n    public R handleValidException(MethodArgumentNotValidException e) {\n        // 获取BindingResult数据\n        BindingResult bindingResult = e.getBindingResult();\n        Map<String, String> errorMap = new HashMap<>();\n        bindingResult.getFieldErrors().forEach((fieldError) -> {\n            errorMap.put(fieldError.getField(), fieldError.getDefaultMessage());\n        });\n        // 当参数校验报错后，会直接被拦截，并在此返回校验结果\n        return R.error(BizCodeEnum.VALiD_EXCEPTION.getCode(), BizCodeEnum.VALiD_EXCEPTION.getMsg()).put("data", errorMap);\n    }\n\n    @ExceptionHandler(value = Throwable.class)\n    public R handleException(Throwable throwable) {\n        return R.error(BizCodeEnum.UNKNOWN_EXCEPTION.getCode(), BizCodeEnum.UNKNOWN_EXCEPTION.getMsg());\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n 4. 分组校验\n\n// springframework提供的注解\nimport org.springframework.validation.annotation.Validated;\n\n@RestController\npublic class HomeController {\n    // 已采用集中异常处理，这里不需要获取BindingResult\n    @PostMapping("/xxx")\n    public R save(@Validated({AddGroup.class}) @RequestBody Entity entity) { \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 5. 自定义校验注解\n\n> 这里新增一个校验 Integer 必须在0~1之间的注解。\n\n第1步：新增注解\n\n// 下列写法可以参考官网注解写法\n\n@Documented\n// 指定要使用的校验器\n@Constraint(validatedBy = {ListValueConstraintValidator.class})\n// 指定该注解可以使用的位置\n@Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE})\n@Retention(RUNTIME)\npublic @interface ListValue {\n\n    // 错误提示值一般为校验注解类的全类名.message【这里的路径】\n    String message() default "{com.xxx.common.valid.ListValue.message}";\n\n    Class<?>[] groups() default {};\n\n    Class<? extends Payload>[] payload() default {};\n\n    // 这里给个默认值为{0 ,1}，匹配默认的message\n    int[] vals() default {0, 1}; \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n第2步：写具体地校验器\n\n// 注意接口ConstraintValidator<ListValue, Integer>\npublic class ListValueConstraintValidator implements ConstraintValidator<ListValue, Integer> {\n\n    // 借助Set保存传入的数值\n    private final Set<Integer> set = new HashSet<Integer>();\n\n    @Override\n    public void initialize(ListValue constraintAnnotation) {\n        int[] vals = constraintAnnotation.vals();\n        for (int val : vals) {\n            set.add(val);\n        }\n    }\n\n    @Override\n    public boolean isValid(Integer value, ConstraintValidatorContext context) {\n        return set.contains(value);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n第3步：写默认的错误提示message\n\n1、新增文件：ValidationMessages.properties\n// 【提示：回看校验器中指定的路径】\n2、com.xxx.common.valid.ListValue.message=数值必须在0到1之间\n\n\n1\n2\n3\n\n\n第4步：使用\n\n// 在属性上标注\n@ListValue(vals = {0, 1}, message = "", groups = {AddGroup.class, UpdateStatusGroup.class})\n\n\n1\n2\n\n\n\n# 整合nacos\n\n 1. 导入依赖\n\n<dependencies>\n    \x3c!--服务发现中心--\x3e\n    <dependency>\n        <groupId>com.alibaba.cloud</groupId>\n        <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n    </dependency>\n    \x3c!--服务配置中心--\x3e\n    <dependency>\n        <groupId>com.alibaba.cloud</groupId>\n        <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n 2. 配置\n\n提示\n\n一般配置在 application.properties 或 application.yml 文件中配置都可以。\n\n但服务配置中心需要在文件 bootstrap.properties 中配置。\n\n# 服务发现中心配置\nspring:\n  application:\n    name: gulimall-cart\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 127.0.0.1:8848\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 服务配置中心配置，文件名：bootstrap.properties\nspring.application.name=gulimall-cart\nspring.cloud.nacos.config.server-addr=127.0.0.1:8848\n\n\n1\n2\n3\n\n 3. 开启服务\n\n// 在入口类上标注 @EnableDiscoveryClient，即可开启服务。\n@EnableDiscoveryClient\n@SpringBootApplication()\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 整合OpenFeign\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-openfeign</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 开启服务\n\n@EnableFeignClients // 在主类上标注 @EnableFeignClients 开启服务\n\n\n1\n\n 3. 项目中使用\n\n// appname 是 其它服务的spring.application.name\n@FeignClient("appname") // 声明这是一个feignClient\npublic interface MyFeignService {\n\n    @GetMapping("appname 项目中的请求url")\n    List<String> method(); // appname 项目中请求方法的签名\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 整合redis\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-data-redis</artifactId>\n        <exclusions>\n            <exclusion>\n                <groupId>io.lettuce</groupId>\n                <artifactId>lettuce-core</artifactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n    <dependency>\n        <groupId>redis.clients</groupId>\n        <artifactId>jedis</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n 2. 配置\n\n# 这里仅列举一些\nspring:\n  redis:\n    host: 192.168.56.10\n    port: 6379\n\n\n1\n2\n3\n4\n5\n\n\n\n# 整合redisson\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.redisson</groupId>\n        <artifactId>redisson</artifactId>\n        <version>3.12.0</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 写配置类\n\n@Configuration\npublic class MyRedissonConfig {\n    /**\n     * 所有对Redisson的使用都是通过RedissonClient进行操作的\n     */\n    @Bean\n    public RedissonClient redisson() throws IOException {\n        Config config = new Config();\n        // config.useClusterServers().addNodeAddress("redis://192.168.56.10:6379"); // cluster模式\n        config.useSingleServer().setAddress("redis://192.168.56.10:6379");\n        return Redisson.create(config);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n 3. 微服务共享session\n\n@EnableRedissonHttpSession // 在主类上标注该注解\n\n\n1\n\n\n\n# 整合SpringSession\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.session</groupId>\n        <artifactId>spring-session-data-redis</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 配置\n\nspring:\n  session:\n    store-type: redis\n\n\n1\n2\n3\n\n 3. 写配置类\n\n@Configuration\npublic class GulimallSessionConfig {\n    @Bean\n    public CookieSerializer cookieSerializer() {\n        DefaultCookieSerializer cookieSerializer = new DefaultCookieSerializer();\n        cookieSerializer.setDomainName("应用的主域名");\n        cookieSerializer.setCookieName("cookie的key值");\n        return cookieSerializer;\n    }\n\n    @Bean\n    public RedisSerializer<Object> springSessionDefaultRedisSerializer() {\n        return new GenericJackson2JsonRedisSerializer();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 整合SpringCache\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-cache</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 配置\n\nspring:\n  cache:\n    type: redis\n    redis: \n      time-to-live: 3600000\n      key-prefix: CACHE_\n      use-key-prefix: true\n      # 是否缓存空值，防止缓存穿透\n      cache-null-values: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n 3. 写配置类并开启服务\n\n@EnableConfigurationProperties(CacheProperties.class)\n@EnableCaching // 开启服务\n@Configuration  \npublic class MyCacheConfig {    \n    @Bean\n    public RedisCacheConfiguration redisCacheConfiguration(CacheProperties cacheProperties) {\n        // 获取默认配置\n        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig();\n        // redis 的 key 使用 string\n        config = config.serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(new StringRedisSerializer()));\n        // redis 的 value 使用 json\n        config = config.serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(new GenericJackson2JsonRedisSerializer()));\n\n        // 其它配置依然使用默认的\n\n        return config;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n 4. 其它注解功能讲解\n\n * @Cacheable - 触发将数据保存到缓存的操作\n * @CacheEvict - 触发将数据从缓存删除的操作\n * @CachePut - 不影响方法执行，更新缓存的操作\n * @Caching - 组合以上多个缓存操作\n * @CacheConfig - 在类级别共享缓存的相同配置\n\n\n# 整合ElasticSearch\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.elasticsearch.client</groupId>\n        <artifactId>elasticsearch-rest-high-level-client</artifactId>\n        <version>7.4.2</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 配置\n 3. 写配置类\n\n点击查看\n\n@Configuration\npublic class GulimallElasticSearchConfig {\n    public static final RequestOptions COMMON_OPTIONS;\n    /**\n     * requestOptions的公用请求头\n     */\n    static {\n        RequestOptions.Builder builder = RequestOptions.DEFAULT.toBuilder();\n        // builder.addHeader("Authorization", "Bearer" + TOKEN);\n        // builder.setHttpAsyncResponseConsumerFactory(\n        //         new HttpAsyncResponseConsumerFactory\n        //                 .HeapBufferedResponseConsumerFactory(30 * 1024 * 1024 * 1024));\n        COMMON_OPTIONS = builder.build();\n    }\n\n    @Bean\n    public RestHighLevelClient esRestClient() {\n        RestClientBuilder builder = RestClient.builder(new HttpHost("192.168.56.10", 9200, "http"));\n        // RestHighLevelClient http = new RestHighLevelClient(\n        //         RestClient.builder(\n        //                 new HttpHost("192.168.56.10", 9200, "http")));\n        return new RestHighLevelClient(builder);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n 4. 项目中使用\n\n@Service("CustomService")\nclass CustomServiceImpl {\n    // 直接注入 RestHighLevelClient 实例，通过该实例即可使用 ElasticSearch\n    @Autowired\n    private RestHighLevelClient client;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 整合Seata\n\n本项目中不使用Seata，取而代之使用RabbitMQ的死信队列来解决问题。\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>com.alibaba.cloud</groupId>\n        <artifactId>spring-cloud-starter-alibaba-seata</artifactId>\n        <version>2.1.0.RELEASE</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 配置\n\n\n# 整合RabbitMQ\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-amqp</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 配置\n\nspring: \n  rabbitmq: \n    host: 192.168.56.10\n    port: 5672\n    virtual-host: /\n    # 消息抵达broker回调\n    publisher-confirms: true\n    # 消息抵达queue回调\n    publisher-returns: true\n    # 只要抵达队列，以异步发送优先回调我们这个returnConfirm\n    template.mandatory: true\n    # 手动ack消息\n    listener: \n      simple: \n        acknowledge-mode: manual\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n 3. 写配置类 创建 Exchange、Queue、Binding\n\n\n# 整合Sentinel\n\n使用教程\n\n 1. 导入依赖和 actuator\n\n<dependencies>\n    <dependency>\n        <groupId>com.alibaba.cloud</groupId>\n        <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-actuator</artifactId>\n        <version>2.1.8.RELEASE</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n 2. 下载sentinel控制台\n 3. 配置\n\nspring:\n  cloud:\n    sentinel:\n      transport:\n        # 服务和控制台之间数据传输port（随便写，只要不被占用即可）\n        port: 8719\n        dashboard: localhost:8333\n\n# 配置 actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: *\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n 4. 自定义 Sentinel 流控返回数据\n\n@Configuration\npublic class MySentinelConfig {\n\n    public MySentinelConfig() {\n        WebCallbackManager.setUrlBlockHandler(new UrlBlockHandler() {\n            @Override\n            public void blocked(HttpServletRequest request, \n                                HttpServletResponse response, \n                                BlockException e) throws IOException {\n                // 错误类型枚举数据\n                R error = R.error(BizCodeEnum.TO_MANY_REQUEST.getCode(), BizCodeEnum.TO_MANY_REQUEST.getMsg());\n                response.setCharacterEncoding("UTF-8");\n                response.setContentType("application/json");\n                response.getWriter().write(JSON.toJSONString(error));\n            }\n        });\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n 5. 使用Sentinel来保护feign远程调用：熔断\n\n@FeignClient(value = "被调用服务spring.application.name", fallback = FeignServiceFallBack.class)\npublic interface FeignService {\n    @GetMapping(value = "/sku/seckill/{skuId}")\n    R getInfo(@PathVariable("skuId") Long skuId);\n}\n\n@Component\nclass FeignServiceFallBack implements FeignService {\n    @Override\n    public R getInfo(Long skuId) {\n         // 错误类型枚举数据\n        return R.error(BizCodeEnum.TO_MANY_REQUEST.getCode(), BizCodeEnum.TO_MANY_REQUEST.getMsg());\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n步骤：\n\n1)、调用方添加熔断保护配置：feign-sentinel:enabled=true\n\n2)、调用方手动指定远程服务的降级策略（在Sentinel控制台）。远程服务被降级处理。触发上述定义的熔断回调方法。\n\n3)、超大流量的时候，必须牺牲一些远程服务。在服务的提供方指定降级策略，此时，提供方是在运行，但是不运行自己的业务逻辑，返回默认的熔断数据（也就是限流的数据）\n\n 6. 自定义受保护的资源\n\n参考文档\n\n方式一、代码\n\n优点：可以自定义需要保护的代码片段，灵活性高。\n\ntry (Entry entry = SphU.entry("资源名")) {} \ncatch(BlockException e) {}\n\n\n1\n2\n\n\n方式二、注解\n\n@SentinelResource(value = "资源名（一般是方法名）", blockHandler = "blockHandler", fallback = "")\n\n\n1\n\n\n\n# 整合Sleuth + Zipkin\n\n基本术语了解\n\n * Span（跨度）：基本工作单元，发送一个远程调度任务，就会产生一个Span，Span是一个64位ID\n * Trace（跟踪）\n * Annotation（标注）：用来及时记录一个时间的，一些核心注解用来定义个请求的开始个结束。\n\n 1. 导入依赖\n\n<dependencies>\n   \x3c!-- <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-sleuth</artifactId>\n    </dependency>--\x3e\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-zipkin</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 2. 配置\n\nspring: \n  zipkin: \n    base-url: http://192.168.56.10:9411/\n    # 关闭服务发现，否则Spring Cloud会把zipkin的url当作服务名称\n    discovery-client-enabled: false\n    sender: \n      # 设置使用http的方式传输数据\n      type: web\n    sampler: \n      # 设置抽样采集率为100%，默认为0.1，即10%\n      probability: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# Others\n\n<dependencies>\n    \x3c!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore --\x3e\n    <dependency>\n        <groupId>org.apache.httpcomponents</groupId>\n        <artifactId>httpcore</artifactId>\n        <version>4.4.12</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.httpcomponents</groupId>\n        <artifactId>httpclient</artifactId>\n        <version>4.5.9</version>\n    </dependency>\n    <dependency>\n        <groupId>org.eclipse.jetty</groupId>\n        <artifactId>jetty-util</artifactId>\n        <version>9.3.7.v20160115</version>\n    </dependency>\n    <dependency>\n        <groupId>commons-lang</groupId>\n        <artifactId>commons-lang</artifactId>\n        <version>2.6</version>\n    </dependency>\n    <dependency>\n        <groupId>javax.servlet</groupId>\n        <artifactId>servlet-api</artifactId>\n        <version>2.5</version>\n        <scope>provided</scope>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n',normalizedContent:'# 整合mysql\n\n 1. 导入依赖\n\n<dependencies>\n    \x3c!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --\x3e\n    <dependency>\n        <groupid>mysql</groupid>\n        <artifactid>mysql-connector-java</artifactid>\n        <version>8.0.17</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 2. 配置\n\nspring:\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://192.168.56.10:3306/表名?useunicode=true&characterencoding=utf-8&usessl=false&servertimezone=utc&allowpublickeyretrieval=true\n    driver-class-name: com.mysql.cj.jdbc.driver\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 整合mybatis-plus\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>com.baomidou</groupid>\n        <artifactid>mybatis-plus-boot-starter</artifactid>\n        <version>3.2.0</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 配置\n\nmybatis-plus:\n  mapper-locations: classpath:/mapper/**/*.xml\n  global-config:\n    db-config:\n      id-type: auto\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 3. 逆向工程\n\n\n# jsr303数据校验\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>javax.validation</groupid>\n        <artifactid>validation-api</artifactid>\n        <version>2.0.1.final</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 规范化错误内容\n\n@restcontroller\npublic class homecontroller {\n    @postmapping("/xxx")\n    public r save(@valid @requestbody entity entity, bindingresult result) {\n        if (result.haserrors()) {\n            map<string, string> errormap = new hashmap<>();\n            \n            result.getfielderrors.foreach(item -> {\n                // 错误提示\n                string message = item.getdefaultmessage();\n                // 错误属性\n                string field = item.getfield();\n                errormap.put(field, message);\n            })\n        \n            return r.error(400, \'提交的数据不合法\', errormap);\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n 3. 集中处理所有异常\n\n//@controlleradvice(basepackages = "com.xxx.controller")\n@restcontrolleradvice(basepackages = "com.xxx.controller")\npublic class exceptioncontrolleradvice {\n\n    @exceptionhandler(value = methodargumentnotvalidexception.class)\n    public r handlevalidexception(methodargumentnotvalidexception e) {\n        // 获取bindingresult数据\n        bindingresult bindingresult = e.getbindingresult();\n        map<string, string> errormap = new hashmap<>();\n        bindingresult.getfielderrors().foreach((fielderror) -> {\n            errormap.put(fielderror.getfield(), fielderror.getdefaultmessage());\n        });\n        // 当参数校验报错后，会直接被拦截，并在此返回校验结果\n        return r.error(bizcodeenum.valid_exception.getcode(), bizcodeenum.valid_exception.getmsg()).put("data", errormap);\n    }\n\n    @exceptionhandler(value = throwable.class)\n    public r handleexception(throwable throwable) {\n        return r.error(bizcodeenum.unknown_exception.getcode(), bizcodeenum.unknown_exception.getmsg());\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n 4. 分组校验\n\n// springframework提供的注解\nimport org.springframework.validation.annotation.validated;\n\n@restcontroller\npublic class homecontroller {\n    // 已采用集中异常处理，这里不需要获取bindingresult\n    @postmapping("/xxx")\n    public r save(@validated({addgroup.class}) @requestbody entity entity) { \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 5. 自定义校验注解\n\n> 这里新增一个校验 integer 必须在0~1之间的注解。\n\n第1步：新增注解\n\n// 下列写法可以参考官网注解写法\n\n@documented\n// 指定要使用的校验器\n@constraint(validatedby = {listvalueconstraintvalidator.class})\n// 指定该注解可以使用的位置\n@target({method, field, annotation_type, constructor, parameter, type_use})\n@retention(runtime)\npublic @interface listvalue {\n\n    // 错误提示值一般为校验注解类的全类名.message【这里的路径】\n    string message() default "{com.xxx.common.valid.listvalue.message}";\n\n    class<?>[] groups() default {};\n\n    class<? extends payload>[] payload() default {};\n\n    // 这里给个默认值为{0 ,1}，匹配默认的message\n    int[] vals() default {0, 1}; \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n第2步：写具体地校验器\n\n// 注意接口constraintvalidator<listvalue, integer>\npublic class listvalueconstraintvalidator implements constraintvalidator<listvalue, integer> {\n\n    // 借助set保存传入的数值\n    private final set<integer> set = new hashset<integer>();\n\n    @override\n    public void initialize(listvalue constraintannotation) {\n        int[] vals = constraintannotation.vals();\n        for (int val : vals) {\n            set.add(val);\n        }\n    }\n\n    @override\n    public boolean isvalid(integer value, constraintvalidatorcontext context) {\n        return set.contains(value);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n第3步：写默认的错误提示message\n\n1、新增文件：validationmessages.properties\n// 【提示：回看校验器中指定的路径】\n2、com.xxx.common.valid.listvalue.message=数值必须在0到1之间\n\n\n1\n2\n3\n\n\n第4步：使用\n\n// 在属性上标注\n@listvalue(vals = {0, 1}, message = "", groups = {addgroup.class, updatestatusgroup.class})\n\n\n1\n2\n\n\n\n# 整合nacos\n\n 1. 导入依赖\n\n<dependencies>\n    \x3c!--服务发现中心--\x3e\n    <dependency>\n        <groupid>com.alibaba.cloud</groupid>\n        <artifactid>spring-cloud-starter-alibaba-nacos-discovery</artifactid>\n    </dependency>\n    \x3c!--服务配置中心--\x3e\n    <dependency>\n        <groupid>com.alibaba.cloud</groupid>\n        <artifactid>spring-cloud-starter-alibaba-nacos-config</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n 2. 配置\n\n提示\n\n一般配置在 application.properties 或 application.yml 文件中配置都可以。\n\n但服务配置中心需要在文件 bootstrap.properties 中配置。\n\n# 服务发现中心配置\nspring:\n  application:\n    name: gulimall-cart\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 127.0.0.1:8848\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 服务配置中心配置，文件名：bootstrap.properties\nspring.application.name=gulimall-cart\nspring.cloud.nacos.config.server-addr=127.0.0.1:8848\n\n\n1\n2\n3\n\n 3. 开启服务\n\n// 在入口类上标注 @enablediscoveryclient，即可开启服务。\n@enablediscoveryclient\n@springbootapplication()\npublic class application {\n\n    public static void main(string[] args) {\n        springapplication.run(application.class, args);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 整合openfeign\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.springframework.cloud</groupid>\n        <artifactid>spring-cloud-starter-openfeign</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 开启服务\n\n@enablefeignclients // 在主类上标注 @enablefeignclients 开启服务\n\n\n1\n\n 3. 项目中使用\n\n// appname 是 其它服务的spring.application.name\n@feignclient("appname") // 声明这是一个feignclient\npublic interface myfeignservice {\n\n    @getmapping("appname 项目中的请求url")\n    list<string> method(); // appname 项目中请求方法的签名\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 整合redis\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-data-redis</artifactid>\n        <exclusions>\n            <exclusion>\n                <groupid>io.lettuce</groupid>\n                <artifactid>lettuce-core</artifactid>\n            </exclusion>\n        </exclusions>\n    </dependency>\n    <dependency>\n        <groupid>redis.clients</groupid>\n        <artifactid>jedis</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n 2. 配置\n\n# 这里仅列举一些\nspring:\n  redis:\n    host: 192.168.56.10\n    port: 6379\n\n\n1\n2\n3\n4\n5\n\n\n\n# 整合redisson\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.redisson</groupid>\n        <artifactid>redisson</artifactid>\n        <version>3.12.0</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 写配置类\n\n@configuration\npublic class myredissonconfig {\n    /**\n     * 所有对redisson的使用都是通过redissonclient进行操作的\n     */\n    @bean\n    public redissonclient redisson() throws ioexception {\n        config config = new config();\n        // config.useclusterservers().addnodeaddress("redis://192.168.56.10:6379"); // cluster模式\n        config.usesingleserver().setaddress("redis://192.168.56.10:6379");\n        return redisson.create(config);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n 3. 微服务共享session\n\n@enableredissonhttpsession // 在主类上标注该注解\n\n\n1\n\n\n\n# 整合springsession\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.springframework.session</groupid>\n        <artifactid>spring-session-data-redis</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 配置\n\nspring:\n  session:\n    store-type: redis\n\n\n1\n2\n3\n\n 3. 写配置类\n\n@configuration\npublic class gulimallsessionconfig {\n    @bean\n    public cookieserializer cookieserializer() {\n        defaultcookieserializer cookieserializer = new defaultcookieserializer();\n        cookieserializer.setdomainname("应用的主域名");\n        cookieserializer.setcookiename("cookie的key值");\n        return cookieserializer;\n    }\n\n    @bean\n    public redisserializer<object> springsessiondefaultredisserializer() {\n        return new genericjackson2jsonredisserializer();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 整合springcache\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-cache</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 配置\n\nspring:\n  cache:\n    type: redis\n    redis: \n      time-to-live: 3600000\n      key-prefix: cache_\n      use-key-prefix: true\n      # 是否缓存空值，防止缓存穿透\n      cache-null-values: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n 3. 写配置类并开启服务\n\n@enableconfigurationproperties(cacheproperties.class)\n@enablecaching // 开启服务\n@configuration  \npublic class mycacheconfig {    \n    @bean\n    public rediscacheconfiguration rediscacheconfiguration(cacheproperties cacheproperties) {\n        // 获取默认配置\n        rediscacheconfiguration config = rediscacheconfiguration.defaultcacheconfig();\n        // redis 的 key 使用 string\n        config = config.serializekeyswith(redisserializationcontext.serializationpair.fromserializer(new stringredisserializer()));\n        // redis 的 value 使用 json\n        config = config.serializevalueswith(redisserializationcontext.serializationpair.fromserializer(new genericjackson2jsonredisserializer()));\n\n        // 其它配置依然使用默认的\n\n        return config;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n 4. 其它注解功能讲解\n\n * @cacheable - 触发将数据保存到缓存的操作\n * @cacheevict - 触发将数据从缓存删除的操作\n * @cacheput - 不影响方法执行，更新缓存的操作\n * @caching - 组合以上多个缓存操作\n * @cacheconfig - 在类级别共享缓存的相同配置\n\n\n# 整合elasticsearch\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.elasticsearch.client</groupid>\n        <artifactid>elasticsearch-rest-high-level-client</artifactid>\n        <version>7.4.2</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 配置\n 3. 写配置类\n\n点击查看\n\n@configuration\npublic class gulimallelasticsearchconfig {\n    public static final requestoptions common_options;\n    /**\n     * requestoptions的公用请求头\n     */\n    static {\n        requestoptions.builder builder = requestoptions.default.tobuilder();\n        // builder.addheader("authorization", "bearer" + token);\n        // builder.sethttpasyncresponseconsumerfactory(\n        //         new httpasyncresponseconsumerfactory\n        //                 .heapbufferedresponseconsumerfactory(30 * 1024 * 1024 * 1024));\n        common_options = builder.build();\n    }\n\n    @bean\n    public resthighlevelclient esrestclient() {\n        restclientbuilder builder = restclient.builder(new httphost("192.168.56.10", 9200, "http"));\n        // resthighlevelclient http = new resthighlevelclient(\n        //         restclient.builder(\n        //                 new httphost("192.168.56.10", 9200, "http")));\n        return new resthighlevelclient(builder);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n 4. 项目中使用\n\n@service("customservice")\nclass customserviceimpl {\n    // 直接注入 resthighlevelclient 实例，通过该实例即可使用 elasticsearch\n    @autowired\n    private resthighlevelclient client;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 整合seata\n\n本项目中不使用seata，取而代之使用rabbitmq的死信队列来解决问题。\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>com.alibaba.cloud</groupid>\n        <artifactid>spring-cloud-starter-alibaba-seata</artifactid>\n        <version>2.1.0.release</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 配置\n\n\n# 整合rabbitmq\n\n 1. 导入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-amqp</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 配置\n\nspring: \n  rabbitmq: \n    host: 192.168.56.10\n    port: 5672\n    virtual-host: /\n    # 消息抵达broker回调\n    publisher-confirms: true\n    # 消息抵达queue回调\n    publisher-returns: true\n    # 只要抵达队列，以异步发送优先回调我们这个returnconfirm\n    template.mandatory: true\n    # 手动ack消息\n    listener: \n      simple: \n        acknowledge-mode: manual\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n 3. 写配置类 创建 exchange、queue、binding\n\n\n# 整合sentinel\n\n使用教程\n\n 1. 导入依赖和 actuator\n\n<dependencies>\n    <dependency>\n        <groupid>com.alibaba.cloud</groupid>\n        <artifactid>spring-cloud-starter-alibaba-sentinel</artifactid>\n    </dependency>\n\n    <dependency>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-actuator</artifactid>\n        <version>2.1.8.release</version>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n 2. 下载sentinel控制台\n 3. 配置\n\nspring:\n  cloud:\n    sentinel:\n      transport:\n        # 服务和控制台之间数据传输port（随便写，只要不被占用即可）\n        port: 8719\n        dashboard: localhost:8333\n\n# 配置 actuator\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: *\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n 4. 自定义 sentinel 流控返回数据\n\n@configuration\npublic class mysentinelconfig {\n\n    public mysentinelconfig() {\n        webcallbackmanager.seturlblockhandler(new urlblockhandler() {\n            @override\n            public void blocked(httpservletrequest request, \n                                httpservletresponse response, \n                                blockexception e) throws ioexception {\n                // 错误类型枚举数据\n                r error = r.error(bizcodeenum.to_many_request.getcode(), bizcodeenum.to_many_request.getmsg());\n                response.setcharacterencoding("utf-8");\n                response.setcontenttype("application/json");\n                response.getwriter().write(json.tojsonstring(error));\n            }\n        });\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n 5. 使用sentinel来保护feign远程调用：熔断\n\n@feignclient(value = "被调用服务spring.application.name", fallback = feignservicefallback.class)\npublic interface feignservice {\n    @getmapping(value = "/sku/seckill/{skuid}")\n    r getinfo(@pathvariable("skuid") long skuid);\n}\n\n@component\nclass feignservicefallback implements feignservice {\n    @override\n    public r getinfo(long skuid) {\n         // 错误类型枚举数据\n        return r.error(bizcodeenum.to_many_request.getcode(), bizcodeenum.to_many_request.getmsg());\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n步骤：\n\n1)、调用方添加熔断保护配置：feign-sentinel:enabled=true\n\n2)、调用方手动指定远程服务的降级策略（在sentinel控制台）。远程服务被降级处理。触发上述定义的熔断回调方法。\n\n3)、超大流量的时候，必须牺牲一些远程服务。在服务的提供方指定降级策略，此时，提供方是在运行，但是不运行自己的业务逻辑，返回默认的熔断数据（也就是限流的数据）\n\n 6. 自定义受保护的资源\n\n参考文档\n\n方式一、代码\n\n优点：可以自定义需要保护的代码片段，灵活性高。\n\ntry (entry entry = sphu.entry("资源名")) {} \ncatch(blockexception e) {}\n\n\n1\n2\n\n\n方式二、注解\n\n@sentinelresource(value = "资源名（一般是方法名）", blockhandler = "blockhandler", fallback = "")\n\n\n1\n\n\n\n# 整合sleuth + zipkin\n\n基本术语了解\n\n * span（跨度）：基本工作单元，发送一个远程调度任务，就会产生一个span，span是一个64位id\n * trace（跟踪）\n * annotation（标注）：用来及时记录一个时间的，一些核心注解用来定义个请求的开始个结束。\n\n 1. 导入依赖\n\n<dependencies>\n   \x3c!-- <dependency>\n        <groupid>org.springframework.cloud</groupid>\n        <artifactid>spring-cloud-starter-sleuth</artifactid>\n    </dependency>--\x3e\n    <dependency>\n        <groupid>org.springframework.cloud</groupid>\n        <artifactid>spring-cloud-starter-zipkin</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 2. 配置\n\nspring: \n  zipkin: \n    base-url: http://192.168.56.10:9411/\n    # 关闭服务发现，否则spring cloud会把zipkin的url当作服务名称\n    discovery-client-enabled: false\n    sender: \n      # 设置使用http的方式传输数据\n      type: web\n    sampler: \n      # 设置抽样采集率为100%，默认为0.1，即10%\n      probability: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# others\n\n<dependencies>\n    \x3c!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore --\x3e\n    <dependency>\n        <groupid>org.apache.httpcomponents</groupid>\n        <artifactid>httpcore</artifactid>\n        <version>4.4.12</version>\n    </dependency>\n    <dependency>\n        <groupid>org.apache.httpcomponents</groupid>\n        <artifactid>httpclient</artifactid>\n        <version>4.5.9</version>\n    </dependency>\n    <dependency>\n        <groupid>org.eclipse.jetty</groupid>\n        <artifactid>jetty-util</artifactid>\n        <version>9.3.7.v20160115</version>\n    </dependency>\n    <dependency>\n        <groupid>commons-lang</groupid>\n        <artifactid>commons-lang</artifactid>\n        <version>2.6</version>\n    </dependency>\n    <dependency>\n        <groupid>javax.servlet</groupid>\n        <artifactid>servlet-api</artifactid>\n        <version>2.5</version>\n        <scope>provided</scope>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n',charsets:{cjk:!0}},{title:"note",frontmatter:{title:"note",date:"2022-11-13T02:39:25.000Z",permalink:"/pages/d00a7e/"},regularPath:"/08.%E7%AE%97%E6%B3%95/04.note.html",relativePath:"08.算法/04.note.md",key:"v-252ffd04",path:"/pages/d00a7e/",headersStr:null,content:" 1. 十大经典排序算法\n 2. 八大数据结构分类",normalizedContent:" 1. 十大经典排序算法\n 2. 八大数据结构分类",charsets:{cjk:!0}},{title:"设计原则",frontmatter:{title:"设计原则",date:"2022-07-28T00:36:33.000Z",permalink:"/pages/b9afd2/"},regularPath:"/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html",relativePath:"10.设计模式/02.设计原则.md",key:"v-37a54737",path:"/pages/b9afd2/",headers:[{level:2,title:"一、七大原则",slug:"一、七大原则",normalizedTitle:"一、七大原则",charIndex:2},{level:2,title:"二、类之间的关系",slug:"二、类之间的关系",normalizedTitle:"二、类之间的关系",charIndex:101},{level:2,title:"三、设计模式",slug:"三、设计模式",normalizedTitle:"三、设计模式",charIndex:161},{level:3,title:"3.1 创建型【5种】",slug:"_3-1-创建型【5种】",normalizedTitle:"3.1 创建型【5种】",charIndex:172},{level:3,title:"3.2 结构型【7种】",slug:"_3-2-结构型【7种】",normalizedTitle:"3.2 结构型【7种】",charIndex:370},{level:3,title:"3.3 行为型【11种】",slug:"_3-3-行为型【11种】",normalizedTitle:"3.3 行为型【11种】",charIndex:633},{level:3,title:"3.4 J2EE模式",slug:"_3-4-j2ee模式",normalizedTitle:"3.4 j2ee模式",charIndex:913}],headersStr:"一、七大原则 二、类之间的关系 三、设计模式 3.1 创建型【5种】 3.2 结构型【7种】 3.3 行为型【11种】 3.4 J2EE模式",content:'# 一、七大原则\n\n设计模式的7大原则介绍\n\n 1. 单一职责原则\n 2. 接口隔离原则\n 3. 依赖倒置原则\n 4. 里氏替换原则\n 5. 开闭原则\n 6. 迪米特原则\n 7. 合成复用原则\n\n\n# 二、类之间的关系\n\n 1. 依赖\n 2. 泛化（继承）\n 3. 实现\n 4. 关联\n 5. 聚合\n 6. 组合\n\n\n# 三、设计模式\n\n\n# 3.1 创建型【5种】\n\n类创建模式的主要关注点是"怎样创建对象？"，它的主要特点是"将对象的创建与使用分离"。\n\n这样可以降低系统的耦合度使用者不需要关注对象的创建细节，对象的创建由相关的工厂来完成。\n\n * *工厂模式\n * *抽象工厂模式\n * *单例模式\n * 建造者模式\n * *原型模式\n\n以上几种创建型模式，除了工厂方法模式属于类创建型模式，其他的全部属于对象创建型模式。\n\n\n# 3.2 结构型【7种】\n\n结构型模式描述如何将类或对象按某种布局组成更大的结构。\n\n它分为类结构型模式和对象结构型模式，前者采用继承机制来组织接口和类，后者采用组合或聚合来组合对象。\n\n由于组合关系或聚合关系比继承关系耦合度低，满足"合成复用原则"，所以对象结构型模式具有更大的灵活性。\n\n * *适配器模式\n * 桥接模式\n * 组合模式\n * *装饰器模式\n * 外观模式\n * 享元模式\n * *代理模式\n\n以上几种结构型模式，除了适配器模式分为类结构型模式和对象结构型模式两种，其他的全部属于对象结构型模式。\n\n\n# 3.3 行为型【11种】\n\n行为型模式分为类行为模式和对象行为模式，前者采用继承机制来在类间分派行为，后者采用组合或聚合在对象间分配行为。\n\n由于组合关系或聚合关系比继承关系耦合度低，满足"合成复用原则"，所以对象行为模式比类行为模式具有更大的灵活性。\n\n * 责任链模式\n * 命令模式\n * 解释器模式\n * *迭代器模式\n * *中介者模式\n * 备忘录模式\n * *观察者模式\n * 状态模式\n * *策略模式\n * 模板模式\n * 访问者模式\n\n以上几种行为型模式，除了模板方法模式和解释器模式是类行为型模式，其他的全部属于对象行为型模式。\n\n\n# 3.4 J2EE模式\n\n这些设计模式特别关注表示层。\n\n * MVC模式\n * 业务代表模式\n * 组合实体模式\n * 数据访问对象模式\n * 前端控制器模式\n * 拦截过滤器模式\n * 服务定位器模式\n * 传输对象模式',normalizedContent:'# 一、七大原则\n\n设计模式的7大原则介绍\n\n 1. 单一职责原则\n 2. 接口隔离原则\n 3. 依赖倒置原则\n 4. 里氏替换原则\n 5. 开闭原则\n 6. 迪米特原则\n 7. 合成复用原则\n\n\n# 二、类之间的关系\n\n 1. 依赖\n 2. 泛化（继承）\n 3. 实现\n 4. 关联\n 5. 聚合\n 6. 组合\n\n\n# 三、设计模式\n\n\n# 3.1 创建型【5种】\n\n类创建模式的主要关注点是"怎样创建对象？"，它的主要特点是"将对象的创建与使用分离"。\n\n这样可以降低系统的耦合度使用者不需要关注对象的创建细节，对象的创建由相关的工厂来完成。\n\n * *工厂模式\n * *抽象工厂模式\n * *单例模式\n * 建造者模式\n * *原型模式\n\n以上几种创建型模式，除了工厂方法模式属于类创建型模式，其他的全部属于对象创建型模式。\n\n\n# 3.2 结构型【7种】\n\n结构型模式描述如何将类或对象按某种布局组成更大的结构。\n\n它分为类结构型模式和对象结构型模式，前者采用继承机制来组织接口和类，后者采用组合或聚合来组合对象。\n\n由于组合关系或聚合关系比继承关系耦合度低，满足"合成复用原则"，所以对象结构型模式具有更大的灵活性。\n\n * *适配器模式\n * 桥接模式\n * 组合模式\n * *装饰器模式\n * 外观模式\n * 享元模式\n * *代理模式\n\n以上几种结构型模式，除了适配器模式分为类结构型模式和对象结构型模式两种，其他的全部属于对象结构型模式。\n\n\n# 3.3 行为型【11种】\n\n行为型模式分为类行为模式和对象行为模式，前者采用继承机制来在类间分派行为，后者采用组合或聚合在对象间分配行为。\n\n由于组合关系或聚合关系比继承关系耦合度低，满足"合成复用原则"，所以对象行为模式比类行为模式具有更大的灵活性。\n\n * 责任链模式\n * 命令模式\n * 解释器模式\n * *迭代器模式\n * *中介者模式\n * 备忘录模式\n * *观察者模式\n * 状态模式\n * *策略模式\n * 模板模式\n * 访问者模式\n\n以上几种行为型模式，除了模板方法模式和解释器模式是类行为型模式，其他的全部属于对象行为型模式。\n\n\n# 3.4 j2ee模式\n\n这些设计模式特别关注表示层。\n\n * mvc模式\n * 业务代表模式\n * 组合实体模式\n * 数据访问对象模式\n * 前端控制器模式\n * 拦截过滤器模式\n * 服务定位器模式\n * 传输对象模式',charsets:{cjk:!0}},{title:"note",frontmatter:{title:"note",date:"2022-11-13T02:20:56.000Z",permalink:"/pages/e0e155/"},regularPath:"/20.C++/02.note.html",relativePath:"20.C++/02.note.md",key:"v-164eb618",path:"/pages/e0e155/",headersStr:null,content:"> 书籍：查看\n\n * https://en.cppreference.com/w/cpp/header\n * https://github.com/jobbole/awesome-cpp-cn",normalizedContent:"> 书籍：查看\n\n * https://en.cppreference.com/w/cpp/header\n * https://github.com/jobbole/awesome-cpp-cn",charsets:{cjk:!0}},{title:"设计模式",frontmatter:{title:"设计模式",date:"2022-11-13T15:03:41.000Z",permalink:"/pages/65ccfc/"},regularPath:"/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",relativePath:"10.设计模式/04.设计模式.md",key:"v-675625d0",path:"/pages/65ccfc/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"cmake",frontmatter:{title:"cmake",date:"2022-11-13T22:38:26.000Z",permalink:"/pages/353244/"},regularPath:"/20.C++/04.cmake.html",relativePath:"20.C++/04.cmake.md",key:"v-559637e0",path:"/pages/353244/",headersStr:null,content:"c++项目管理工具",normalizedContent:"c++项目管理工具",charsets:{cjk:!0}},{title:"vscode",frontmatter:{title:"vscode",date:"2022-11-20T13:45:26.000Z",permalink:"/pages/228ce3/"},regularPath:"/20.C++/30.vscode.html",relativePath:"20.C++/30.vscode.md",key:"v-084ae744",path:"/pages/228ce3/",headers:[{level:2,title:"ccppproperties.json",slug:"c-cpp-properties-json",normalizedTitle:"ccppproperties.json",charIndex:null},{level:2,title:"settings.json",slug:"settings-json",normalizedTitle:"settings.json",charIndex:761},{level:2,title:"tasks.json",slug:"tasks-json",normalizedTitle:"tasks.json",charIndex:2678},{level:2,title:"launch.json",slug:"launch-json",normalizedTitle:"launch.json",charIndex:3406}],headersStr:"ccppproperties.json settings.json tasks.json launch.json",content:'# c_cpp_properties.json\n\n{\n    "configurations": [\n        {\n            "name": "Win32", // 配置名称，默认为系统名，可自行更改\n            "includePath": [ // 运行项目包含.h头文件的目录\n                "${workspaceFolder}/**" // 此处会匹配工作文件下的所有文件（添加"compilerPath"后,系统include路径可不写明）\n            ],\n            "defines": [ // 定义一些需要的变量，等价于在编译时写"-D变量"\n                "_DEBUG",\n                "UNICODE",\n                "_UNICODE"\n            ],\n            "compilerPath": "D:\\\\Program Files\\\\mingw64\\\\bin\\\\gcc.exe", // 编译器的路径\n            "cStandard": "gnu17", // C标准的版本\n            "cppStandard": "gnu++14", // C++标准的版本\n            "intelliSenseMode": "windows-gcc-x64" // IntelliSense的一些配置，默认即可\n        }\n    ],\n    "version": 4\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# settings.json\n\n{\n  "files.associations": {\n    "iostream": "cpp",\n    "cinttypes": "cpp",\n    "map": "cpp",\n    "unordered_set": "cpp",\n    "string": "cpp",\n    "array": "cpp",\n    "atomic": "cpp",\n    "*.tcc": "cpp",\n    "bitset": "cpp",\n    "cctype": "cpp",\n    "cfenv": "cpp",\n    "charconv": "cpp",\n    "chrono": "cpp",\n    "clocale": "cpp",\n    "cmath": "cpp",\n    "codecvt": "cpp",\n    "complex": "cpp",\n    "condition_variable": "cpp",\n    "csetjmp": "cpp",\n    "csignal": "cpp",\n    "cstdarg": "cpp",\n    "cstddef": "cpp",\n    "cstdint": "cpp",\n    "cstdio": "cpp",\n    "cstdlib": "cpp",\n    "cstring": "cpp",\n    "ctime": "cpp",\n    "cuchar": "cpp",\n    "cwchar": "cpp",\n    "cwctype": "cpp",\n    "deque": "cpp",\n    "forward_list": "cpp",\n    "list": "cpp",\n    "unordered_map": "cpp",\n    "vector": "cpp",\n    "exception": "cpp",\n    "algorithm": "cpp",\n    "functional": "cpp",\n    "iterator": "cpp",\n    "memory": "cpp",\n    "memory_resource": "cpp",\n    "numeric": "cpp",\n    "optional": "cpp",\n    "random": "cpp",\n    "ratio": "cpp",\n    "regex": "cpp",\n    "set": "cpp",\n    "string_view": "cpp",\n    "system_error": "cpp",\n    "tuple": "cpp",\n    "type_traits": "cpp",\n    "utility": "cpp",\n    "fstream": "cpp",\n    "future": "cpp",\n    "initializer_list": "cpp",\n    "iomanip": "cpp",\n    "iosfwd": "cpp",\n    "istream": "cpp",\n    "limits": "cpp",\n    "mutex": "cpp",\n    "new": "cpp",\n    "ostream": "cpp",\n    "scoped_allocator": "cpp",\n    "shared_mutex": "cpp",\n    "sstream": "cpp",\n    "stdexcept": "cpp",\n    "streambuf": "cpp",\n    "thread": "cpp",\n    "typeindex": "cpp",\n    "typeinfo": "cpp",\n    "valarray": "cpp"\n  },\n  "C_Cpp.errorSquiggles": "Disabled"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n\n\n\n# tasks.json\n\n{\n\t"version": "2.0.0",\n\t"tasks": [\n\t\t{\n\t\t\t"type": "cppbuild", // 任务类型（如果是shell，下面的command就相当于执行shell命令）\n\t\t\t"label": "debug_target_project", // 任务的名称，可以修改，但一定要和launch中的"preLaunchTask"项保持一致\n\t\t\t"command": "D:\\\\Program Files\\\\mingw64\\\\bin\\\\g++.exe", // 编译器（可执行文件）的路径\n\t\t\t"args": [ // 编译时使用的参数，和命令行下相同\n\t\t\t\t"-fdiagnostics-color=always",\n\t\t\t\t"-g",\n\t\t\t\t"${file}",\n\t\t\t\t"-o",\n\t\t\t\t"${fileDirname}\\\\${fileBasenameNoExtension}.exe"\n\t\t\t],\n\t\t\t"options": {\n\t\t\t\t"cwd": "${fileDirname}" // 编译器的目录\n\t\t\t},\n\t\t\t"problemMatcher": [\n\t\t\t\t"$gcc" // 使用gcc捕捉错误\n\t\t\t],\n\t\t\t"group": "build",\n\t\t\t"detail": "编译器: \\"D:\\\\Program Files\\\\mingw64\\\\bin\\\\g++.exe\\"" // 一些描述性信息\n\t\t}\n\t]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# launch.json\n\n{\n  // 使用 IntelliSense 了解相关属性。 \n  // 悬停以查看现有属性的描述。\n  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "name": "(gdb) Windows 上的 Bash 启动", // 运行和调试任务的名称，可自定义\n      "type": "cppdbg", // 配置类型，默认即可\n      "request": "launch", // launch模式允许我们打断点进行调试，默认即可\n      "program": "${workspaceFolder}/a.exe", // 程序目录\n      "args": [], // 程序(main函数)的入口参数\n      "stopAtEntry": false, // 在入口处暂停，选true相当于在入口处增加断点\n      "cwd": "${fileDirname}", // 当前的文件目录\n      "environment": [], // 添加到程序的环境变量\n      "externalConsole": false, // 外部控制台，true在调试时会开启系统控制台窗口，false会使用vscode自带的调试控制台\n      "MIMode": "gdb", // 使用gdb进行调试\n      // "pipeTransport": {\n      //   "debuggerPath": "/usr/bin/gdb",\n      //   "pipeProgram": "${env:windir}\\\\system32\\\\bash.exe",\n      //   "pipeArgs": [\n      //     "-c"\n      //   ],\n      //   "pipeCwd": ""\n      // },\n      "setupCommands": [ // 用来设置gdb的参数，默认即可\n        {\n          "description": "为 gdb 启用整齐打印",\n          "text": "-enable-pretty-printing",\n          "ignoreFailures": true\n        },\n        {\n          "description": "将反汇编风格设置为 Intel",\n          "text": "-gdb-set disassembly-flavor intel",\n          "ignoreFailures": true\n        }\n      ],\n      "preLaunchTask": "debug_target_project", // 运行和调试前要执行的task(编译)任务，任务名要和task.json里的"label"对应\n      "miDebuggerPath": "/usr/bin/gdb" // debug调试工具的路径，这里使用gdb所在的路径\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n',normalizedContent:'# c_cpp_properties.json\n\n{\n    "configurations": [\n        {\n            "name": "win32", // 配置名称，默认为系统名，可自行更改\n            "includepath": [ // 运行项目包含.h头文件的目录\n                "${workspacefolder}/**" // 此处会匹配工作文件下的所有文件（添加"compilerpath"后,系统include路径可不写明）\n            ],\n            "defines": [ // 定义一些需要的变量，等价于在编译时写"-d变量"\n                "_debug",\n                "unicode",\n                "_unicode"\n            ],\n            "compilerpath": "d:\\\\program files\\\\mingw64\\\\bin\\\\gcc.exe", // 编译器的路径\n            "cstandard": "gnu17", // c标准的版本\n            "cppstandard": "gnu++14", // c++标准的版本\n            "intellisensemode": "windows-gcc-x64" // intellisense的一些配置，默认即可\n        }\n    ],\n    "version": 4\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# settings.json\n\n{\n  "files.associations": {\n    "iostream": "cpp",\n    "cinttypes": "cpp",\n    "map": "cpp",\n    "unordered_set": "cpp",\n    "string": "cpp",\n    "array": "cpp",\n    "atomic": "cpp",\n    "*.tcc": "cpp",\n    "bitset": "cpp",\n    "cctype": "cpp",\n    "cfenv": "cpp",\n    "charconv": "cpp",\n    "chrono": "cpp",\n    "clocale": "cpp",\n    "cmath": "cpp",\n    "codecvt": "cpp",\n    "complex": "cpp",\n    "condition_variable": "cpp",\n    "csetjmp": "cpp",\n    "csignal": "cpp",\n    "cstdarg": "cpp",\n    "cstddef": "cpp",\n    "cstdint": "cpp",\n    "cstdio": "cpp",\n    "cstdlib": "cpp",\n    "cstring": "cpp",\n    "ctime": "cpp",\n    "cuchar": "cpp",\n    "cwchar": "cpp",\n    "cwctype": "cpp",\n    "deque": "cpp",\n    "forward_list": "cpp",\n    "list": "cpp",\n    "unordered_map": "cpp",\n    "vector": "cpp",\n    "exception": "cpp",\n    "algorithm": "cpp",\n    "functional": "cpp",\n    "iterator": "cpp",\n    "memory": "cpp",\n    "memory_resource": "cpp",\n    "numeric": "cpp",\n    "optional": "cpp",\n    "random": "cpp",\n    "ratio": "cpp",\n    "regex": "cpp",\n    "set": "cpp",\n    "string_view": "cpp",\n    "system_error": "cpp",\n    "tuple": "cpp",\n    "type_traits": "cpp",\n    "utility": "cpp",\n    "fstream": "cpp",\n    "future": "cpp",\n    "initializer_list": "cpp",\n    "iomanip": "cpp",\n    "iosfwd": "cpp",\n    "istream": "cpp",\n    "limits": "cpp",\n    "mutex": "cpp",\n    "new": "cpp",\n    "ostream": "cpp",\n    "scoped_allocator": "cpp",\n    "shared_mutex": "cpp",\n    "sstream": "cpp",\n    "stdexcept": "cpp",\n    "streambuf": "cpp",\n    "thread": "cpp",\n    "typeindex": "cpp",\n    "typeinfo": "cpp",\n    "valarray": "cpp"\n  },\n  "c_cpp.errorsquiggles": "disabled"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n\n\n\n# tasks.json\n\n{\n\t"version": "2.0.0",\n\t"tasks": [\n\t\t{\n\t\t\t"type": "cppbuild", // 任务类型（如果是shell，下面的command就相当于执行shell命令）\n\t\t\t"label": "debug_target_project", // 任务的名称，可以修改，但一定要和launch中的"prelaunchtask"项保持一致\n\t\t\t"command": "d:\\\\program files\\\\mingw64\\\\bin\\\\g++.exe", // 编译器（可执行文件）的路径\n\t\t\t"args": [ // 编译时使用的参数，和命令行下相同\n\t\t\t\t"-fdiagnostics-color=always",\n\t\t\t\t"-g",\n\t\t\t\t"${file}",\n\t\t\t\t"-o",\n\t\t\t\t"${filedirname}\\\\${filebasenamenoextension}.exe"\n\t\t\t],\n\t\t\t"options": {\n\t\t\t\t"cwd": "${filedirname}" // 编译器的目录\n\t\t\t},\n\t\t\t"problemmatcher": [\n\t\t\t\t"$gcc" // 使用gcc捕捉错误\n\t\t\t],\n\t\t\t"group": "build",\n\t\t\t"detail": "编译器: \\"d:\\\\program files\\\\mingw64\\\\bin\\\\g++.exe\\"" // 一些描述性信息\n\t\t}\n\t]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# launch.json\n\n{\n  // 使用 intellisense 了解相关属性。 \n  // 悬停以查看现有属性的描述。\n  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "name": "(gdb) windows 上的 bash 启动", // 运行和调试任务的名称，可自定义\n      "type": "cppdbg", // 配置类型，默认即可\n      "request": "launch", // launch模式允许我们打断点进行调试，默认即可\n      "program": "${workspacefolder}/a.exe", // 程序目录\n      "args": [], // 程序(main函数)的入口参数\n      "stopatentry": false, // 在入口处暂停，选true相当于在入口处增加断点\n      "cwd": "${filedirname}", // 当前的文件目录\n      "environment": [], // 添加到程序的环境变量\n      "externalconsole": false, // 外部控制台，true在调试时会开启系统控制台窗口，false会使用vscode自带的调试控制台\n      "mimode": "gdb", // 使用gdb进行调试\n      // "pipetransport": {\n      //   "debuggerpath": "/usr/bin/gdb",\n      //   "pipeprogram": "${env:windir}\\\\system32\\\\bash.exe",\n      //   "pipeargs": [\n      //     "-c"\n      //   ],\n      //   "pipecwd": ""\n      // },\n      "setupcommands": [ // 用来设置gdb的参数，默认即可\n        {\n          "description": "为 gdb 启用整齐打印",\n          "text": "-enable-pretty-printing",\n          "ignorefailures": true\n        },\n        {\n          "description": "将反汇编风格设置为 intel",\n          "text": "-gdb-set disassembly-flavor intel",\n          "ignorefailures": true\n        }\n      ],\n      "prelaunchtask": "debug_target_project", // 运行和调试前要执行的task(编译)任务，任务名要和task.json里的"label"对应\n      "midebuggerpath": "/usr/bin/gdb" // debug调试工具的路径，这里使用gdb所在的路径\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n',charsets:{cjk:!0}},{title:"日常可用",frontmatter:{title:"日常可用",date:"2022-11-13T02:12:53.000Z",permalink:"/pages/263d7a/"},regularPath:"/22.Common/02.%E6%97%A5%E5%B8%B8%E5%8F%AF%E7%94%A8.html",relativePath:"22.Common/02.日常可用.md",key:"v-4bcb0bb2",path:"/pages/263d7a/",headers:[{level:2,title:"有意思",slug:"有意思",normalizedTitle:"有意思",charIndex:2},{level:2,title:"画图工具",slug:"画图工具",normalizedTitle:"画图工具",charIndex:100},{level:2,title:"打字练习",slug:"打字练习",normalizedTitle:"打字练习",charIndex:145},{level:2,title:"在线笔记",slug:"在线笔记",normalizedTitle:"在线笔记",charIndex:196},{level:2,title:"镜像",slug:"镜像",normalizedTitle:"镜像",charIndex:255}],headersStr:"有意思 画图工具 打字练习 在线笔记 镜像",content:"# 有意思\n\n * tiobe\n * Carbon\n * TinyPNG\n * 二维码生成器\n * json格式化\n * avataaars generator\n * 轻松传\n * m3u8\n\n\n# 画图工具\n\n 1. PlantUML\n 2. ProcessOn\n 3. 乐吾乐\n\n\n# 打字练习\n\n 1. Ratatype\n 2. typing.com\n 3. palerdot\n\n\n# 在线笔记\n\n 1. wolai\n 2. Notion\n 3. Readwise\n 4. Instapaper\n\n\n# 镜像\n\n 1. 清华大学开源软件镜像站\n 2. 阿里云官方镜像站\n 3. MSDN\n 4. Parallels\n 5. UUP dump",normalizedContent:"# 有意思\n\n * tiobe\n * carbon\n * tinypng\n * 二维码生成器\n * json格式化\n * avataaars generator\n * 轻松传\n * m3u8\n\n\n# 画图工具\n\n 1. plantuml\n 2. processon\n 3. 乐吾乐\n\n\n# 打字练习\n\n 1. ratatype\n 2. typing.com\n 3. palerdot\n\n\n# 在线笔记\n\n 1. wolai\n 2. notion\n 3. readwise\n 4. instapaper\n\n\n# 镜像\n\n 1. 清华大学开源软件镜像站\n 2. 阿里云官方镜像站\n 3. msdn\n 4. parallels\n 5. uup dump",charsets:{cjk:!0}},{title:"命令行",frontmatter:{title:"命令行",date:"2022-07-28T00:25:45.000Z",permalink:"/pages/101c12/"},regularPath:"/22.Common/04.%E5%91%BD%E4%BB%A4%E8%A1%8C.html",relativePath:"22.Common/04.命令行.md",key:"v-a325224c",path:"/pages/101c12/",headers:[{level:2,title:"bash 和 shell 的区别",slug:"bash-和-shell-的区别",normalizedTitle:"bash 和 shell 的区别",charIndex:32},{level:2,title:"powershell 和 cmd 的区别",slug:"powershell-和-cmd-的区别",normalizedTitle:"powershell 和 cmd 的区别",charIndex:70},{level:2,title:"执行同名可执行文件的顺序",slug:"执行同名可执行文件的顺序",normalizedTitle:"执行同名可执行文件的顺序",charIndex:784},{level:2,title:"【重点】标准命令行的组成格式",slug:"【重点】标准命令行的组成格式",normalizedTitle:"【重点】标准命令行的组成格式",charIndex:913},{level:2,title:"写一个 CLI",slug:"写一个-cli",normalizedTitle:"写一个 cli",charIndex:954},{level:3,title:"命令行交互",slug:"命令行交互",normalizedTitle:"命令行交互",charIndex:1466},{level:3,title:"命令行 Options",slug:"命令行-options",normalizedTitle:"命令行 options",charIndex:1486}],headersStr:"bash 和 shell 的区别 powershell 和 cmd 的区别 执行同名可执行文件的顺序 【重点】标准命令行的组成格式 写一个 CLI 命令行交互 命令行 Options",content:' * Windows 命令\n * Linux 命令大全\n\n\n# bash 和 shell 的区别\n\n深入理解 shell/bash\n\n\n# powershell 和 cmd 的区别\n\n> 命令提示符是在操作系统中，提示进行命令输入的一种工作提示符。在 Windows 环境下，命令行程序为 cmd.exe，是一个 32 位的命令行程序。 输入一些命令，cmd.exe 可以执行。\n> \n> PowerShell 是一种跨平台的任务自动化和配置管理框架，由命令行管理程序和脚本语言组成。\n\n 1. CMD 写的 BAT 脚本我们看作是面向过程的，而 PowerShell 则是面向对象的。\n 2. CMD 是能执行基本的任务，本身并没有集成太多的功能，大多依赖于第三方的程序；PowerShell 因为是基于 .net 面向对象的，而且本身就内置了非常多的命令；使得它不管从功能上还是性能上都要比 CMD 强大的多。\n\n”运行“菜单\n\n 1. 里边运行的命令实际上都是在 Windows 目录和 System32 目录下对应的小程序, 比如 CMD, Telnet 等；\n 2. “运行”菜单相当于打开“我的电脑”时的地址栏一样, 可以在里边输入路径等，但是它还可以输入命令； 因为它和系统环境变量关联起来的, 系统环境变量正好包括了 Windows 目录和 System32 目录, 因此这两个目录下的程序都可以省略路径信息而直接在“运行”中输入程序名称就当命令使用了。\n\n用户变量 | 环境变量（Windows 系统中的变量）\n\n运行原理\n\n当我们在命令行窗口打开一个文件, 或调用一个程序时, 如果没有找到则会依次到环境变量 path 变量的路径中寻找, 直到找到为止, 如果没找到则报错。\n\n默认系统变量：SystemRoot = C:\\Windows\n\n\n# 执行同名可执行文件的顺序\n\n命令的顺序取决于扩展存储在 PATHEXT 环境变量中的顺序：\n\nPATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\n\n\n1\n\n\n排在左面的先执行。\n\n\n# 【重点】标准命令行的组成格式\n\n> 一个符合GNU标准的命令行的组成格式\n\n\n# 写一个 CLI\n\n> 逐步剖析前端脚手架工具cli的基本原理\n\n在 package.json 中配置：\n\n{\n  "bin": {\n    "cli-name": "./index.js"\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n解释：#!/usr/bin/env node\n\n对于文件来说，#! 这个符号代表此文件可以当作脚本运行，那么怎么运行呢，/usr/bin/env node 这行的意思就是用 node 来执行此文件， node 怎么来的呢？就是用户 (usr) 的安装根目录 (bin) 下的 env 环境变量中去找，简单的说就是：如果在 Windows 上面， 就去安装 node 的 bin 目录去找 node 的执行器， 一般我们都放在环境变量中。\n\n解释：bin\n\n对于一个模块来说，如果是全局安装，则 npm 会为 bin 中配置的文件在 bin 目录下创建一个软链接 （对于 windows 系统，默认会在 C:\\Users\\username\\AppData\\Roaming\\npm 目录下），如果是局部安装，则会在项目内的 ./node_modules/.bin/ 目录下创建一个软连接。\n\n\n# 命令行交互\n\ninquirer\n\n\n# 命令行 Options\n\ncommander',normalizedContent:' * windows 命令\n * linux 命令大全\n\n\n# bash 和 shell 的区别\n\n深入理解 shell/bash\n\n\n# powershell 和 cmd 的区别\n\n> 命令提示符是在操作系统中，提示进行命令输入的一种工作提示符。在 windows 环境下，命令行程序为 cmd.exe，是一个 32 位的命令行程序。 输入一些命令，cmd.exe 可以执行。\n> \n> powershell 是一种跨平台的任务自动化和配置管理框架，由命令行管理程序和脚本语言组成。\n\n 1. cmd 写的 bat 脚本我们看作是面向过程的，而 powershell 则是面向对象的。\n 2. cmd 是能执行基本的任务，本身并没有集成太多的功能，大多依赖于第三方的程序；powershell 因为是基于 .net 面向对象的，而且本身就内置了非常多的命令；使得它不管从功能上还是性能上都要比 cmd 强大的多。\n\n”运行“菜单\n\n 1. 里边运行的命令实际上都是在 windows 目录和 system32 目录下对应的小程序, 比如 cmd, telnet 等；\n 2. “运行”菜单相当于打开“我的电脑”时的地址栏一样, 可以在里边输入路径等，但是它还可以输入命令； 因为它和系统环境变量关联起来的, 系统环境变量正好包括了 windows 目录和 system32 目录, 因此这两个目录下的程序都可以省略路径信息而直接在“运行”中输入程序名称就当命令使用了。\n\n用户变量 | 环境变量（windows 系统中的变量）\n\n运行原理\n\n当我们在命令行窗口打开一个文件, 或调用一个程序时, 如果没有找到则会依次到环境变量 path 变量的路径中寻找, 直到找到为止, 如果没找到则报错。\n\n默认系统变量：systemroot = c:\\windows\n\n\n# 执行同名可执行文件的顺序\n\n命令的顺序取决于扩展存储在 pathext 环境变量中的顺序：\n\npathext=.com;.exe;.bat;.cmd;.vbs;.vbe;.js;.jse;.wsf;.wsh;.msc\n\n\n1\n\n\n排在左面的先执行。\n\n\n# 【重点】标准命令行的组成格式\n\n> 一个符合gnu标准的命令行的组成格式\n\n\n# 写一个 cli\n\n> 逐步剖析前端脚手架工具cli的基本原理\n\n在 package.json 中配置：\n\n{\n  "bin": {\n    "cli-name": "./index.js"\n  }\n}\n\n\n1\n2\n3\n4\n5\n\n\n解释：#!/usr/bin/env node\n\n对于文件来说，#! 这个符号代表此文件可以当作脚本运行，那么怎么运行呢，/usr/bin/env node 这行的意思就是用 node 来执行此文件， node 怎么来的呢？就是用户 (usr) 的安装根目录 (bin) 下的 env 环境变量中去找，简单的说就是：如果在 windows 上面， 就去安装 node 的 bin 目录去找 node 的执行器， 一般我们都放在环境变量中。\n\n解释：bin\n\n对于一个模块来说，如果是全局安装，则 npm 会为 bin 中配置的文件在 bin 目录下创建一个软链接 （对于 windows 系统，默认会在 c:\\users\\username\\appdata\\roaming\\npm 目录下），如果是局部安装，则会在项目内的 ./node_modules/.bin/ 目录下创建一个软连接。\n\n\n# 命令行交互\n\ninquirer\n\n\n# 命令行 options\n\ncommander',charsets:{cjk:!0}},{title:"Git",frontmatter:{title:"Git",date:"2022-07-30T13:07:46.000Z",permalink:"/pages/87173b/"},regularPath:"/22.Common/06.Git.html",relativePath:"22.Common/06.Git.md",key:"v-4c4a0522",path:"/pages/87173b/",headers:[{level:2,title:"git工作原理",slug:"git工作原理",normalizedTitle:"git工作原理",charIndex:43},{level:3,title:"文件的四种状态",slug:"文件的四种状态",normalizedTitle:"文件的四种状态",charIndex:55},{level:3,title:"文件的四个阶段",slug:"文件的四个阶段",normalizedTitle:"文件的四个阶段",charIndex:527},{level:3,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:539},{level:2,title:"Github",slug:"github",normalizedTitle:"github",charIndex:548},{level:3,title:"注册 Github",slug:"注册-github",normalizedTitle:"注册 github",charIndex:559},{level:3,title:"本地配置 SSH 连接",slug:"本地配置-ssh-连接",normalizedTitle:"本地配置 ssh 连接",charIndex:587},{level:2,title:"【重点】本地项目设置",slug:"【重点】本地项目设置",normalizedTitle:"【重点】本地项目设置",charIndex:1247},{level:3,title:"初始化本地仓库",slug:"初始化本地仓库",normalizedTitle:"初始化本地仓库",charIndex:1262},{level:3,title:"提交文件到缓存区",slug:"提交文件到缓存区",normalizedTitle:"提交文件到缓存区",charIndex:1313},{level:3,title:"将缓存区文件提交到本地仓库",slug:"将缓存区文件提交到本地仓库",normalizedTitle:"将缓存区文件提交到本地仓库",charIndex:1679},{level:3,title:"建立连接",slug:"建立连接",normalizedTitle:"建立连接",charIndex:1859},{level:3,title:"上传远程仓库",slug:"上传远程仓库",normalizedTitle:"上传远程仓库",charIndex:1979},{level:3,title:"文件下拉",slug:"文件下拉",normalizedTitle:"文件下拉",charIndex:2086},{level:3,title:"文件克隆",slug:"文件克隆",normalizedTitle:"文件克隆",charIndex:2126},{level:3,title:"回退",slug:"回退",normalizedTitle:"回退",charIndex:2174},{level:3,title:"rebase",slug:"rebase",normalizedTitle:"rebase",charIndex:2590},{level:3,title:"git stash",slug:"git-stash",normalizedTitle:"git stash",charIndex:2601},{level:2,title:"分支管理",slug:"分支管理",normalizedTitle:"分支管理",charIndex:2647},{level:2,title:"标签管理",slug:"标签管理",normalizedTitle:"标签管理",charIndex:3456}],headersStr:"git工作原理 文件的四种状态 文件的四个阶段 常用命令 Github 注册 Github 本地配置 SSH 连接 【重点】本地项目设置 初始化本地仓库 提交文件到缓存区 将缓存区文件提交到本地仓库 建立连接 上传远程仓库 文件下拉 文件克隆 回退 rebase git stash 分支管理 标签管理",content:'Git官方文档\n\n * git 分布式版本控制\n * svn 集中式版本控制\n\n\n# git工作原理\n\n\n# 文件的四种状态\n\n * Untracked：未跟踪，此文件在文件夹中，但并没有加入到 git 库，不参与版本控制，通过 git add 状态变为 Staged。\n * Staged：暂存状态. 执行 git commit 则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为 unModified 状态，执行 git reset HEAD filename 取消暂存，文件状态为 Modified。\n * UnModified：文件已经入库，未修改，即版本库中的文件快照内容与文件夹中完全一致。这种类型的文件有两种去处，如果它被修改，而变为 Modified. 如果使用 git rm 移出版本库，则成为 Untracked 文件。\n * Modified：文件已修改，仅仅是修改，并没有进行其它操作。这个文件也有两个去处，通过 git add 可进入暂存 staged 状态，使用 git checkout 则丢弃修改过，返回到 unModified 状态，这个 git checkout 即从库中取出文件，覆盖当前修改。\n\n\n# 文件的四个阶段\n\n\n# 常用命令\n\n\n# Github\n\n\n# 注册 Github\n\n像常规软件一样注册即可。\n\n\n# 本地配置 SSH 连接\n\n# 配置用户名和邮箱\n\ngit config --global user.name "username"\ngit config --global user.email "email"\n\n\n1\n2\n\n\n查看配置\n\ngit config --system --list    // 全局配置\ngit config --global --list    // 自定义配置\n\n\n1\n2\n\n\n# 本地生成ssh公钥和私钥\n\nssh-keygen -t rsa -C "email"\n\n\n1\n\n\n此时会生成在目录 C:\\user\\username\\.ssh 下生成\n\nC:\\user\\username\\.ssh\\\n\t- id_rsa\n\t- id_rsa.pub\n\n\n1\n2\n3\n\n\n如果没有上述文件，只有 known_hosts ，那么先删除 known_hosts ，然后执行\n\nssh-keygen -t rsa -C "username"\n\n\n1\n\n\n即可。\n\n然后，打开文件 id_rsa.pub 复制全部内容粘贴到 github 上，生成 SSH key。\n\n# 添加SSH Key到GitHub\n\n# 检测 ssh 连接是否成功\nssh -T git@github.com\n# 输入-> Hi username! You\'ve successfully authenticated, but GitHub does not provide shell access.\n\n\n1\n2\n3\n\n\n\n# 【重点】本地项目设置\n\n\n# 初始化本地仓库\n\n> 此时项目根目录下会生成 .git 文件夹\n\ngit init\n\n\n1\n\n\n\n# 提交文件到缓存区\n\n# 将某个文件加到缓存区\ngit add <filename.ext>\n\n# 将 xx 文件夹下的所有的 html 文件添加到缓存区\ngit add xx文件夹/*.html\n\n# 将以 hhh 结尾的文件的所有修改添加到暂存区\ngit add *hhh\n\n# 将所有以 Hello 开头的文件的修改添加到暂存区\ngit add Hello*\n\n# 提交被修改(modified)和被删除(deleted)文件，不包括新文件\ngit add -u\n\n# 提交新文件和被修改(modified)文件，不包括被删除(deleted)文件\ngit add .\n\n# 提交所有变化\ngit add -A\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 将缓存区文件提交到本地仓库\n\n# 提交文件到本地仓库\n$ git commit -m "comment"\n\n\n1\n2\n\n\nOK, 到这里我们已经将项目文件上传到本地仓库，下面就是我们的最终目的， 将本地仓库文件上传到 github repo 中。 我们在 GitHub 上可以有很多的 repo，我们要如何指定我们目标 repo 呢？下面很关键。。。\n\n\n# 建立连接\n\n# 通过 repo 的 ssh 地址，建立本地和目的 repo 的连接\ngit remote add origin <ssh_url>\n\n# 查看本地的所有远程连接\ngit remote -v\n\n\n1\n2\n3\n4\n5\n\n\n\n# 上传远程仓库\n\n# \ngit push <options> origin <branch_name>\n-f    # 如果本地版本与远程版本有差异，这时可以强制上传\n-u    # \n\n\n1\n2\n3\n4\n\n\n\n# 文件下拉\n\n# 文件下拉\ngit pull origin\n\n\n1\n2\n\n\n\n# 文件克隆\n\n# 文件克隆\ngit clone 地址[https/ssh]\n\n\n1\n2\n\n\n\n# 回退\n\n在 git 中，用 HEAD 表示当前版本，也就是最新的提交，上一个版本就是 HEAD^，所以你让 HEAD 指向哪个版本号，你就把当前版本定位在哪。\n\n# 回退到上一版本\ngit reset --hard HEAD^\n--soft  # 修改内容还在，变成未add的状态\n--mixed # 修改内容还在，变成未add的状态\n--hard  # 修改内容丢失，修改的代码 不会变成未add的状态\n\n\n1\n2\n3\n4\n5\n\n\n如何理解 HEAD、索引（暂存区）和工作目录？\n\nGit 是目前世界上最先进的分布式版本控制系统，工作区有一个隐藏目录 .git，它是 Git 的版本库。\n\nGit 的版本库里存了很多东西，其中最重要的就是称为 stage（或者叫 index）的暂存区， 还有 Git 为我们创建的第一个分支 master，以及指向 master 的一个指针叫 HEAD。\n\n工作区就是电脑里的项目目录。\n\n\n# rebase\n\n\n# git stash\n\nGit三大特色之Stage(暂存区)\n\ngit rebase\n\n\n# 分支管理\n\n# 查看所有分支\ngit branch\n\n# 查看所有远程分支\ngit branch -r\n\n# 新建一个分支，但依然停留在当前分支\ngit branch <branch_name>\n\n# 切换分支（两种方法）\ngit checkout <branch_name>\ngit switch <branch_name>\n\n# 新建一个分支，并切换到该分支（两种方法）\ngit checkout -b <branch_name>\ngit switch -c <branch_name>\n\n# 合并指定分支到当前分支\ngit merge <branch_name>\n\n# 删除本地分支\ngit branch -D <branch_name>\n\n# 删除远程分支\ngit push origin --delete <branch_name>\n\n# 查看分支合并图。\ngit log --graph\n\n# 设置 origin/HEAD 指向\ngit remote set-head origin -a\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n提交到 main 分支\n\n主要有以下几步：\n\n 1. 将 main 分支拉取到本地，然后创建 main 分支，并将 master 分支合并到 main 分支，建立本地 main 分支和远程分支的关联。\n\n# 加上后面这个选项允许不相关历史提交\ngit pull origin main --allow-unrelated-histories\n\n# 建立本地分支与远程分支的关联\ngit branch --set-upstream-to=origin/<branch_name> <branch_name>\n\n\n1\n2\n3\n4\n5\n\n\n\n# 标签管理\n\n# 查看标签\ngit tag\n\n# 创建标签\ngit tag <name>\n\n# 查看commit id\ngit log --pretty=oneline --abbrev-commit\n\n# 为之前提交的内容打标签\ngit tag <tagname> commit-id\n\n# 查看标签信息，查看说明文字\ngit show <tagname>\n\n# 创建带有说明的标签\ngit tag -a <tagname> -m <说明文字> commit-id\n\n# 删除（本地）标签\ngit tag -d <tagname> \n\n# 删除远程标签（两步）\ngit tag -d <tagname>\ngit push origin :refs/tags/<tagname>\n\n# 推送标签到远程\ngit push origin <tagname>\n\n# 一次性推送全部尚未推送到远程的本地标签\ngit push origin --tags\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n',normalizedContent:'git官方文档\n\n * git 分布式版本控制\n * svn 集中式版本控制\n\n\n# git工作原理\n\n\n# 文件的四种状态\n\n * untracked：未跟踪，此文件在文件夹中，但并没有加入到 git 库，不参与版本控制，通过 git add 状态变为 staged。\n * staged：暂存状态. 执行 git commit 则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为 unmodified 状态，执行 git reset head filename 取消暂存，文件状态为 modified。\n * unmodified：文件已经入库，未修改，即版本库中的文件快照内容与文件夹中完全一致。这种类型的文件有两种去处，如果它被修改，而变为 modified. 如果使用 git rm 移出版本库，则成为 untracked 文件。\n * modified：文件已修改，仅仅是修改，并没有进行其它操作。这个文件也有两个去处，通过 git add 可进入暂存 staged 状态，使用 git checkout 则丢弃修改过，返回到 unmodified 状态，这个 git checkout 即从库中取出文件，覆盖当前修改。\n\n\n# 文件的四个阶段\n\n\n# 常用命令\n\n\n# github\n\n\n# 注册 github\n\n像常规软件一样注册即可。\n\n\n# 本地配置 ssh 连接\n\n# 配置用户名和邮箱\n\ngit config --global user.name "username"\ngit config --global user.email "email"\n\n\n1\n2\n\n\n查看配置\n\ngit config --system --list    // 全局配置\ngit config --global --list    // 自定义配置\n\n\n1\n2\n\n\n# 本地生成ssh公钥和私钥\n\nssh-keygen -t rsa -c "email"\n\n\n1\n\n\n此时会生成在目录 c:\\user\\username\\.ssh 下生成\n\nc:\\user\\username\\.ssh\\\n\t- id_rsa\n\t- id_rsa.pub\n\n\n1\n2\n3\n\n\n如果没有上述文件，只有 known_hosts ，那么先删除 known_hosts ，然后执行\n\nssh-keygen -t rsa -c "username"\n\n\n1\n\n\n即可。\n\n然后，打开文件 id_rsa.pub 复制全部内容粘贴到 github 上，生成 ssh key。\n\n# 添加ssh key到github\n\n# 检测 ssh 连接是否成功\nssh -t git@github.com\n# 输入-> hi username! you\'ve successfully authenticated, but github does not provide shell access.\n\n\n1\n2\n3\n\n\n\n# 【重点】本地项目设置\n\n\n# 初始化本地仓库\n\n> 此时项目根目录下会生成 .git 文件夹\n\ngit init\n\n\n1\n\n\n\n# 提交文件到缓存区\n\n# 将某个文件加到缓存区\ngit add <filename.ext>\n\n# 将 xx 文件夹下的所有的 html 文件添加到缓存区\ngit add xx文件夹/*.html\n\n# 将以 hhh 结尾的文件的所有修改添加到暂存区\ngit add *hhh\n\n# 将所有以 hello 开头的文件的修改添加到暂存区\ngit add hello*\n\n# 提交被修改(modified)和被删除(deleted)文件，不包括新文件\ngit add -u\n\n# 提交新文件和被修改(modified)文件，不包括被删除(deleted)文件\ngit add .\n\n# 提交所有变化\ngit add -a\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 将缓存区文件提交到本地仓库\n\n# 提交文件到本地仓库\n$ git commit -m "comment"\n\n\n1\n2\n\n\nok, 到这里我们已经将项目文件上传到本地仓库，下面就是我们的最终目的， 将本地仓库文件上传到 github repo 中。 我们在 github 上可以有很多的 repo，我们要如何指定我们目标 repo 呢？下面很关键。。。\n\n\n# 建立连接\n\n# 通过 repo 的 ssh 地址，建立本地和目的 repo 的连接\ngit remote add origin <ssh_url>\n\n# 查看本地的所有远程连接\ngit remote -v\n\n\n1\n2\n3\n4\n5\n\n\n\n# 上传远程仓库\n\n# \ngit push <options> origin <branch_name>\n-f    # 如果本地版本与远程版本有差异，这时可以强制上传\n-u    # \n\n\n1\n2\n3\n4\n\n\n\n# 文件下拉\n\n# 文件下拉\ngit pull origin\n\n\n1\n2\n\n\n\n# 文件克隆\n\n# 文件克隆\ngit clone 地址[https/ssh]\n\n\n1\n2\n\n\n\n# 回退\n\n在 git 中，用 head 表示当前版本，也就是最新的提交，上一个版本就是 head^，所以你让 head 指向哪个版本号，你就把当前版本定位在哪。\n\n# 回退到上一版本\ngit reset --hard head^\n--soft  # 修改内容还在，变成未add的状态\n--mixed # 修改内容还在，变成未add的状态\n--hard  # 修改内容丢失，修改的代码 不会变成未add的状态\n\n\n1\n2\n3\n4\n5\n\n\n如何理解 head、索引（暂存区）和工作目录？\n\ngit 是目前世界上最先进的分布式版本控制系统，工作区有一个隐藏目录 .git，它是 git 的版本库。\n\ngit 的版本库里存了很多东西，其中最重要的就是称为 stage（或者叫 index）的暂存区， 还有 git 为我们创建的第一个分支 master，以及指向 master 的一个指针叫 head。\n\n工作区就是电脑里的项目目录。\n\n\n# rebase\n\n\n# git stash\n\ngit三大特色之stage(暂存区)\n\ngit rebase\n\n\n# 分支管理\n\n# 查看所有分支\ngit branch\n\n# 查看所有远程分支\ngit branch -r\n\n# 新建一个分支，但依然停留在当前分支\ngit branch <branch_name>\n\n# 切换分支（两种方法）\ngit checkout <branch_name>\ngit switch <branch_name>\n\n# 新建一个分支，并切换到该分支（两种方法）\ngit checkout -b <branch_name>\ngit switch -c <branch_name>\n\n# 合并指定分支到当前分支\ngit merge <branch_name>\n\n# 删除本地分支\ngit branch -d <branch_name>\n\n# 删除远程分支\ngit push origin --delete <branch_name>\n\n# 查看分支合并图。\ngit log --graph\n\n# 设置 origin/head 指向\ngit remote set-head origin -a\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n提交到 main 分支\n\n主要有以下几步：\n\n 1. 将 main 分支拉取到本地，然后创建 main 分支，并将 master 分支合并到 main 分支，建立本地 main 分支和远程分支的关联。\n\n# 加上后面这个选项允许不相关历史提交\ngit pull origin main --allow-unrelated-histories\n\n# 建立本地分支与远程分支的关联\ngit branch --set-upstream-to=origin/<branch_name> <branch_name>\n\n\n1\n2\n3\n4\n5\n\n\n\n# 标签管理\n\n# 查看标签\ngit tag\n\n# 创建标签\ngit tag <name>\n\n# 查看commit id\ngit log --pretty=oneline --abbrev-commit\n\n# 为之前提交的内容打标签\ngit tag <tagname> commit-id\n\n# 查看标签信息，查看说明文字\ngit show <tagname>\n\n# 创建带有说明的标签\ngit tag -a <tagname> -m <说明文字> commit-id\n\n# 删除（本地）标签\ngit tag -d <tagname> \n\n# 删除远程标签（两步）\ngit tag -d <tagname>\ngit push origin :refs/tags/<tagname>\n\n# 推送标签到远程\ngit push origin <tagname>\n\n# 一次性推送全部尚未推送到远程的本地标签\ngit push origin --tags\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n',charsets:{cjk:!0}},{title:"Linux",frontmatter:{title:"Linux",date:"2022-11-13T15:27:35.000Z",permalink:"/pages/77064b/"},regularPath:"/22.Common/12.Linux.html",relativePath:"22.Common/12.Linux.md",key:"v-6462a9b0",path:"/pages/77064b/",headers:[{level:2,title:"搭建Linux系统",slug:"搭建linux系统",normalizedTitle:"搭建linux系统",charIndex:2},{level:2,title:"安装虚拟机",slug:"安装虚拟机",normalizedTitle:"安装虚拟机",charIndex:17},{level:2,title:"wsl",slug:"wsl",normalizedTitle:"wsl",charIndex:27},{level:2,title:"直接安装Linux系统",slug:"直接安装linux系统",normalizedTitle:"直接安装linux系统",charIndex:35}],headersStr:"搭建Linux系统 安装虚拟机 wsl 直接安装Linux系统",content:"# 搭建Linux系统\n\n 1. 安装虚拟机\n 2. wsl\n 3. 直接安装Linux系统\n\n\n# 安装虚拟机\n\n * Windows上安装虚拟机\n   * VM Ware\n   * VM VirtualBox\n * MacOS上安装虚拟机\n\n\n# wsl\n\n现在使用这种方式。\n\nhttps://learn.microsoft.com/zh-cn/windows/wsl/install\n\n\n# 直接安装Linux系统\n\n> 以Ubuntu18.04版举例。",normalizedContent:"# 搭建linux系统\n\n 1. 安装虚拟机\n 2. wsl\n 3. 直接安装linux系统\n\n\n# 安装虚拟机\n\n * windows上安装虚拟机\n   * vm ware\n   * vm virtualbox\n * macos上安装虚拟机\n\n\n# wsl\n\n现在使用这种方式。\n\nhttps://learn.microsoft.com/zh-cn/windows/wsl/install\n\n\n# 直接安装linux系统\n\n> 以ubuntu18.04版举例。",charsets:{cjk:!0}},{title:"软件",frontmatter:{title:"软件",date:"2022-11-13T03:21:21.000Z",permalink:"/pages/d4b4c0/"},regularPath:"/22.Common/60.%E8%BD%AF%E4%BB%B6.html",relativePath:"22.Common/60.软件.md",key:"v-259c3ae0",path:"/pages/d4b4c0/",headers:[{level:2,title:"在线编程工具",slug:"在线编程工具",normalizedTitle:"在线编程工具",charIndex:30},{level:2,title:"IDE",slug:"ide",normalizedTitle:"ide",charIndex:101},{level:2,title:"VM",slug:"vm",normalizedTitle:"vm",charIndex:584},{level:2,title:"SSH Tools",slug:"ssh-tools",normalizedTitle:"ssh tools",charIndex:629},{level:2,title:"与我无用呐",slug:"与我无用呐",normalizedTitle:"与我无用呐",charIndex:669}],headersStr:"在线编程工具 IDE VM SSH Tools 与我无用呐",content:"> 总结一下吧，虽然用处不大，但不记录总感觉缺什么\n\n\n# 在线编程工具\n\n 1. stackbliz\n 2. codeSandbox\n 3. codepen\n 4. Cloud Studio\n\n\n# IDE\n\nIDE NAME             COMPANY     LANGUAGES\nVisual Studio Code   Microsoft   All\nWebstorm             JetBrains   JS\nIntelliJ IDEA        JetBrains   Java\nPyCharm              JetBrains   Python\nClion                JetBrains   C/C++\nGoLand               JetBrains   Go\nPhpStorm             JetBrains   PHP\nRider                JetBrains   .NET\nAndroid Studio       Google      android\nVisual Studio        Microsoft   C/C++ .NET\neclipse              Oracle      Java Python\n\n\n# VM\n\nVM Ware Station\n\nVirtualBox\n\nVagrant\n\n\n# SSH Tools\n\nXShell + Xftp\n\nMobaXterm\n\n\n# 与我无用呐\n\nXAMPP(Apache + MySQL + PHP + PERL)\n\nWAMP(Apache + MySQL/MariDB + PHP + PHPMyAdmin)\n\nPowerDesigner\n\nRDM",normalizedContent:"> 总结一下吧，虽然用处不大，但不记录总感觉缺什么\n\n\n# 在线编程工具\n\n 1. stackbliz\n 2. codesandbox\n 3. codepen\n 4. cloud studio\n\n\n# ide\n\nide name             company     languages\nvisual studio code   microsoft   all\nwebstorm             jetbrains   js\nintellij idea        jetbrains   java\npycharm              jetbrains   python\nclion                jetbrains   c/c++\ngoland               jetbrains   go\nphpstorm             jetbrains   php\nrider                jetbrains   .net\nandroid studio       google      android\nvisual studio        microsoft   c/c++ .net\neclipse              oracle      java python\n\n\n# vm\n\nvm ware station\n\nvirtualbox\n\nvagrant\n\n\n# ssh tools\n\nxshell + xftp\n\nmobaxterm\n\n\n# 与我无用呐\n\nxampp(apache + mysql + php + perl)\n\nwamp(apache + mysql/maridb + php + phpmyadmin)\n\npowerdesigner\n\nrdm",charsets:{cjk:!0}},{title:"博客文章",frontmatter:{title:"博客文章",date:"2022-07-28T00:37:13.000Z",permalink:"/pages/3894e9/"},regularPath:"/99.%E6%94%B6%E8%97%8F/04.%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0.html",relativePath:"99.收藏/04.博客文章.md",key:"v-1ffcc279",path:"/pages/3894e9/",headersStr:null,content:" 1. 最新Tampermonkey 中文文档解析\n 2. 字体了解\n 3. Github搜索\n 4. VuePress搭建博客与自动部署",normalizedContent:" 1. 最新tampermonkey 中文文档解析\n 2. 字体了解\n 3. github搜索\n 4. vuepress搭建博客与自动部署",charsets:{cjk:!0}},{title:"前端相关网站",frontmatter:{title:"前端相关网站",date:"2022-07-27T23:42:11.000Z",permalink:"/pages/bceabe/"},regularPath:"/99.%E6%94%B6%E8%97%8F/06.%E5%89%8D%E7%AB%AF%E7%9B%B8%E5%85%B3%E7%BD%91%E7%AB%99.html",relativePath:"99.收藏/06.前端相关网站.md",key:"v-5c505a1c",path:"/pages/bceabe/",headers:[{level:2,title:"HTML / CSS / JavaScript",slug:"html-css-javascript",normalizedTitle:"html / css / javascript",charIndex:34},{level:3,title:"CSS Processor",slug:"css-processor",normalizedTitle:"css processor",charIndex:161},{level:3,title:"CSS库",slug:"css库",normalizedTitle:"css库",charIndex:211},{level:3,title:"项目说明文件",slug:"项目说明文件",normalizedTitle:"项目说明文件",charIndex:246},{level:3,title:"JS库",slug:"js库",normalizedTitle:"js库",charIndex:337},{level:3,title:"项目构建和管理工具",slug:"项目构建和管理工具",normalizedTitle:"项目构建和管理工具",charIndex:376},{level:2,title:"设计规范",slug:"设计规范",normalizedTitle:"设计规范",charIndex:569},{level:2,title:"Web Framework",slug:"web-framework",normalizedTitle:"web framework",charIndex:635},{level:3,title:"Vue",slug:"vue",normalizedTitle:"vue",charIndex:687},{level:3,title:"Angular",slug:"angular",normalizedTitle:"angular",charIndex:873},{level:3,title:"React",slug:"react",normalizedTitle:"react",charIndex:1076},{level:3,title:"插件化 Framework",slug:"插件化-framework",normalizedTitle:"插件化 framework",charIndex:1201},{level:2,title:"移动端",slug:"移动端",normalizedTitle:"移动端",charIndex:1248},{level:3,title:"小程序",slug:"小程序",normalizedTitle:"小程序",charIndex:1338},{level:2,title:"跨端框架",slug:"跨端框架",normalizedTitle:"跨端框架",charIndex:1372},{level:2,title:"桌面端",slug:"桌面端",normalizedTitle:"桌面端",charIndex:1461},{level:2,title:"低代码 x 微前端",slug:"低代码-x-微前端",normalizedTitle:"低代码 x 微前端",charIndex:1491},{level:2,title:"NodeJS",slug:"nodejs",normalizedTitle:"nodejs",charIndex:1542},{level:3,title:"Framework",slug:"framework",normalizedTitle:"framework",charIndex:639},{level:2,title:"Nginx",slug:"nginx",normalizedTitle:"nginx",charIndex:1646},{level:2,title:"可视化",slug:"可视化",normalizedTitle:"可视化",charIndex:1663},{level:2,title:"文档工具",slug:"文档工具",normalizedTitle:"文档工具",charIndex:1737},{level:2,title:"其它",slug:"其它",normalizedTitle:"其它",charIndex:1807},{level:2,title:"development environment for UI components",slug:"development-environment-for-ui-components",normalizedTitle:"development environment for ui components",charIndex:1852}],headersStr:"HTML / CSS / JavaScript CSS Processor CSS库 项目说明文件 JS库 项目构建和管理工具 设计规范 Web Framework Vue Angular React 插件化 Framework 移动端 小程序 跨端框架 桌面端 低代码 x 微前端 NodeJS Framework Nginx 可视化 文档工具 其它 development environment for UI components",content:"目前来说，对前端基建最重要的两门语言： Go 和 Rust\n\n\n# HTML / CSS / JavaScript\n\n * 菜鸟教程\n * MDN\n * w3cschool\n * 网站地图\n * JavaScript - 简体中文 | English\n * TypeScript - 简体中文 | English\n\n\n# CSS Processor\n\n * Sass/Scss\n * Less\n * Stylus\n\n\n# CSS库\n\n * Bootstrap\n * Tailwind\n\n\n# 项目说明文件\n\n * .editorconfig\n * .prettierrc\n * .gitignore\n * package.json\n * tsconfig.json\n\n\n# JS库\n\n * jQuery\n * swiper\n * Lodash\n\n\n# 项目构建和管理工具\n\n 1. 包管理工具\n    1. npm\n    2. yarn\n 2. 项目构建工具\n    1. Webpack\n    2. Vite\n    3. Gulp\n    4. parcel\n    5. rollup\n 3. 代码转译\n    1. Babel\n    2. PostCSS\n 4. VCS\n    1. Git\n    2. SVN\n\n\n# 设计规范\n\n * Material Design\n * Ant Design\n * Semantic UI\n\n> more\n\n\n# Web Framework\n\n细说vue react angular 区别，快速搞定技术选型！\n\n\n# Vue\n\nVue | 简体中文 | API\n\n# Ecology\n\n * Pinia\n * Axios\n * Vue Router\n * vue-element-admin\n * VueUse\n * Nuxt.JS\n\n# UI 库\n\n * Element Plus\n * Ant Design Of Vue\n * Naive UI\n * Vant\n\n> more\n\n\n# Angular\n\nAngular | API\n\n# Ecology\n\n * CDK\n * RxJS\n * NgRx\n\n# UI 库\n\n * NG-ZORRO\n * PrimeNG\n * Angular Bootstrap\n\n> Plugins: ngx-monaco-editor / tinymce / ngx-permissions / flex-layout / ngx-translate\n\n\n# React\n\nReact | docs\n\n# Ecology\n\n * Redux | redux-toolkit\n * Mobx\n * nextjs\n * remix\n * ice\n * swr\n\n# UI 库\n\n * Ant Design\n\n\n# 插件化 Framework\n\n * umijs\n * Svelte\n * solid\n\n\n# 移动端\n\n * Flutter (开发语言 Dart Github | 中)\n * React Native\n * Ionic + capacitor | Cordova\n\n\n# 小程序\n\n * 微信原生\n * mpvue\n * wepy\n\n\n# 跨端框架\n\n> 简直是神仙打架！ 多端统一框架哪家强？\n\n * Hippy\n * Chameleon\n * Taro\n * WEEX\n * uni-app\n * Rax\n\n\n# 桌面端\n\n * Electron\n * Tauri\n\n\n# 低代码 x 微前端\n\n * qiankun\n * jeecgboot\n * icestark\n\n\n# NodeJS\n\nNodeJS - English | 简体中文\n\n> deno\n\n\n# Framework\n\n * Express\n * Koa\n * NestJS\n * egg\n * Midway\n\n\n# Nginx\n\nNginx\n\n\n# 可视化\n\n * iconfont\n * ECharts\n * AntV\n * Apexcharts\n * three.js\n * d3js\n\n\n# 文档工具\n\n * Vuepress\n * dumi\n\n点击查看\n * Contentlayer\n * MDX\n * Markdoc\n\n\n# 其它\n\n * caniuse\n * astexplorer\n * Mock.js\n\n\n# development environment for UI components\n\n * Storybook\n * Ladle for React\n * Histoire for Vue",normalizedContent:"目前来说，对前端基建最重要的两门语言： go 和 rust\n\n\n# html / css / javascript\n\n * 菜鸟教程\n * mdn\n * w3cschool\n * 网站地图\n * javascript - 简体中文 | english\n * typescript - 简体中文 | english\n\n\n# css processor\n\n * sass/scss\n * less\n * stylus\n\n\n# css库\n\n * bootstrap\n * tailwind\n\n\n# 项目说明文件\n\n * .editorconfig\n * .prettierrc\n * .gitignore\n * package.json\n * tsconfig.json\n\n\n# js库\n\n * jquery\n * swiper\n * lodash\n\n\n# 项目构建和管理工具\n\n 1. 包管理工具\n    1. npm\n    2. yarn\n 2. 项目构建工具\n    1. webpack\n    2. vite\n    3. gulp\n    4. parcel\n    5. rollup\n 3. 代码转译\n    1. babel\n    2. postcss\n 4. vcs\n    1. git\n    2. svn\n\n\n# 设计规范\n\n * material design\n * ant design\n * semantic ui\n\n> more\n\n\n# web framework\n\n细说vue react angular 区别，快速搞定技术选型！\n\n\n# vue\n\nvue | 简体中文 | api\n\n# ecology\n\n * pinia\n * axios\n * vue router\n * vue-element-admin\n * vueuse\n * nuxt.js\n\n# ui 库\n\n * element plus\n * ant design of vue\n * naive ui\n * vant\n\n> more\n\n\n# angular\n\nangular | api\n\n# ecology\n\n * cdk\n * rxjs\n * ngrx\n\n# ui 库\n\n * ng-zorro\n * primeng\n * angular bootstrap\n\n> plugins: ngx-monaco-editor / tinymce / ngx-permissions / flex-layout / ngx-translate\n\n\n# react\n\nreact | docs\n\n# ecology\n\n * redux | redux-toolkit\n * mobx\n * nextjs\n * remix\n * ice\n * swr\n\n# ui 库\n\n * ant design\n\n\n# 插件化 framework\n\n * umijs\n * svelte\n * solid\n\n\n# 移动端\n\n * flutter (开发语言 dart github | 中)\n * react native\n * ionic + capacitor | cordova\n\n\n# 小程序\n\n * 微信原生\n * mpvue\n * wepy\n\n\n# 跨端框架\n\n> 简直是神仙打架！ 多端统一框架哪家强？\n\n * hippy\n * chameleon\n * taro\n * weex\n * uni-app\n * rax\n\n\n# 桌面端\n\n * electron\n * tauri\n\n\n# 低代码 x 微前端\n\n * qiankun\n * jeecgboot\n * icestark\n\n\n# nodejs\n\nnodejs - english | 简体中文\n\n> deno\n\n\n# framework\n\n * express\n * koa\n * nestjs\n * egg\n * midway\n\n\n# nginx\n\nnginx\n\n\n# 可视化\n\n * iconfont\n * echarts\n * antv\n * apexcharts\n * three.js\n * d3js\n\n\n# 文档工具\n\n * vuepress\n * dumi\n\n点击查看\n * contentlayer\n * mdx\n * markdoc\n\n\n# 其它\n\n * caniuse\n * astexplorer\n * mock.js\n\n\n# development environment for ui components\n\n * storybook\n * ladle for react\n * histoire for vue",charsets:{cjk:!0}},{title:"计算机系书籍",frontmatter:{title:"计算机系书籍",date:"2022-11-13T15:28:14.000Z",permalink:"/pages/8d591b/"},regularPath:"/22.Common/62.%E4%B9%A6%E7%B1%8D.html",relativePath:"22.Common/62.书籍.md",key:"v-7b6d445b",path:"/pages/8d591b/",headers:[{level:2,title:"机械工业出版社 之 十大黑暗骑士",slug:"机械工业出版社-之-十大黑暗骑士",normalizedTitle:"机械工业出版社 之 十大黑暗骑士",charIndex:69},{level:2,title:"C",slug:"c",normalizedTitle:"c",charIndex:225},{level:2,title:"C++",slug:"c-2",normalizedTitle:"c++",charIndex:265},{level:2,title:"算法",slug:"算法",normalizedTitle:"算法",charIndex:183},{level:2,title:"Linux",slug:"linux",normalizedTitle:"linux",charIndex:375},{level:2,title:"Frontend",slug:"frontend",normalizedTitle:"frontend",charIndex:403},{level:3,title:"CSS",slug:"css",normalizedTitle:"css",charIndex:416},{level:3,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:438},{level:2,title:"HTTP",slug:"http",normalizedTitle:"http",charIndex:497},{level:2,title:"Java Series",slug:"java-series",normalizedTitle:"java series",charIndex:553},{level:2,title:"设计模式",slug:"设计模式",normalizedTitle:"设计模式",charIndex:101},{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:669},{level:2,title:"软件规范与风格优化",slug:"软件规范与风格优化",normalizedTitle:"软件规范与风格优化",charIndex:727}],headersStr:"机械工业出版社 之 十大黑暗骑士 C C++ 算法 Linux Frontend CSS JavaScript HTTP Java Series 设计模式 Python 软件规范与风格优化",content:"几大计算机系出版社\n\n * 机械工业出版社\n * 人民邮电出版社\n * 電子工業出版社\n * 中国电力出版社\n\nGithub书籍\n\n\n# 机械工业出版社 之 十大黑暗骑士\n\n * 《编译原理》\n * 《设计模式：可复用面向对象软件的基础》\n * 《计算机组成原理》\n * 《深入理解计算机系统》\n * 《计算机科学导论》\n * 《数据库系统概念》\n * 《数据结构与算法分析》\n * 《算法导论》\n * 《软件工程》\n * 《现代操作系统》\n\n\n# C\n\n * 《C Primer Plus》\n * 《C Primer》\n\n\n# C++\n\n * 《C++ Primer Plus》\n * 《C++ Primer》\n\n\n# 算法\n\n * 《剑指Offer》\n * 《算法(第4版)》 谢路云译\n * 《编程珠玑》\n * 《数据结构与算法之美》\n\n\n# Linux\n\n * 《深入Linux内核架构》\n\n\n# Frontend\n\n\n# CSS\n\n * 《CSS权威指南》\n\n\n# JavaScript\n\n * 《JavaScript高级程序设计》\n * 《你不知道的JavaScript》\n\n\n# HTTP\n\n * 《计算机网络 - 自顶向下方法》\n * 《图解HTTP》\n * 《HTTP权威指南》\n\n\n# Java Series\n\n * 《Java 从入门到精通》\n * 《Java核心技术》\n * 《深入理解Java 虚拟机》\n * 《Java并发编程实践》\n\n\n# 设计模式\n\n * 《大话设计模式》\n * 《设计模式之美》\n\n\n# Python\n\n * 《Python编程：从入门到实践》\n * 《Python Cookbook 中文版》\n\n\n# 软件规范与风格优化\n\n * 《代码整洁之道》",normalizedContent:"几大计算机系出版社\n\n * 机械工业出版社\n * 人民邮电出版社\n * 電子工業出版社\n * 中国电力出版社\n\ngithub书籍\n\n\n# 机械工业出版社 之 十大黑暗骑士\n\n * 《编译原理》\n * 《设计模式：可复用面向对象软件的基础》\n * 《计算机组成原理》\n * 《深入理解计算机系统》\n * 《计算机科学导论》\n * 《数据库系统概念》\n * 《数据结构与算法分析》\n * 《算法导论》\n * 《软件工程》\n * 《现代操作系统》\n\n\n# c\n\n * 《c primer plus》\n * 《c primer》\n\n\n# c++\n\n * 《c++ primer plus》\n * 《c++ primer》\n\n\n# 算法\n\n * 《剑指offer》\n * 《算法(第4版)》 谢路云译\n * 《编程珠玑》\n * 《数据结构与算法之美》\n\n\n# linux\n\n * 《深入linux内核架构》\n\n\n# frontend\n\n\n# css\n\n * 《css权威指南》\n\n\n# javascript\n\n * 《javascript高级程序设计》\n * 《你不知道的javascript》\n\n\n# http\n\n * 《计算机网络 - 自顶向下方法》\n * 《图解http》\n * 《http权威指南》\n\n\n# java series\n\n * 《java 从入门到精通》\n * 《java核心技术》\n * 《深入理解java 虚拟机》\n * 《java并发编程实践》\n\n\n# 设计模式\n\n * 《大话设计模式》\n * 《设计模式之美》\n\n\n# python\n\n * 《python编程：从入门到实践》\n * 《python cookbook 中文版》\n\n\n# 软件规范与风格优化\n\n * 《代码整洁之道》",charsets:{cjk:!0}},{title:"Java后台相关网站",frontmatter:{title:"Java后台相关网站",date:"2022-07-27T23:42:30.000Z",permalink:"/pages/d7139e/"},regularPath:"/99.%E6%94%B6%E8%97%8F/08.Java%E5%90%8E%E5%8F%B0%E7%9B%B8%E5%85%B3%E7%BD%91%E7%AB%99.html",relativePath:"99.收藏/08.Java后台相关网站.md",key:"v-795e2903",path:"/pages/d7139e/",headers:[{level:2,title:"Java开发篇",slug:"java开发篇",normalizedTitle:"java开发篇",charIndex:14},{level:3,title:"基础",slug:"基础",normalizedTitle:"基础",charIndex:26},{level:3,title:"Spring",slug:"spring",normalizedTitle:"spring",charIndex:68},{level:3,title:"Database",slug:"database",normalizedTitle:"database",charIndex:240},{level:3,title:"Cache",slug:"cache",normalizedTitle:"cache",charIndex:290},{level:3,title:"Search",slug:"search",normalizedTitle:"search",charIndex:337},{level:3,title:"MQ",slug:"mq",normalizedTitle:"mq",charIndex:363},{level:3,title:"监控告警",slug:"监控告警",normalizedTitle:"监控告警",charIndex:395},{level:3,title:"模板引擎",slug:"模板引擎",normalizedTitle:"模板引擎",charIndex:446},{level:2,title:"DevOps",slug:"devops",normalizedTitle:"devops",charIndex:466},{level:3,title:"Docker",slug:"docker",normalizedTitle:"docker",charIndex:477},{level:3,title:"Kubernetes",slug:"kubernetes",normalizedTitle:"kubernetes",charIndex:513},{level:3,title:"CI / CD",slug:"ci-cd",normalizedTitle:"ci / cd",charIndex:557}],headersStr:"Java开发篇 基础 Spring Database Cache Search MQ 监控告警 模板引擎 DevOps Docker Kubernetes CI / CD",content:"后端架构师技术图谱\n\n\n# Java开发篇\n\n\n# 基础\n\n * Java SE8 APIs\n * Java EE8 APIs\n\n\n# Spring\n\n * Spring | APIs\n * SpringBoot | APIs\n * SpringCloud [ Ribbon / OpenFeign / Gateway / Sleuth(Zipkin) ]\n * SpringCloud Alibaba Docs [ Nacos / Sentinel / Seata ]\n\n\n# Database\n\n * MySQL\n * Mybatis\n * Mybatis-Plus\n\n\n# Cache\n\n * redis English | 简体中文\n * redisson\n\n\n# Search\n\nElasticSearch\n\n\n# MQ\n\n * RabbitMQ\n * RocketMQ\n\n\n# 监控告警\n\n * Promethous\n * Grafana\n * Altermanager\n\n\n# 模板引擎\n\nThymeleaf\n\n\n# DevOps\n\n\n# Docker\n\n * Docker\n * Docker Hub\n\n\n# Kubernetes\n\n * Kubernetes\n * Kubesphere\n\n\n# CI / CD\n\nJenkins",normalizedContent:"后端架构师技术图谱\n\n\n# java开发篇\n\n\n# 基础\n\n * java se8 apis\n * java ee8 apis\n\n\n# spring\n\n * spring | apis\n * springboot | apis\n * springcloud [ ribbon / openfeign / gateway / sleuth(zipkin) ]\n * springcloud alibaba docs [ nacos / sentinel / seata ]\n\n\n# database\n\n * mysql\n * mybatis\n * mybatis-plus\n\n\n# cache\n\n * redis english | 简体中文\n * redisson\n\n\n# search\n\nelasticsearch\n\n\n# mq\n\n * rabbitmq\n * rocketmq\n\n\n# 监控告警\n\n * promethous\n * grafana\n * altermanager\n\n\n# 模板引擎\n\nthymeleaf\n\n\n# devops\n\n\n# docker\n\n * docker\n * docker hub\n\n\n# kubernetes\n\n * kubernetes\n * kubesphere\n\n\n# ci / cd\n\njenkins",charsets:{cjk:!0}},{title:"颜色",frontmatter:{title:"颜色",date:"2022-08-07T17:30:32.000Z",permalink:"/pages/944683/"},regularPath:"/99.%E6%94%B6%E8%97%8F/12.%E9%A2%9C%E8%89%B2.html",relativePath:"99.收藏/12.颜色.md",key:"v-43bc1f77",path:"/pages/944683/",headersStr:null,content:"中国红\n\nHEX FF0000 RGB 255,0,0\n\n莫兰迪色\n\nHEX 94A58D RGB 148,165,141\n\n蒂芙尼蓝\n\nHEX 81D8D0 RGB 129,216,208\n\n爱马仕橙\n\nHEX E85827 RGB 232,88,39\n\n马耳他蓝\n\nHEX 517693 RGB 81,118,147\n\n拿坡里黄\n\nHEX FADA5E RGB 250,218,94\n\n木乃伊棕\n\nHEX 81D8D0 RGB 143,75,40\n\n草莓粉红\n\nHEX C7A4C4 RGB\n\n紫菀花篮\n\nHEX 9BACD8 RGB 155,172,216\n\n山与黄昏\n\nHEX C0C8C8\n\n仰望\n\nHEX 016471\n\n- name: 中国红\n  desc: HEX FF0000 RGB 255,0,0\n  bgColor: '#FF0000'\n- name: 莫兰迪色\n  desc: HEX 94A58D RGB 148,165,141\n  bgColor: '#94A58D'\n- name: 蒂芙尼蓝\n  desc: HEX 81D8D0 RGB 129,216,208\n  bgColor: '#81D8D0'\n- name: 爱马仕橙\n  desc: HEX E85827 RGB 232,88,39\n  bgColor: '#E85827'\n- name: 马耳他蓝\n  desc: HEX 517693 RGB 81,118,147\n  bgColor: '#517693'\n- name: 拿坡里黄\n  desc: HEX FADA5E RGB 250,218,94\n  bgColor: '#FADA5E'\n- name: 木乃伊棕\n  desc: HEX 81D8D0 RGB 143,75,40\n  bgColor: '#8F4B28'\n- name: 草莓粉红\n  desc: HEX C7A4C4 RGB \n  bgColor: '#C7A4C4'\n- name: 紫菀花篮\n  desc: HEX 9BACD8 RGB 155,172,216\n  bgColor: '#9BACD8'\n- name: 山与黄昏\n  desc: HEX C0C8C8\n  bgColor: '#C0C8C8'\n- name: 仰望\n  desc: HEX 016471\n  bgColor: '#016471'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n",normalizedContent:"中国红\n\nhex ff0000 rgb 255,0,0\n\n莫兰迪色\n\nhex 94a58d rgb 148,165,141\n\n蒂芙尼蓝\n\nhex 81d8d0 rgb 129,216,208\n\n爱马仕橙\n\nhex e85827 rgb 232,88,39\n\n马耳他蓝\n\nhex 517693 rgb 81,118,147\n\n拿坡里黄\n\nhex fada5e rgb 250,218,94\n\n木乃伊棕\n\nhex 81d8d0 rgb 143,75,40\n\n草莓粉红\n\nhex c7a4c4 rgb\n\n紫菀花篮\n\nhex 9bacd8 rgb 155,172,216\n\n山与黄昏\n\nhex c0c8c8\n\n仰望\n\nhex 016471\n\n- name: 中国红\n  desc: hex ff0000 rgb 255,0,0\n  bgcolor: '#ff0000'\n- name: 莫兰迪色\n  desc: hex 94a58d rgb 148,165,141\n  bgcolor: '#94a58d'\n- name: 蒂芙尼蓝\n  desc: hex 81d8d0 rgb 129,216,208\n  bgcolor: '#81d8d0'\n- name: 爱马仕橙\n  desc: hex e85827 rgb 232,88,39\n  bgcolor: '#e85827'\n- name: 马耳他蓝\n  desc: hex 517693 rgb 81,118,147\n  bgcolor: '#517693'\n- name: 拿坡里黄\n  desc: hex fada5e rgb 250,218,94\n  bgcolor: '#fada5e'\n- name: 木乃伊棕\n  desc: hex 81d8d0 rgb 143,75,40\n  bgcolor: '#8f4b28'\n- name: 草莓粉红\n  desc: hex c7a4c4 rgb \n  bgcolor: '#c7a4c4'\n- name: 紫菀花篮\n  desc: hex 9bacd8 rgb 155,172,216\n  bgcolor: '#9bacd8'\n- name: 山与黄昏\n  desc: hex c0c8c8\n  bgcolor: '#c0c8c8'\n- name: 仰望\n  desc: hex 016471\n  bgcolor: '#016471'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n",charsets:{cjk:!0}},{title:"Home",frontmatter:{home:!0,heroText:"捡捡记记",heroImage:"./imgs/logo.png",tagline:null,actionText:"立刻进入 →",actionLink:"/pages/d657ad/",bannerBg:"none",postList:"none"},regularPath:"/",relativePath:"index.md",key:"v-2863befc",path:"/",lastUpdated:"9/1/2022, 2:06:35 AM",lastUpdatedTimestamp:1661969195e3,headersStr:null,content:"",normalizedContent:"",charsets:{}}],themeConfig:{nav:[{text:"Home",link:"/pages/d657ad/"},{text:"C++",link:"/pages/e0e155/"},{text:"Algorithm",link:"/pages/67419f/"},{text:"Common",link:"/nav7/"},{text:"Favorites",link:"/pages/3894e9/"},{text:"Github",link:"https://github.com/"}],searchMaxSuggestions:10,category:!1,tag:!1,archive:!1,pageStyle:"line",contentBgStyle:6,sidebar:{"/00.目录页/":[["01.nav1.md","前端核心","/nav1/"],["02.nav2.md","前端框架","/nav2/"],["03.nav3.md","Java后端","/nav3/"],["04.nav4.md","算法","/nav4/"],["05.nav5.md","练习","/nav5/"],["06.nav6.md","C++","/nav6/"],["07.nav7.md","Common","/nav7/"],["08.nav8.md","nav8","/pages/c4fc16/"],["09.nav9.md","nav9","/pages/2e8ff4/"],["10.nav10.md","收藏","/nav10/"],["20.Direction.md","方向","/pages/d657ad/"]],catalogue:{nav1:"/nav1/",nav2:"/nav2/",nav3:"/nav3/",nav4:"/nav4/",nav5:"/nav5/",nav6:"/nav6/",nav7:"/nav7/",nav10:"/nav10/"},"/02.前端核心/":[{title:"HTML",collapsable:!0,children:[["02.HTML/02.HTML基础.md","HTML 基础","/pages/6610c3/"],["02.HTML/04.SVG.md","SVG","/pages/8d8cc5/"],["02.HTML/06.Canvas.md","Canvas","/pages/ff116a/"]]},{title:"CSS",collapsable:!0,children:[["04.CSS/02.CSS基础.md","CSS 基础","/pages/ebc097/"],["04.CSS/04.布局.md","布局","/pages/de9f63/"],["04.CSS/06.预处理语言.md","预处理语言","/pages/291205/"],["04.CSS/08.CSS进阶.md","CSS 进阶","/pages/5f4f4a/"]]},{title:"JAVASCRIPT",collapsable:!0,children:[["06.JAVASCRIPT/02.JS相关.md","JS相关","/pages/023981/"],["06.JAVASCRIPT/04.DOM.md","DOM","/pages/2f5334/"],["06.JAVASCRIPT/06.JS正则表达式.md","JS正则表达式","/pages/fdd069/"],["06.JAVASCRIPT/08.JS执行上下文.md","【重点】JS执行上下文","/pages/a65e15/"],["06.JAVASCRIPT/10.JS执行机制.md","【重点】JS执行机制","/pages/0f41a0/"],["06.JAVASCRIPT/12.原型链和Prototype.md","【重点】原型链和Prototype","/pages/49be71/"],["06.JAVASCRIPT/14.JS类型判断.md","JS类型判断","/pages/19b349/"]]},{title:"TYPESCRIPT",collapsable:!0,children:[["08.TYPESCRIPT/02.TS类型.md","TS类型","/pages/b02d31/"],["08.TYPESCRIPT/04.TS类型体操.md","TS类型体操","/pages/f1a087/"],["08.TYPESCRIPT/06.TS装饰器.md","TS装饰器","/pages/71a516/"],["08.TYPESCRIPT/08.声明文件.md","声明文件","/pages/3672e4/"],["08.TYPESCRIPT/10.tsconfigjson.md","tsconfig.json","/pages/fvdhb4/"]]},["10.浏览器.md","浏览器","/pages/bfc8a9/"],{title:"项目构建",collapsable:!0,children:[["12.项目构建/01.模块化.md","模块化","/pages/0571cf/"],["12.项目构建/02.项目构建工具.md","项目构建工具","/pages/fdde5d/"],["12.项目构建/04.包管理工具.md","项目管理工具","/pages/2eb00d/"],["12.项目构建/05.babel.md","babel","/pages/40a7d0/"],["12.项目构建/06.webpack.md","webpack","/pages/340243/"],["12.项目构建/08.rollup.md","rollup","/pages/5e472d/"],["12.项目构建/10.vite.md","vite","/pages/db215c/"],["12.项目构建/12.esbuild.md","esbuild","/pages/c14805/"]]},["14.HTTP.md","HTTP","/pages/008666/"]],"/04.前端框架/":[{title:"NodeJS",collapsable:!0,children:[["02.NodeJS/02.JS与Node异同.md","JS与Node异同","/pages/ca7770/"]]},{title:"Vue",collapsable:!0,children:[["04.Vue/02.Vue笔记.md","Vue笔记","/pages/c68f27/"],["04.Vue/04.vuepress搭建博客.md","vuepress搭建博客","/pages/38a877/"]]},{title:"Angular",collapsable:!0,children:[["06.Angular/02.NG基础.md","NG基础","/pages/9b2b82/"],["06.Angular/04.方法执行顺序.md","方法执行顺序","/pages/8b348e/"],["06.Angular/06.NG变更检测.md","NG变更检测","/pages/91efda/"],["06.Angular/08.RxJS基础.md","RxJS基础","/pages/d644ee/"],["06.Angular/10.NgRx基础.md","NgRx基础","/pages/370feb/"]]},{title:"React",collapsable:!0,children:[]},["10.移动端框架.md","移动端框架","/pages/151484/"],["14.Nginx.md","Nginx","/pages/5bfd77/"]],"/06.Java后端/":[{title:"SpringBoot2核心技术",collapsable:!0,children:[["02.SpringBoot2核心技术/02.Web开发.md","Web开发","/pages/ac114b/"],["02.SpringBoot2核心技术/04.数据访问.md","数据访问","/pages/445c60/"],["02.SpringBoot2核心技术/06.单元测试.md","单元测试","/pages/ab5029/"],["02.SpringBoot2核心技术/08.指标监控.md","指标监控","/pages/391d50/"],["02.SpringBoot2核心技术/10.原理解析.md","原理解析","/pages/2ced34/"]]},{title:"微服务之谷粒商城",collapsable:!0,children:[["04.微服务之谷粒商城/02.微服务简介.md","微服务简介","/pages/74f9dc/"],["04.微服务之谷粒商城/04.服务端环境搭建.md","服务端环境搭建","/pages/ef266f/"],["04.微服务之谷粒商城/06.视频教程目录.md","视频教程目录","/pages/017f58/"],["04.微服务之谷粒商城/08.知识点详解.md","知识点详解","/pages/47e1e1/"],["04.微服务之谷粒商城/10.中间件使用.md","中间价使用","/pages/93a4e4/"]]}],"/08.算法/":[["02.数据结构.md","数据结构","/pages/67419f/"],["04.note.md","note","/pages/d00a7e/"]],"/10.设计模式/":[["02.设计原则.md","设计原则","/pages/b9afd2/"],["04.设计模式.md","设计模式","/pages/65ccfc/"]],"/20.C++/":[["02.note.md","note","/pages/e0e155/"],["04.cmake.md","cmake","/pages/353244/"],["30.vscode.md","vscode","/pages/228ce3/"]],"/22.Common/":[["02.日常可用.md","日常可用","/pages/263d7a/"],["04.命令行.md","命令行","/pages/101c12/"],["06.Git.md","Git","/pages/87173b/"],["12.Linux.md","Linux","/pages/77064b/"],["60.软件.md","软件","/pages/d4b4c0/"],["62.书籍.md","计算机系书籍","/pages/8d591b/"]],"/99.收藏/":[["04.博客文章.md","博客文章","/pages/3894e9/"],["06.前端相关网站.md","前端相关网站","/pages/bceabe/"],["08.Java后台相关网站.md","Java后台相关网站","/pages/d7139e/"],["12.颜色.md","颜色","/pages/944683/"]]},sidebarDepth:4,updateBar:{showToArticle:!1},footer:{createYear:2022,copyrightInfo:'<a href="https://github.com/xugaoyi/vuepress-theme-vdoing/blob/master/LICENSE">MIT Licence</a>'},author:{name:"行尸走肉",link:"https://github.com/"},lastUpdated:"上次更新"}};var Fs=t(92),Js=t(93),Vs=t(11);var qs={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:r}}=n;return!(e||!1===t||!0===r)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(Vs.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(Vs.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(Vs.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let r=0,a=n.length;r<a;r++){const{frontmatter:{categories:a,tags:i}}=n[r];"array"===Object(Vs.n)(a)&&a.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[r]))}),"array"===Object(Vs.n)(i)&&i.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[r]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};qt.component(Fs.default),qt.component(Js.default);function Hs(n){return n.toString().padStart(2,"0")}t(237);qt.component("Badge",()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,414))),qt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,92))),qt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,93)));t(238);var Gs=[({Vue:n,options:e,router:t,siteData:r})=>{r.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${Hs(n.getUTCMonth()+1)}-${Hs(n.getUTCDate())} ${Hs(n.getUTCHours())}:${Hs(n.getUTCMinutes())}:${Hs(n.getUTCSeconds())}`}(e)),t?n.author=t:r.themeConfig.author&&(n.author=r.themeConfig.author)}),n.mixin(qs)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{}],Ws=[];class Zs extends class{constructor(){this.store=new qt({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){qt.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(Zs.prototype,{getPageAsyncComponent:is,getLayoutAsyncComponent:os,getAsyncComponent:ss,getVueComponent:ls});var Xs={install(n){const e=new Zs;n.$vuepress=e,n.prototype.$vuepress=e}};function Ks(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Qs={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return us("pageKey",e),qt.component(e)||qt.component(e,is(e)),qt.component(e)?n(e):n("")}},Ys={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},nl={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},el=(t(239),t(240),Object($s.a)(nl,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),tl={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};qt.config.productionTip=!1,qt.use(Jo),qt.use(Xs),qt.mixin(function(n,e,t=qt){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const r=new(n(t.$vuepress.$get("siteData"))),a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),i={};return Object.keys(a).reduce((n,e)=>(e.startsWith("$")&&(n[e]=a[e].get),n),i),{computed:i}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const r in n)"/"===r?t=n[r]:0===this.$page.path.indexOf(r)&&(e=n[r]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Ns)),qt.component("Content",Qs),qt.component("ContentSlotsDistributor",Ys),qt.component("OutboundLink",el),qt.component("ClientOnly",tl),qt.component("Layout",os("Layout")),qt.component("NotFound",os("NotFound")),qt.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.7",hash:"1619c34"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Ns.routerBase||Ns.base,t=new Jo({base:e,mode:"history",fallback:!1,routes:Ls,scrollBehavior:(n,e,t)=>t||(n.hash?!qt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,r)=>{if(Ks(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Ks(n,t)?r(t):r()}else r();else{const t=e.path+"/",a=e.path+".html";Ks(n,a)?r(a):Ks(n,t)?r(t):r()}})}(t);const r={};try{await Promise.all(Gs.filter(n=>"function"==typeof n).map(e=>e({Vue:qt,options:r,router:t,siteData:Ns,isServer:n})))}catch(n){console.error(n)}return{app:new qt(Object.assign(r,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Ws.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);