(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{395:function(v,_,t){"use strict";t.r(_);var a=t(6),r=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"数据结构类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据结构类型"}},[v._v("#")]),v._v(" 数据结构类型")]),v._v(" "),_("ol",[_("li",[v._v("数组 （Array）")]),v._v(" "),_("li",[v._v("栈 （Stack）")]),v._v(" "),_("li",[v._v("队列 （Queue）")]),v._v(" "),_("li",[v._v("链表 （Linked List）")]),v._v(" "),_("li",[v._v("树 (Tree)（二叉树、森林）")]),v._v(" "),_("li",[v._v("散列表 (Hash)")]),v._v(" "),_("li",[v._v("堆 (Heap) (完全二叉树)")]),v._v(" "),_("li",[v._v("图 (Graph)")])]),v._v(" "),_("h2",{attrs:{id:"逻辑结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#逻辑结构"}},[v._v("#")]),v._v(" 逻辑结构")]),v._v(" "),_("p",[v._v("简单来说逻辑结构就是数据之间的关系，逻辑结构大概统一的可以分成两种：线性结构、非线性结构。")]),v._v(" "),_("ul",[_("li",[v._v("线性结构：是一个有序数据元素的集合。其中数据元素之间的关系是一对一的关系，即除了第一个和最后一个数据元素之外，其它数据元素都是首尾相接的。 常用的线性结构优：栈、队列、链表、线性表。")]),v._v(" "),_("li",[v._v("非线性结构：各个数据元素不在保持在一个线性序列中，每个数据元素可能与零个或者多个其它数据元素发生联系。")])]),v._v(" "),_("p",[v._v("常见的非线性结构有：二维数组、树等。")]),v._v(" "),_("h2",{attrs:{id:"存储结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#存储结构"}},[v._v("#")]),v._v(" 存储结构")]),v._v(" "),_("p",[v._v("逻辑结构指的是数据间的关系，而存储结构是逻辑结构用计算机语言的实现。常见的存储结构有：顺序存储、链式存储、索引存储以及散列存储。")]),v._v(" "),_("p",[v._v("例如：数组在内存中的位置是连续的，它就是顺序存储；")]),v._v(" "),_("p",[v._v("链表是主动建立数据间的关联关系的，在内存中却不一定是连续的，它就是链式存储；")]),v._v(" "),_("p",[v._v("还有顺序和逻辑上都不存在顺序关系，但是你可以通过一定的方式去访问它的哈希表，数据散列存储。")])])}),[],!1,null,null,null);_.default=r.exports}}]);